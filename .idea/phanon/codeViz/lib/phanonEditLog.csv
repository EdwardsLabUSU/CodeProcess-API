"a","Paste",,,"1624905571234","diff.py","1.1.7 for 2019-2020 @t1"
"p","def debug(s):
            #     print(s)
            pass

        class DiffHelper:
            def __init__(self, charjunk=None):
                self.charjunk = charjunk

            def _fancy_replace(self, abidx, a, alo, ahi, b, blo, bhi):
                r""""""
            When replacing one block of lines with another, search the blocks
            for *similar* lines; the best-matching pair (if any) is used as a
            synch point, and intraline difference marking is done on the
            similar pair. Lots of work, but often worth it.
            Example:
            >>> d = Differ()
            >>> results = d._fancy_replace(['abcDefghiJkl\n'], 0, 1,
            ...                            ['abcdefGhijkl\n'], 0, 1)
            >>> print(''.join(results), end="""")
            - abcDefghiJkl
            ?    ^  ^  ^
            + abcdefGhijkl
            ?    ^  ^  ^
            """"""

                # don't synch up unless the lines have a similarity score of at
                # least cutoff; best_ratio tracks the best score seen so far
                best_ratio, cutoff = 0.40, 0.55
                cruncher = difflib.SequenceMatcher(self.charjunk)
                eqi, eqj = None, None  # 1st indices of equal lines (if any)

                # search for the pair that matches best without being identical
                # (identical lines must be junk lines, & we don't want to synch up
                # on junk -- unless we have to)
                for j in range(blo, bhi):
                    bj = b[j]
                    cruncher.set_seq2(bj)
                    for i in range(alo, ahi):
                        ai = a[i]
                        if ai == bj:
                            if eqi is None:
                                eqi, eqj = i, j
                            continue
                        cruncher.set_seq1(ai)
                        # computing similarity is expensive, so use the quick
                        # upper bounds first -- have seen this speed up messy
                        # compares by a factor of 3.
                        # note that ratio() is only expensive to compute the first
                        # time it's called on a sequence pair; the expensive part
                        # of the computation is cached by cruncher
                        if cruncher.real_quick_ratio() > best_ratio and \
                                cruncher.quick_ratio() > best_ratio and \
                                cruncher.ratio() > best_ratio:
                            best_ratio, best_i, best_j = cruncher.ratio(), i, j
                if best_ratio < cutoff:
                    # no non-identical ""pretty close"" pair
                    if eqi is None:
                        # no identical pair either -- treat it as a straight replace
                        # TODO fix this
                        #                 debug('here')
                        #                 yield None
                        abidx[0] += sum([len(a[ali]) for ali in range(alo, ahi)])
                        abidx[1] += sum([len(b[bli]) for bli in range(blo, bhi)])
                        #                 abidx[1] += bhi-blo
                        #                 debug(' '.join(['xx', str(ahi), str(alo), str(bhi), str(blo)]))
                        #                 yield from self._plain_replace(a, alo, ahi, b, blo, bhi)
                        return
                    # no close pair, but an identical pair -- synch up on that
                    best_i, best_j, best_ratio = eqi, eqj, 1.0
                else:
                    # there's a close pair, so forget the identical pair (if any)
                    eqi = None

                # a[best_i] very similar to b[best_j]; eqi is None iff they're not
                # identical

                # pump out diffs from before the synch point
                debug('yy')
                yield from self._fancy_helper(abidx, a, alo, best_i, b, blo, best_j)

                # do intraline marking on the synch pair
                aelt, belt = a[best_i], b[best_j]
                #         debug('synch pair:', aelt, belt)
                if eqi is None:
                    # pump out a '-', '?', '+', '?' quad for the synched lines
                    atags = btags = """"
                    cruncher.set_seqs(aelt, belt)
                    debug('zz')
                    for tag, ai1, ai2, bj1, bj2 in cruncher.get_opcodes():
                        la, lb = ai2 - ai1, bj2 - bj1
                        #                 debug(' '.join(['zz', tag, a, b]))#a[abidx[0]], b[abidx[1]]]))
                        debug(' '.join(['zz', tag, str(abidx[0]), str(abidx[1]), str(la), str(lb)]))
                        #                 print(abidx)
                        if tag == 'replace':
                            atags += '^' * la
                            btags += '^' * lb
                            abidx[0] += la
                            abidx[1] += lb
                        elif tag == 'delete':
                            atags += '-' * la
                            abidx[0] += la
                        elif tag == 'insert':
                            btags += '+' * lb
                            abidx[1] += lb
                        elif tag == 'equal':
                            yield (abidx[0], abidx[1], la)
                            abidx[0] += la
                            abidx[1] += la
                            atags += ' ' * la
                            btags += ' ' * lb
                        else:
                            raise ValueError('unknown tag %r' % (tag,))
                #             yield from self._qformat(aelt, belt, atags, btags)
                else:
                    # the synch pair is identical
                    # TODO fix
                    debug('ww')
                    yield (abidx[0], abidx[1], len(aelt))
                #             yield '  ' + aelt

                # pump out diffs from after the synch point
                debug('gg')
                yield from self._fancy_helper(abidx, a, best_i + 1, ahi, b, best_j + 1, bhi)

            def _fancy_helper(self, abidx, a, alo, ahi, b, blo, bhi):
                g = []
                if alo < ahi:
                    debug('hh')
                    if blo < bhi:
                        #                 g = self._fancy_replace(abidx, a, alo, ahi, b, blo, bhi)
                        yield from self._fancy_replace(abidx, a, alo, ahi, b, blo, bhi)
                    else:
                        debug('ii')
                        #                 abidx[0] += ahi-alo
                        abidx[0] += sum([len(a[ali]) for ali in range(alo, ahi)])
                #                 abidx[1] += sum([len(b[bli]) for bli in range(blo, bhi)])

                #                 abidx[1] += bhi-blo
                #                 print('dump')
                #                 g = self._dump('-', a, alo, ahi)
                elif blo < bhi:
                    debug('jj')
                    #             abidx[0] += ahi-alo
                    #             abidx[1] += bhi-blo
                    #             abidx[0] += sum([len(a[ali]) for ali in range(alo, ahi)])
                    abidx[1] += sum([len(b[bli]) for bli in range(blo, bhi)])
            #             print('dump')
            #             g = self._dump('+', b, blo, bhi)

            #         yield from g

        def test(linejunk, a, b):
            blocks = []
            cruncher = difflib.SequenceMatcher(linejunk, a, b)
            ai = 0
            bi = 0
            helper = DiffHelper()
            for tag, alo, ahi, blo, bhi in cruncher.get_opcodes():
                astr = ''.join(a[alo:ahi])
                bstr = ''.join(b[blo:bhi])
                #         print(tag, alo, ahi, blo, bhi, astr, bstr)
                if tag == 'replace':
                    yield from helper._fancy_replace([ai, bi], a, alo, ahi, b, blo, bhi)
                    ai += len(astr)
                    bi += len(bstr)
                #             g = self._fancy_replace(a, alo, ahi, b, blo, bhi)
                elif tag == 'delete':
                    # in a
                    ai += len(astr)
                #             g = self._dump('-', a, alo, ahi)
                elif tag == 'insert':
                    # in b
                    bi += len(bstr)
                #             g = self._dump('+', b, blo, bhi)
                elif tag == 'equal':
                    #             blocks.append((ai, bi, len(astr)))
                    block = (ai, bi, len(astr))
                    ai += len(astr)
                    bi += len(astr)
                    yield block
                else:
                    raise ValueError('unknown tag %r' % (tag,))

            return blocks
        newline = True
        blocks = test(None, _final.splitlines(newline), _snap.splitlines(newline))",,"0","1624905571235","diff.py","1.1.7 for 2019-2020 @t1"
"e","def debug(s):
    #     print(s)
    pass

class DiffHelper:
    def __init__(self, charjunk=None):
        self.charjunk = charjunk

    def _fancy_replace(self, abidx, a, alo, ahi, b, blo, bhi):
        r""""""
    When replacing one block of lines with another, search the blocks
    for *similar* lines; the best-matching pair (if any) is used as a
    synch point, and intraline difference marking is done on the
    similar pair. Lots of work, but often worth it.
    Example:
    >>> d = Differ()
    >>> results = d._fancy_replace(['abcDefghiJkl\n'], 0, 1,
    ...                            ['abcdefGhijkl\n'], 0, 1)
    >>> print(''.join(results), end="""")
    - abcDefghiJkl
    ?    ^  ^  ^
    + abcdefGhijkl
    ?    ^  ^  ^
    """"""

        # don't synch up unless the lines have a similarity score of at
        # least cutoff; best_ratio tracks the best score seen so far
        best_ratio, cutoff = 0.40, 0.55
        cruncher = difflib.SequenceMatcher(self.charjunk)
        eqi, eqj = None, None  # 1st indices of equal lines (if any)

        # search for the pair that matches best without being identical
        # (identical lines must be junk lines, & we don't want to synch up
        # on junk -- unless we have to)
        for j in range(blo, bhi):
            bj = b[j]
            cruncher.set_seq2(bj)
            for i in range(alo, ahi):
                ai = a[i]
                if ai == bj:
                    if eqi is None:
                        eqi, eqj = i, j
                    continue
                cruncher.set_seq1(ai)
                # computing similarity is expensive, so use the quick
                # upper bounds first -- have seen this speed up messy
                # compares by a factor of 3.
                # note that ratio() is only expensive to compute the first
                # time it's called on a sequence pair; the expensive part
                # of the computation is cached by cruncher
                if cruncher.real_quick_ratio() > best_ratio and \
                        cruncher.quick_ratio() > best_ratio and \
                        cruncher.ratio() > best_ratio:
                    best_ratio, best_i, best_j = cruncher.ratio(), i, j
        if best_ratio < cutoff:
            # no non-identical ""pretty close"" pair
            if eqi is None:
                # no identical pair either -- treat it as a straight replace
                # TODO fix this
                #                 debug('here')
                #                 yield None
                abidx[0] += sum([len(a[ali]) for ali in range(alo, ahi)])
                abidx[1] += sum([len(b[bli]) for bli in range(blo, bhi)])
                #                 abidx[1] += bhi-blo
                #                 debug(' '.join(['xx', str(ahi), str(alo), str(bhi), str(blo)]))
                #                 yield from self._plain_replace(a, alo, ahi, b, blo, bhi)
                return
            # no close pair, but an identical pair -- synch up on that
            best_i, best_j, best_ratio = eqi, eqj, 1.0
        else:
            # there's a close pair, so forget the identical pair (if any)
            eqi = None

        # a[best_i] very similar to b[best_j]; eqi is None iff they're not
        # identical

        # pump out diffs from before the synch point
        debug('yy')
        yield from self._fancy_helper(abidx, a, alo, best_i, b, blo, best_j)

        # do intraline marking on the synch pair
        aelt, belt = a[best_i], b[best_j]
        #         debug('synch pair:', aelt, belt)
        if eqi is None:
            # pump out a '-', '?', '+', '?' quad for the synched lines
            atags = btags = """"
            cruncher.set_seqs(aelt, belt)
            debug('zz')
            for tag, ai1, ai2, bj1, bj2 in cruncher.get_opcodes():
                la, lb = ai2 - ai1, bj2 - bj1
                #                 debug(' '.join(['zz', tag, a, b]))#a[abidx[0]], b[abidx[1]]]))
                debug(' '.join(['zz', tag, str(abidx[0]), str(abidx[1]), str(la), str(lb)]))
                #                 print(abidx)
                if tag == 'replace':
                    atags += '^' * la
                    btags += '^' * lb
                    abidx[0] += la
                    abidx[1] += lb
                elif tag == 'delete':
                    atags += '-' * la
                    abidx[0] += la
                elif tag == 'insert':
                    btags += '+' * lb
                    abidx[1] += lb
                elif tag == 'equal':
                    yield (abidx[0], abidx[1], la)
                    abidx[0] += la
                    abidx[1] += la
                    atags += ' ' * la
                    btags += ' ' * lb
                else:
                    raise ValueError('unknown tag %r' % (tag,))
        #             yield from self._qformat(aelt, belt, atags, btags)
        else:
            # the synch pair is identical
            # TODO fix
            debug('ww')
            yield (abidx[0], abidx[1], len(aelt))
        #             yield '  ' + aelt

        # pump out diffs from after the synch point
        debug('gg')
        yield from self._fancy_helper(abidx, a, best_i + 1, ahi, b, best_j + 1, bhi)

    def _fancy_helper(self, abidx, a, alo, ahi, b, blo, bhi):
        g = []
        if alo < ahi:
            debug('hh')
            if blo < bhi:
                #                 g = self._fancy_replace(abidx, a, alo, ahi, b, blo, bhi)
                yield from self._fancy_replace(abidx, a, alo, ahi, b, blo, bhi)
            else:
                debug('ii')
                #                 abidx[0] += ahi-alo
                abidx[0] += sum([len(a[ali]) for ali in range(alo, ahi)])
        #                 abidx[1] += sum([len(b[bli]) for bli in range(blo, bhi)])

        #                 abidx[1] += bhi-blo
        #                 print('dump')
        #                 g = self._dump('-', a, alo, ahi)
        elif blo < bhi:
            debug('jj')
            #             abidx[0] += ahi-alo
            #             abidx[1] += bhi-blo
            #             abidx[0] += sum([len(a[ali]) for ali in range(alo, ahi)])
            abidx[1] += sum([len(b[bli]) for bli in range(blo, bhi)])
    #             print('dump')
    #             g = self._dump('+', b, blo, bhi)

    #         yield from g

def test(linejunk, a, b):
    blocks = []
    cruncher = difflib.SequenceMatcher(linejunk, a, b)
    ai = 0
    bi = 0
    helper = DiffHelper()
    for tag, alo, ahi, blo, bhi in cruncher.get_opcodes():
        astr = ''.join(a[alo:ahi])
        bstr = ''.join(b[blo:bhi])
        #         print(tag, alo, ahi, blo, bhi, astr, bstr)
        if tag == 'replace':
            yield from helper._fancy_replace([ai, bi], a, alo, ahi, b, blo, bhi)
            ai += len(astr)
            bi += len(bstr)
        #             g = self._fancy_replace(a, alo, ahi, b, blo, bhi)
        elif tag == 'delete':
            # in a
            ai += len(astr)
        #             g = self._dump('-', a, alo, ahi)
        elif tag == 'insert':
            # in b
            bi += len(bstr)
        #             g = self._dump('+', b, blo, bhi)
        elif tag == 'equal':
            #             blocks.append((ai, bi, len(astr)))
            block = (ai, bi, len(astr))
            ai += len(astr)
            bi += len(astr)
            yield block
        else:
            raise ValueError('unknown tag %r' % (tag,))

    return blocks
newline = True
blocks = test(None, _final.splitlines(newline), _snap.splitlines(newline))","","0","1624905571258","diff.py","1.1.7 for 2019-2020 @t1"
"e","
","","43","1624905571336","diff.py","1.1.7 for 2019-2020 @t1"
"e"," \","","2025","1624905571342","diff.py","1.1.7 for 2019-2020 @t1"
"e",""," \","2025","1624905571346","diff.py","1.1.7 for 2019-2020 @t1"
"e"," \","","2091","1624905571353","diff.py","1.1.7 for 2019-2020 @t1"
"e",""," \","2091","1624905571357","diff.py","1.1.7 for 2019-2020 @t1"
"e","
","","6395","1624905571363","diff.py","1.1.7 for 2019-2020 @t1"
"e","

","","7532","1624905571369","diff.py","1.1.7 for 2019-2020 @t1"
"a","Delete",,,"1624905575089","diff.py","1.1.7 for 2019-2020 @t1"
"e","","def debug(s):
    #     print(s)
    pass
","0","1624905575100","diff.py","1.1.7 for 2019-2020 @t1"
"a","Delete",,,"1624905575363","diff.py","1.1.7 for 2019-2020 @t1"
"e","","
","0","1624905575373","diff.py","1.1.7 for 2019-2020 @t1"
"a","Delete",,,"1624905575715","diff.py","1.1.7 for 2019-2020 @t1"
"e","","
","0","1624905575727","diff.py","1.1.7 for 2019-2020 @t1"
"a","Move Caret to Line Start",,,"1624905582636","diff.py","1.1.7 for 2019-2020 @t1"
"a","Enter",,,"1624905587107","diff.py","1.1.7 for 2019-2020 @t1"
"e","
","","0","1624905587115","diff.py","1.1.7 for 2019-2020 @t1"
"e","i","","0","1624905588403","diff.py","1.1.7 for 2019-2020 @t1"
"k","i",,"1","1624905588408","diff.py","1.1.7 for 2019-2020 @t1"
"e","m","","1","1624905588668","diff.py","1.1.7 for 2019-2020 @t1"
"k","m",,"2","1624905588673","diff.py","1.1.7 for 2019-2020 @t1"
"e","p","","2","1624905588757","diff.py","1.1.7 for 2019-2020 @t1"
"k","p",,"3","1624905588764","diff.py","1.1.7 for 2019-2020 @t1"
"e","o","","3","1624905588919","diff.py","1.1.7 for 2019-2020 @t1"
"k","o",,"4","1624905588940","diff.py","1.1.7 for 2019-2020 @t1"
"a","Choose Lookup Item",,,"1624905589265","diff.py","1.1.7 for 2019-2020 @t1"
"e","rt","","4","1624905589295","diff.py","1.1.7 for 2019-2020 @t1"
"e"," ","","6","1624905589305","diff.py","1.1.7 for 2019-2020 @t1"
"e","d","","7","1624905589669","diff.py","1.1.7 for 2019-2020 @t1"
"k","d",,"8","1624905589671","diff.py","1.1.7 for 2019-2020 @t1"
"e","i","","8","1624905589809","diff.py","1.1.7 for 2019-2020 @t1"
"k","i",,"9","1624905589814","diff.py","1.1.7 for 2019-2020 @t1"
"e","f","","9","1624905589931","diff.py","1.1.7 for 2019-2020 @t1"
"k","f",,"10","1624905589936","diff.py","1.1.7 for 2019-2020 @t1"
"e","f","","10","1624905590102","diff.py","1.1.7 for 2019-2020 @t1"
"k","f",,"11","1624905590116","diff.py","1.1.7 for 2019-2020 @t1"
"a","Choose Lookup Item",,,"1624905590243","diff.py","1.1.7 for 2019-2020 @t1"
"e","lib","","11","1624905590272","diff.py","1.1.7 for 2019-2020 @t1"
"a","Enter",,,"1624905591292","diff.py","1.1.7 for 2019-2020 @t1"
"e","
","","15","1624905591306","diff.py","1.1.7 for 2019-2020 @t1"
"a","Up",,,"1624905598466","diff.py","1.1.7 for 2019-2020 @t1"
"a","Move Caret to Line Start with Selection",,,"1624905598706","diff.py","1.1.7 for 2019-2020 @t1"
"a","Backspace",,,"1624905599019","diff.py","1.1.7 for 2019-2020 @t1"
"e","","debug('yy')","3313","1624905599036","diff.py","1.1.7 for 2019-2020 @t1"
"a","Backspace",,,"1624905599208","diff.py","1.1.7 for 2019-2020 @t1"
"e",""," ","3312","1624905599213","diff.py","1.1.7 for 2019-2020 @t1"
"e","","   ","3309","1624905599226","diff.py","1.1.7 for 2019-2020 @t1"
"a","Backspace",,,"1624905599567","diff.py","1.1.7 for 2019-2020 @t1"
"e",""," ","3308","1624905599572","diff.py","1.1.7 for 2019-2020 @t1"
"e","","   ","3305","1624905599577","diff.py","1.1.7 for 2019-2020 @t1"
"a","Backspace",,,"1624905600065","diff.py","1.1.7 for 2019-2020 @t1"
"e","","
","3305","1624905600074","diff.py","1.1.7 for 2019-2020 @t1"
"a","Find...",,,"1624905606506","diff.py","1.1.7 for 2019-2020 @t1"
"a","Down",,,"1624905610855","diff.py","1.1.7 for 2019-2020 @t1"
"a","Move Caret to Line Start with Selection",,,"1624905611193","diff.py","1.1.7 for 2019-2020 @t1"
"a","Up with Selection",,,"1624905611389","diff.py","1.1.7 for 2019-2020 @t1"
"a","Up with Selection",,,"1624905611579","diff.py","1.1.7 for 2019-2020 @t1"
"a","Backspace",,,"1624905611966","diff.py","1.1.7 for 2019-2020 @t1"
"e","","# TODO fix this
                #                 debug('here')
                #                 yield None","2395","1624905611976","diff.py","1.1.7 for 2019-2020 @t1"
"a","Backspace",,,"1624905612251","diff.py","1.1.7 for 2019-2020 @t1"
"e",""," ","2394","1624905612261","diff.py","1.1.7 for 2019-2020 @t1"
"e","","   ","2391","1624905612282","diff.py","1.1.7 for 2019-2020 @t1"
"a","Backspace",,,"1624905612919","diff.py","1.1.7 for 2019-2020 @t1"
"e",""," ","2390","1624905612928","diff.py","1.1.7 for 2019-2020 @t1"
"e","","   ","2387","1624905612949","diff.py","1.1.7 for 2019-2020 @t1"
"a","Backspace",,,"1624905613209","diff.py","1.1.7 for 2019-2020 @t1"
"e",""," ","2386","1624905613221","diff.py","1.1.7 for 2019-2020 @t1"
"e","","   ","2383","1624905613231","diff.py","1.1.7 for 2019-2020 @t1"
"a","Backspace",,,"1624905613548","diff.py","1.1.7 for 2019-2020 @t1"
"e",""," ","2382","1624905613552","diff.py","1.1.7 for 2019-2020 @t1"
"e","","   ","2379","1624905613559","diff.py","1.1.7 for 2019-2020 @t1"
"a","Backspace",,,"1624905613948","diff.py","1.1.7 for 2019-2020 @t1"
"e","","
","2379","1624905613954","diff.py","1.1.7 for 2019-2020 @t1"
"e","(","","2378","1624905615773","diff.py","1.1.7 for 2019-2020 @t1"
"k","(",,"2379","1624905615787","diff.py","1.1.7 for 2019-2020 @t1"
"a","Undo Typing",,,"1624905618016","diff.py","1.1.7 for 2019-2020 @t1"
"e","","(","2378","1624905618020","diff.py","1.1.7 for 2019-2020 @t1"
"a","Move Caret to Line Start with Selection",,,"1624905629902","diff.py","1.1.7 for 2019-2020 @t1"
"a","Backspace",,,"1624905630249","diff.py","1.1.7 for 2019-2020 @t1"
"e","","#         debug('synch pair:', aelt, belt)","3357","1624905630260","diff.py","1.1.7 for 2019-2020 @t1"
"a","Backspace",,,"1624905630472","diff.py","1.1.7 for 2019-2020 @t1"
"e",""," ","3356","1624905630481","diff.py","1.1.7 for 2019-2020 @t1"
"e","","   ","3353","1624905630503","diff.py","1.1.7 for 2019-2020 @t1"
"a","Backspace",,,"1624905630907","diff.py","1.1.7 for 2019-2020 @t1"
"e",""," ","3352","1624905630910","diff.py","1.1.7 for 2019-2020 @t1"
"e","","   ","3349","1624905630916","diff.py","1.1.7 for 2019-2020 @t1"
"a","Backspace",,,"1624905631300","diff.py","1.1.7 for 2019-2020 @t1"
"e","","
","3349","1624905631307","diff.py","1.1.7 for 2019-2020 @t1"
"a","Move Caret to Line Start",,,"1624905636186","diff.py","1.1.7 for 2019-2020 @t1"
"a","Move Caret to Line End with Selection",,,"1624905636612","diff.py","1.1.7 for 2019-2020 @t1"
"a","Down with Selection",,,"1624905636794","diff.py","1.1.7 for 2019-2020 @t1"
"a","Backspace",,,"1624905637292","diff.py","1.1.7 for 2019-2020 @t1"
"e","","debug(' '.join(['zz', tag, str(abidx[0]), str(abidx[1]), str(la), str(lb)]))
                #                 print(abidx)","3767","1624905637305","diff.py","1.1.7 for 2019-2020 @t1"
"a","Up",,,"1624905637740","diff.py","1.1.7 for 2019-2020 @t1"
"a","Move Caret to Line End with Selection",,,"1624905638614","diff.py","1.1.7 for 2019-2020 @t1"
"a","Delete",,,"1624905639312","diff.py","1.1.7 for 2019-2020 @t1"
"e","","#                 debug(' '.join(['zz', tag, a, b]))#a[abidx[0]], b[abidx[1]]]))","3670","1624905639321","diff.py","1.1.7 for 2019-2020 @t1"
"a","Backspace",,,"1624905639604","diff.py","1.1.7 for 2019-2020 @t1"
"e",""," ","3669","1624905639609","diff.py","1.1.7 for 2019-2020 @t1"
"e","","   ","3666","1624905639617","diff.py","1.1.7 for 2019-2020 @t1"
"a","Backspace",,,"1624905640035","diff.py","1.1.7 for 2019-2020 @t1"
"e",""," ","3665","1624905640040","diff.py","1.1.7 for 2019-2020 @t1"
"e","","   ","3662","1624905640059","diff.py","1.1.7 for 2019-2020 @t1"
"a","Backspace",,,"1624905640268","diff.py","1.1.7 for 2019-2020 @t1"
"e",""," ","3661","1624905640278","diff.py","1.1.7 for 2019-2020 @t1"
"e","","   ","3658","1624905640301","diff.py","1.1.7 for 2019-2020 @t1"
"a","Backspace",,,"1624905640561","diff.py","1.1.7 for 2019-2020 @t1"
"e",""," ","3657","1624905640569","diff.py","1.1.7 for 2019-2020 @t1"
"e","","   ","3654","1624905640597","diff.py","1.1.7 for 2019-2020 @t1"
"a","Backspace",,,"1624905640918","diff.py","1.1.7 for 2019-2020 @t1"
"e","","
","3654","1624905640970","diff.py","1.1.7 for 2019-2020 @t1"
"a","Delete",,,"1624905642096","diff.py","1.1.7 for 2019-2020 @t1"
"e","","
","3653","1624905642104","diff.py","1.1.7 for 2019-2020 @t1"
"a","Move Caret to Line Start with Selection",,,"1624905646993","diff.py","1.1.7 for 2019-2020 @t1"
"a","Backspace",,,"1624905647317","diff.py","1.1.7 for 2019-2020 @t1"
"e","","debug('ww')","4559","1624905647321","diff.py","1.1.7 for 2019-2020 @t1"
"a","Backspace",,,"1624905647572","diff.py","1.1.7 for 2019-2020 @t1"
"e",""," ","4558","1624905647582","diff.py","1.1.7 for 2019-2020 @t1"
"e","","   ","4555","1624905647603","diff.py","1.1.7 for 2019-2020 @t1"
"a","Backspace",,,"1624905647951","diff.py","1.1.7 for 2019-2020 @t1"
"e",""," ","4554","1624905647955","diff.py","1.1.7 for 2019-2020 @t1"
"e","","   ","4551","1624905647962","diff.py","1.1.7 for 2019-2020 @t1"
"a","Backspace",,,"1624905648253","diff.py","1.1.7 for 2019-2020 @t1"
"e",""," ","4550","1624905648261","diff.py","1.1.7 for 2019-2020 @t1"
"e","","   ","4547","1624905648282","diff.py","1.1.7 for 2019-2020 @t1"
"a","Backspace",,,"1624905648610","diff.py","1.1.7 for 2019-2020 @t1"
"e","","
","4547","1624905648619","diff.py","1.1.7 for 2019-2020 @t1"
"a","Move Caret to Line Start with Selection",,,"1624905649239","diff.py","1.1.7 for 2019-2020 @t1"
"a","Backspace",,,"1624905649630","diff.py","1.1.7 for 2019-2020 @t1"
"e","","# TODO fix","4536","1624905649638","diff.py","1.1.7 for 2019-2020 @t1"
"a","Backspace",,,"1624905649873","diff.py","1.1.7 for 2019-2020 @t1"
"e",""," ","4535","1624905649884","diff.py","1.1.7 for 2019-2020 @t1"
"e","","   ","4532","1624905649902","diff.py","1.1.7 for 2019-2020 @t1"
"a","Backspace",,,"1624905650098","diff.py","1.1.7 for 2019-2020 @t1"
"e",""," ","4531","1624905650107","diff.py","1.1.7 for 2019-2020 @t1"
"e","","   ","4528","1624905650131","diff.py","1.1.7 for 2019-2020 @t1"
"a","Backspace",,,"1624905650324","diff.py","1.1.7 for 2019-2020 @t1"
"e",""," ","4527","1624905650333","diff.py","1.1.7 for 2019-2020 @t1"
"e","","   ","4524","1624905650352","diff.py","1.1.7 for 2019-2020 @t1"
"a","Backspace",,,"1624905650716","diff.py","1.1.7 for 2019-2020 @t1"
"e","","
","4524","1624905650719","diff.py","1.1.7 for 2019-2020 @t1"
"a","Move Caret to Line Start with Selection",,,"1624905652324","diff.py","1.1.7 for 2019-2020 @t1"
"a","Backspace",,,"1624905652939","diff.py","1.1.7 for 2019-2020 @t1"
"e","","debug('gg')","4675","1624905652944","diff.py","1.1.7 for 2019-2020 @t1"
"a","Backspace",,,"1624905653255","diff.py","1.1.7 for 2019-2020 @t1"
"e",""," ","4674","1624905653259","diff.py","1.1.7 for 2019-2020 @t1"
"e","","   ","4671","1624905653281","diff.py","1.1.7 for 2019-2020 @t1"
"a","Backspace",,,"1624905653499","diff.py","1.1.7 for 2019-2020 @t1"
"e",""," ","4670","1624905653507","diff.py","1.1.7 for 2019-2020 @t1"
"e","","   ","4667","1624905653526","diff.py","1.1.7 for 2019-2020 @t1"
"a","Backspace",,,"1624905653855","diff.py","1.1.7 for 2019-2020 @t1"
"e","","
","4667","1624905653863","diff.py","1.1.7 for 2019-2020 @t1"
"a","Move Caret to Line Start with Selection",,,"1624905658473","diff.py","1.1.7 for 2019-2020 @t1"
"a","Backspace",,,"1624905658794","diff.py","1.1.7 for 2019-2020 @t1"
"e","","debug('hh')","4864","1624905658801","diff.py","1.1.7 for 2019-2020 @t1"
"a","Backspace",,,"1624905659011","diff.py","1.1.7 for 2019-2020 @t1"
"e",""," ","4863","1624905659021","diff.py","1.1.7 for 2019-2020 @t1"
"e","","   ","4860","1624905659040","diff.py","1.1.7 for 2019-2020 @t1"
"a","Backspace",,,"1624905659210","diff.py","1.1.7 for 2019-2020 @t1"
"e",""," ","4859","1624905659219","diff.py","1.1.7 for 2019-2020 @t1"
"e","","   ","4856","1624905659238","diff.py","1.1.7 for 2019-2020 @t1"
"a","Backspace",,,"1624905659446","diff.py","1.1.7 for 2019-2020 @t1"
"e",""," ","4855","1624905659454","diff.py","1.1.7 for 2019-2020 @t1"
"e","","   ","4852","1624905659473","diff.py","1.1.7 for 2019-2020 @t1"
"a","Backspace",,,"1624905659751","diff.py","1.1.7 for 2019-2020 @t1"
"e","","
","4852","1624905659759","diff.py","1.1.7 for 2019-2020 @t1"
"a","Down",,,"1624905660496","diff.py","1.1.7 for 2019-2020 @t1"
"a","Down",,,"1624905660690","diff.py","1.1.7 for 2019-2020 @t1"
"a","Down",,,"1624905660878","diff.py","1.1.7 for 2019-2020 @t1"
"a","Down",,,"1624905661055","diff.py","1.1.7 for 2019-2020 @t1"
"a","Down",,,"1624905661255","diff.py","1.1.7 for 2019-2020 @t1"
"a","Move Caret to Line End",,,"1624905661541","diff.py","1.1.7 for 2019-2020 @t1"
"a","Move Caret to Line Start with Selection",,,"1624905661889","diff.py","1.1.7 for 2019-2020 @t1"
"a","Backspace",,,"1624905662210","diff.py","1.1.7 for 2019-2020 @t1"
"e","","debug('ii')","5083","1624905662213","diff.py","1.1.7 for 2019-2020 @t1"
"a","Backspace",,,"1624905662413","diff.py","1.1.7 for 2019-2020 @t1"
"e",""," ","5082","1624905662419","diff.py","1.1.7 for 2019-2020 @t1"
"e","","   ","5079","1624905662425","diff.py","1.1.7 for 2019-2020 @t1"
"a","Backspace",,,"1624905662614","diff.py","1.1.7 for 2019-2020 @t1"
"e",""," ","5078","1624905662621","diff.py","1.1.7 for 2019-2020 @t1"
"e","","   ","5075","1624905662637","diff.py","1.1.7 for 2019-2020 @t1"
"a","Backspace",,,"1624905662824","diff.py","1.1.7 for 2019-2020 @t1"
"e",""," ","5074","1624905662832","diff.py","1.1.7 for 2019-2020 @t1"
"e","","   ","5071","1624905662851","diff.py","1.1.7 for 2019-2020 @t1"
"a","Backspace",,,"1624905663086","diff.py","1.1.7 for 2019-2020 @t1"
"e",""," ","5070","1624905663093","diff.py","1.1.7 for 2019-2020 @t1"
"e","","   ","5067","1624905663101","diff.py","1.1.7 for 2019-2020 @t1"
"a","Backspace",,,"1624905663428","diff.py","1.1.7 for 2019-2020 @t1"
"e","","
","5067","1624905663432","diff.py","1.1.7 for 2019-2020 @t1"
"a","Down",,,"1624905664118","diff.py","1.1.7 for 2019-2020 @t1"
"a","Up",,,"1624905665591","diff.py","1.1.7 for 2019-2020 @t1"
"a","Move Caret to Line Start with Selection",,,"1624905665866","diff.py","1.1.7 for 2019-2020 @t1"
"a","Backspace",,,"1624905666314","diff.py","1.1.7 for 2019-2020 @t1"
"e","","g = []","4823","1624905666324","diff.py","1.1.7 for 2019-2020 @t1"
"a","Backspace",,,"1624905666535","diff.py","1.1.7 for 2019-2020 @t1"
"e",""," ","4822","1624905666546","diff.py","1.1.7 for 2019-2020 @t1"
"e","","   ","4819","1624905666565","diff.py","1.1.7 for 2019-2020 @t1"
"a","Backspace",,,"1624905666744","diff.py","1.1.7 for 2019-2020 @t1"
"e",""," ","4818","1624905666752","diff.py","1.1.7 for 2019-2020 @t1"
"e","","   ","4815","1624905666767","diff.py","1.1.7 for 2019-2020 @t1"
"a","Backspace",,,"1624905666993","diff.py","1.1.7 for 2019-2020 @t1"
"e","","
","4815","1624905666999","diff.py","1.1.7 for 2019-2020 @t1"
"a","Up",,,"1624905668753","diff.py","1.1.7 for 2019-2020 @t1"
"a","Move Caret to Line Start with Selection",,,"1624905669002","diff.py","1.1.7 for 2019-2020 @t1"
"a","Backspace",,,"1624905669326","diff.py","1.1.7 for 2019-2020 @t1"
"e","","#                 abidx[0] += ahi-alo","5068","1624905669334","diff.py","1.1.7 for 2019-2020 @t1"
"a","Backspace",,,"1624905669544","diff.py","1.1.7 for 2019-2020 @t1"
"e",""," ","5067","1624905669552","diff.py","1.1.7 for 2019-2020 @t1"
"e","","   ","5064","1624905669571","diff.py","1.1.7 for 2019-2020 @t1"
"a","Backspace",,,"1624905669754","diff.py","1.1.7 for 2019-2020 @t1"
"e",""," ","5063","1624905669763","diff.py","1.1.7 for 2019-2020 @t1"
"e","","   ","5060","1624905669783","diff.py","1.1.7 for 2019-2020 @t1"
"a","Backspace",,,"1624905669961","diff.py","1.1.7 for 2019-2020 @t1"
"e",""," ","5059","1624905669973","diff.py","1.1.7 for 2019-2020 @t1"
"e","","   ","5056","1624905669993","diff.py","1.1.7 for 2019-2020 @t1"
"a","Backspace",,,"1624905670178","diff.py","1.1.7 for 2019-2020 @t1"
"e",""," ","5055","1624905670187","diff.py","1.1.7 for 2019-2020 @t1"
"e","","   ","5052","1624905670207","diff.py","1.1.7 for 2019-2020 @t1"
"a","Backspace",,,"1624905670500","diff.py","1.1.7 for 2019-2020 @t1"
"e","","
","5052","1624905670509","diff.py","1.1.7 for 2019-2020 @t1"
"a","Up",,,"1624905670889","diff.py","1.1.7 for 2019-2020 @t1"
"a","Up",,,"1624905671065","diff.py","1.1.7 for 2019-2020 @t1"
"a","Move Caret to Line End",,,"1624905671312","diff.py","1.1.7 for 2019-2020 @t1"
"a","Move Caret to Line Start with Selection",,,"1624905671669","diff.py","1.1.7 for 2019-2020 @t1"
"a","Backspace",,,"1624905672023","diff.py","1.1.7 for 2019-2020 @t1"
"e","","#                 g = self._fancy_replace(abidx, a, alo, ahi, b, blo, bhi)","4879","1624905672028","diff.py","1.1.7 for 2019-2020 @t1"
"a","Backspace",,,"1624905672253","diff.py","1.1.7 for 2019-2020 @t1"
"e",""," ","4878","1624905672262","diff.py","1.1.7 for 2019-2020 @t1"
"e","","   ","4875","1624905672282","diff.py","1.1.7 for 2019-2020 @t1"
"a","Backspace",,,"1624905672463","diff.py","1.1.7 for 2019-2020 @t1"
"e",""," ","4874","1624905672471","diff.py","1.1.7 for 2019-2020 @t1"
"e","","   ","4871","1624905672490","diff.py","1.1.7 for 2019-2020 @t1"
"a","Backspace",,,"1624905672684","diff.py","1.1.7 for 2019-2020 @t1"
"e",""," ","4870","1624905672693","diff.py","1.1.7 for 2019-2020 @t1"
"e","","   ","4867","1624905672713","diff.py","1.1.7 for 2019-2020 @t1"
"a","Backspace",,,"1624905673067","diff.py","1.1.7 for 2019-2020 @t1"
"e",""," ","4866","1624905673070","diff.py","1.1.7 for 2019-2020 @t1"
"e","","   ","4863","1624905673078","diff.py","1.1.7 for 2019-2020 @t1"
"a","Backspace",,,"1624905673759","diff.py","1.1.7 for 2019-2020 @t1"
"e","","
","4863","1624905673766","diff.py","1.1.7 for 2019-2020 @t1"
"a","Move Caret to Line Start with Selection",,,"1624905675244","diff.py","1.1.7 for 2019-2020 @t1"
"a","Backspace",,,"1624905675625","diff.py","1.1.7 for 2019-2020 @t1"
"e","","debug('jj')","5301","1624905675630","diff.py","1.1.7 for 2019-2020 @t1"
"a","Backspace",,,"1624905675845","diff.py","1.1.7 for 2019-2020 @t1"
"e",""," ","5300","1624905675853","diff.py","1.1.7 for 2019-2020 @t1"
"e","","   ","5297","1624905675873","diff.py","1.1.7 for 2019-2020 @t1"
"a","Backspace",,,"1624905676060","diff.py","1.1.7 for 2019-2020 @t1"
"e",""," ","5296","1624905676067","diff.py","1.1.7 for 2019-2020 @t1"
"e","","   ","5293","1624905676073","diff.py","1.1.7 for 2019-2020 @t1"
"a","Backspace",,,"1624905676348","diff.py","1.1.7 for 2019-2020 @t1"
"e",""," ","5292","1624905676352","diff.py","1.1.7 for 2019-2020 @t1"
"e","","   ","5289","1624905676358","diff.py","1.1.7 for 2019-2020 @t1"
"a","Backspace",,,"1624905676690","diff.py","1.1.7 for 2019-2020 @t1"
"e","","
","5289","1624905676694","diff.py","1.1.7 for 2019-2020 @t1"
"a","Move Caret to Line End",,,"1624905678661","diff.py","1.1.7 for 2019-2020 @t1"
"a","Move Caret to Line Start with Selection",,,"1624905679014","diff.py","1.1.7 for 2019-2020 @t1"
"a","Up with Selection",,,"1624905679191","diff.py","1.1.7 for 2019-2020 @t1"
"a","Up with Selection",,,"1624905679372","diff.py","1.1.7 for 2019-2020 @t1"
"a","Backspace",,,"1624905679735","diff.py","1.1.7 for 2019-2020 @t1"
"e","","#             abidx[0] += ahi-alo
            #             abidx[1] += bhi-blo
            #             abidx[0] += sum([len(a[ali]) for ali in range(alo, ahi)])","5301","1624905679738","diff.py","1.1.7 for 2019-2020 @t1"
"a","Delete",,,"1624905680214","diff.py","1.1.7 for 2019-2020 @t1"
"e","","
","5301","1624905680222","diff.py","1.1.7 for 2019-2020 @t1"
"a","Undo Delete",,,"1624905681107","diff.py","1.1.7 for 2019-2020 @t1"
"e","
","","5301","1624905681112","diff.py","1.1.7 for 2019-2020 @t1"
"a","Backspace",,,"1624905681465","diff.py","1.1.7 for 2019-2020 @t1"
"e",""," ","5300","1624905681470","diff.py","1.1.7 for 2019-2020 @t1"
"e","","   ","5297","1624905681489","diff.py","1.1.7 for 2019-2020 @t1"
"a","Backspace",,,"1624905681773","diff.py","1.1.7 for 2019-2020 @t1"
"e",""," ","5296","1624905681786","diff.py","1.1.7 for 2019-2020 @t1"
"e","","   ","5293","1624905681806","diff.py","1.1.7 for 2019-2020 @t1"
"a","Backspace",,,"1624905684624","diff.py","1.1.7 for 2019-2020 @t1"
"e",""," ","5292","1624905684632","diff.py","1.1.7 for 2019-2020 @t1"
"e","","   ","5289","1624905684639","diff.py","1.1.7 for 2019-2020 @t1"
"a","Backspace",,,"1624905685000","diff.py","1.1.7 for 2019-2020 @t1"
"e","","
","5289","1624905685006","diff.py","1.1.7 for 2019-2020 @t1"
"a","Up",,,"1624905685692","diff.py","1.1.7 for 2019-2020 @t1"
"a","Down",,,"1624905685839","diff.py","1.1.7 for 2019-2020 @t1"
"a","Down",,,"1624905686030","diff.py","1.1.7 for 2019-2020 @t1"
"a","Down",,,"1624905686213","diff.py","1.1.7 for 2019-2020 @t1"
"a","Down",,,"1624905686405","diff.py","1.1.7 for 2019-2020 @t1"
"a","Down",,,"1624905686593","diff.py","1.1.7 for 2019-2020 @t1"
"a","Down",,,"1624905686784","diff.py","1.1.7 for 2019-2020 @t1"
"a","Move Caret to Line End",,,"1624905687370","diff.py","1.1.7 for 2019-2020 @t1"
"a","Move Caret to Line Start with Selection",,,"1624905688104","diff.py","1.1.7 for 2019-2020 @t1"
"a","Up with Selection",,,"1624905688291","diff.py","1.1.7 for 2019-2020 @t1"
"a","Up with Selection",,,"1624905688459","diff.py","1.1.7 for 2019-2020 @t1"
"a","Up with Selection",,,"1624905688615","diff.py","1.1.7 for 2019-2020 @t1"
"a","Backspace",,,"1624905688934","diff.py","1.1.7 for 2019-2020 @t1"
"e","","#             print('dump')
    #             g = self._dump('+', b, blo, bhi)

    #         yield from g","5363","1624905688941","diff.py","1.1.7 for 2019-2020 @t1"
"a","Backspace",,,"1624905689298","diff.py","1.1.7 for 2019-2020 @t1"
"e",""," ","5362","1624905689302","diff.py","1.1.7 for 2019-2020 @t1"
"e","","   ","5359","1624905689308","diff.py","1.1.7 for 2019-2020 @t1"
"a","Backspace",,,"1624905689674","diff.py","1.1.7 for 2019-2020 @t1"
"e","","
","5361","1624905689678","diff.py","1.1.7 for 2019-2020 @t1"
"a","Backspace",,,"1624905694024","diff.py","1.1.7 for 2019-2020 @t1"
"e","","            abidx[1] += sum([len(b[bli]) for bli in range(blo, bhi)])

        #                 abidx[1] += bhi-blo
        #                 print('dump')
        #                 g = self._dump('-', a, alo, ahi)","5049","1624905694033","diff.py","1.1.7 for 2019-2020 @t1"
"a","Move Caret to Line Start with Selection",,,"1624905694665","diff.py","1.1.7 for 2019-2020 @t1"
"a","Backspace",,,"1624905694986","diff.py","1.1.7 for 2019-2020 @t1"
"e","","#     ","5043","1624905694994","diff.py","1.1.7 for 2019-2020 @t1"
"a","Backspace",,,"1624905695221","diff.py","1.1.7 for 2019-2020 @t1"
"e",""," ","5042","1624905695228","diff.py","1.1.7 for 2019-2020 @t1"
"e","","   ","5039","1624905695246","diff.py","1.1.7 for 2019-2020 @t1"
"a","Backspace",,,"1624905695575","diff.py","1.1.7 for 2019-2020 @t1"
"e",""," ","5038","1624905695583","diff.py","1.1.7 for 2019-2020 @t1"
"e","","   ","5035","1624905695602","diff.py","1.1.7 for 2019-2020 @t1"
"a","Backspace",,,"1624905695813","diff.py","1.1.7 for 2019-2020 @t1"
"e","","
","5035","1624905695821","diff.py","1.1.7 for 2019-2020 @t1"
"a","Enter",,,"1624905709176","diff.py","1.1.7 for 2019-2020 @t1"
"e","
","","5131","1624905709184","diff.py","1.1.7 for 2019-2020 @t1"
"a","Enter",,,"1624905709470","diff.py","1.1.7 for 2019-2020 @t1"
"e","
","","5132","1624905709475","diff.py","1.1.7 for 2019-2020 @t1"
"e","d","","5131","1624905710363","diff.py","1.1.7 for 2019-2020 @t1"
"k","d",,"5132","1624905710375","diff.py","1.1.7 for 2019-2020 @t1"
"e","e","","5132","1624905710480","diff.py","1.1.7 for 2019-2020 @t1"
"k","e",,"5133","1624905710487","diff.py","1.1.7 for 2019-2020 @t1"
"e","f","","5133","1624905710621","diff.py","1.1.7 for 2019-2020 @t1"
"k","f",,"5134","1624905710628","diff.py","1.1.7 for 2019-2020 @t1"
"e"," ","","5134","1624905710823","diff.py","1.1.7 for 2019-2020 @t1"
"k"," ",,"5135","1624905710827","diff.py","1.1.7 for 2019-2020 @t1"
"e","g","","5135","1624905711000","diff.py","1.1.7 for 2019-2020 @t1"
"k","g",,"5136","1624905711012","diff.py","1.1.7 for 2019-2020 @t1"
"e","e","","5136","1624905711115","diff.py","1.1.7 for 2019-2020 @t1"
"k","e",,"5137","1624905711134","diff.py","1.1.7 for 2019-2020 @t1"
"e","t","","5137","1624905711217","diff.py","1.1.7 for 2019-2020 @t1"
"k","t",,"5138","1624905711225","diff.py","1.1.7 for 2019-2020 @t1"
"e","_","","5138","1624905711817","diff.py","1.1.7 for 2019-2020 @t1"
"k","_",,"5139","1624905711836","diff.py","1.1.7 for 2019-2020 @t1"
"e","d","","5139","1624905712088","diff.py","1.1.7 for 2019-2020 @t1"
"k","d",,"5140","1624905712112","diff.py","1.1.7 for 2019-2020 @t1"
"a","Backspace",,,"1624905712635","diff.py","1.1.7 for 2019-2020 @t1"
"e","","d","5139","1624905712645","diff.py","1.1.7 for 2019-2020 @t1"
"e","f","","5139","1624905712795","diff.py","1.1.7 for 2019-2020 @t1"
"k","f",,"5140","1624905712806","diff.py","1.1.7 for 2019-2020 @t1"
"e","i","","5140","1624905712910","diff.py","1.1.7 for 2019-2020 @t1"
"k","i",,"5141","1624905712916","diff.py","1.1.7 for 2019-2020 @t1"
"a","Backspace",,,"1624905713639","diff.py","1.1.7 for 2019-2020 @t1"
"e","","i","5140","1624905713644","diff.py","1.1.7 for 2019-2020 @t1"
"a","Backspace",,,"1624905713809","diff.py","1.1.7 for 2019-2020 @t1"
"e","","f","5139","1624905713818","diff.py","1.1.7 for 2019-2020 @t1"
"e","d","","5139","1624905714316","diff.py","1.1.7 for 2019-2020 @t1"
"k","d",,"5140","1624905714328","diff.py","1.1.7 for 2019-2020 @t1"
"e","i","","5140","1624905714522","diff.py","1.1.7 for 2019-2020 @t1"
"k","i",,"5141","1624905714534","diff.py","1.1.7 for 2019-2020 @t1"
"e","f","","5141","1624905714619","diff.py","1.1.7 for 2019-2020 @t1"
"k","f",,"5142","1624905714629","diff.py","1.1.7 for 2019-2020 @t1"
"e","f","","5142","1624905714769","diff.py","1.1.7 for 2019-2020 @t1"
"k","f",,"5143","1624905714781","diff.py","1.1.7 for 2019-2020 @t1"
"e","_","","5143","1624905715765","diff.py","1.1.7 for 2019-2020 @t1"
"k","_",,"5144","1624905715777","diff.py","1.1.7 for 2019-2020 @t1"
"e","v","","5144","1624905715952","diff.py","1.1.7 for 2019-2020 @t1"
"k","v",,"5145","1624905715964","diff.py","1.1.7 for 2019-2020 @t1"
"e","a","","5145","1624905716099","diff.py","1.1.7 for 2019-2020 @t1"
"k","a",,"5146","1624905716103","diff.py","1.1.7 for 2019-2020 @t1"
"e","l","","5146","1624905716187","diff.py","1.1.7 for 2019-2020 @t1"
"k","l",,"5147","1624905716199","diff.py","1.1.7 for 2019-2020 @t1"
"e","u","","5147","1624905716373","diff.py","1.1.7 for 2019-2020 @t1"
"k","u",,"5148","1624905716385","diff.py","1.1.7 for 2019-2020 @t1"
"e","e","","5148","1624905716896","diff.py","1.1.7 for 2019-2020 @t1"
"k","e",,"5149","1624905716907","diff.py","1.1.7 for 2019-2020 @t1"
"a","Backspace",,,"1624905718625","diff.py","1.1.7 for 2019-2020 @t1"
"e","","e","5148","1624905718633","diff.py","1.1.7 for 2019-2020 @t1"
"a","Backspace",,,"1624905718796","diff.py","1.1.7 for 2019-2020 @t1"
"e","","u","5147","1624905718804","diff.py","1.1.7 for 2019-2020 @t1"
"a","Backspace",,,"1624905718976","diff.py","1.1.7 for 2019-2020 @t1"
"e","","l","5146","1624905718984","diff.py","1.1.7 for 2019-2020 @t1"
"a","Backspace",,,"1624905719157","diff.py","1.1.7 for 2019-2020 @t1"
"e","","a","5145","1624905719167","diff.py","1.1.7 for 2019-2020 @t1"
"a","Backspace",,,"1624905719780","diff.py","1.1.7 for 2019-2020 @t1"
"e","","v","5144","1624905719787","diff.py","1.1.7 for 2019-2020 @t1"
"a","Backspace",,,"1624905721274","diff.py","1.1.7 for 2019-2020 @t1"
"e","","_","5143","1624905721283","diff.py","1.1.7 for 2019-2020 @t1"
"a","Backspace",,,"1624905721640","diff.py","1.1.7 for 2019-2020 @t1"
"e","","f","5142","1624905721643","diff.py","1.1.7 for 2019-2020 @t1"
"a","Backspace",,,"1624905721831","diff.py","1.1.7 for 2019-2020 @t1"
"e","","f","5141","1624905721838","diff.py","1.1.7 for 2019-2020 @t1"
"a","Backspace",,,"1624905722044","diff.py","1.1.7 for 2019-2020 @t1"
"e","","i","5140","1624905722051","diff.py","1.1.7 for 2019-2020 @t1"
"a","Backspace",,,"1624905722633","diff.py","1.1.7 for 2019-2020 @t1"
"e","","d","5139","1624905722642","diff.py","1.1.7 for 2019-2020 @t1"
"e","d","","5139","1624905723307","diff.py","1.1.7 for 2019-2020 @t1"
"k","d",,"5140","1624905723319","diff.py","1.1.7 for 2019-2020 @t1"
"e","i","","5140","1624905723483","diff.py","1.1.7 for 2019-2020 @t1"
"k","i",,"5141","1624905723495","diff.py","1.1.7 for 2019-2020 @t1"
"e","f","","5141","1624905723617","diff.py","1.1.7 for 2019-2020 @t1"
"k","f",,"5142","1624905723629","diff.py","1.1.7 for 2019-2020 @t1"
"e","f","","5142","1624905723764","diff.py","1.1.7 for 2019-2020 @t1"
"k","f",,"5143","1624905723776","diff.py","1.1.7 for 2019-2020 @t1"
"e","_","","5143","1624905726076","diff.py","1.1.7 for 2019-2020 @t1"
"k","_",,"5144","1624905726081","diff.py","1.1.7 for 2019-2020 @t1"
"e","b","","5144","1624905726377","diff.py","1.1.7 for 2019-2020 @t1"
"k","b",,"5145","1624905726388","diff.py","1.1.7 for 2019-2020 @t1"
"e","l","","5145","1624905726653","diff.py","1.1.7 for 2019-2020 @t1"
"k","l",,"5146","1624905726666","diff.py","1.1.7 for 2019-2020 @t1"
"e","o","","5146","1624905726782","diff.py","1.1.7 for 2019-2020 @t1"
"k","o",,"5147","1624905726785","diff.py","1.1.7 for 2019-2020 @t1"
"e","c","","5147","1624905726891","diff.py","1.1.7 for 2019-2020 @t1"
"k","c",,"5148","1624905726895","diff.py","1.1.7 for 2019-2020 @t1"
"e","k","","5148","1624905726968","diff.py","1.1.7 for 2019-2020 @t1"
"k","k",,"5149","1624905726971","diff.py","1.1.7 for 2019-2020 @t1"
"e","s","","5149","1624905727099","diff.py","1.1.7 for 2019-2020 @t1"
"k","s",,"5150","1624905727111","diff.py","1.1.7 for 2019-2020 @t1"
"e","(","","5150","1624905727376","diff.py","1.1.7 for 2019-2020 @t1"
"e",")","","5151","1624905727396","diff.py","1.1.7 for 2019-2020 @t1"
"k","(",,"5151","1624905727402","diff.py","1.1.7 for 2019-2020 @t1"
"a","Move Caret to Line End",,,"1624905728139","diff.py","1.1.7 for 2019-2020 @t1"
"e",":","","5152","1624905728465","diff.py","1.1.7 for 2019-2020 @t1"
"k",":",,"5153","1624905728467","diff.py","1.1.7 for 2019-2020 @t1"
"a","Enter",,,"1624905728720","diff.py","1.1.7 for 2019-2020 @t1"
"e","
","","5155","1624905728726","diff.py","1.1.7 for 2019-2020 @t1"
"e","    ","","5154","1624905728737","diff.py","1.1.7 for 2019-2020 @t1"
"a","Move Caret to Line Start with Selection",,,"1624905731880","diff.py","1.1.7 for 2019-2020 @t1"
"a","Cut",,,"1624905733727","diff.py","1.1.7 for 2019-2020 @t1"
"c","def test(linejunk, a, b):",,"5160","1624905733728","diff.py","1.1.7 for 2019-2020 @t1"
"e","","def test(linejunk, a, b):","5160","1624905733737","diff.py","1.1.7 for 2019-2020 @t1"
"a","Undo Cut",,,"1624905734970","diff.py","1.1.7 for 2019-2020 @t1"
"e","def test(linejunk, a, b):","","5160","1624905734979","diff.py","1.1.7 for 2019-2020 @t1"
"a","Move Caret to Line Start with Selection",,,"1624905736548","diff.py","1.1.7 for 2019-2020 @t1"
"a","Backspace",,,"1624905736834","diff.py","1.1.7 for 2019-2020 @t1"
"e","","def get_diff_blocks():","5131","1624905736846","diff.py","1.1.7 for 2019-2020 @t1"
"a","Delete",,,"1624905737143","diff.py","1.1.7 for 2019-2020 @t1"
"e","","
","5131","1624905737153","diff.py","1.1.7 for 2019-2020 @t1"
"a","Delete",,,"1624905737364","diff.py","1.1.7 for 2019-2020 @t1"
"e",""," ","5134","1624905737371","diff.py","1.1.7 for 2019-2020 @t1"
"a","Delete",,,"1624905737552","diff.py","1.1.7 for 2019-2020 @t1"
"e",""," ","5133","1624905737559","diff.py","1.1.7 for 2019-2020 @t1"
"a","Backspace",,,"1624905737876","diff.py","1.1.7 for 2019-2020 @t1"
"e","","
","5130","1624905737884","diff.py","1.1.7 for 2019-2020 @t1"
"a","Backspace",,,"1624905738290","diff.py","1.1.7 for 2019-2020 @t1"
"e","","
","5129","1624905738298","diff.py","1.1.7 for 2019-2020 @t1"
"a","Delete",,,"1624905738652","diff.py","1.1.7 for 2019-2020 @t1"
"e",""," ","5130","1624905738655","diff.py","1.1.7 for 2019-2020 @t1"
"a","Backspace",,,"1624905740261","diff.py","1.1.7 for 2019-2020 @t1"
"e","","
","5131","1624905740268","diff.py","1.1.7 for 2019-2020 @t1"
"a","Backspace",,,"1624905742147","diff.py","1.1.7 for 2019-2020 @t1"
"e","","t","5135","1624905742160","diff.py","1.1.7 for 2019-2020 @t1"
"a","Delete",,,"1624905742606","diff.py","1.1.7 for 2019-2020 @t1"
"e","","e","5135","1624905742609","diff.py","1.1.7 for 2019-2020 @t1"
"a","Delete",,,"1624905742764","diff.py","1.1.7 for 2019-2020 @t1"
"e","","s","5135","1624905742772","diff.py","1.1.7 for 2019-2020 @t1"
"a","Delete",,,"1624905742967","diff.py","1.1.7 for 2019-2020 @t1"
"e","","t","5135","1624905742976","diff.py","1.1.7 for 2019-2020 @t1"
"e","d","","5135","1624905743744","diff.py","1.1.7 for 2019-2020 @t1"
"k","d",,"5136","1624905743752","diff.py","1.1.7 for 2019-2020 @t1"
"e","i","","5136","1624905743943","diff.py","1.1.7 for 2019-2020 @t1"
"k","i",,"5137","1624905743961","diff.py","1.1.7 for 2019-2020 @t1"
"e","f","","5137","1624905744053","diff.py","1.1.7 for 2019-2020 @t1"
"k","f",,"5138","1624905744058","diff.py","1.1.7 for 2019-2020 @t1"
"e","f","","5138","1624905744204","diff.py","1.1.7 for 2019-2020 @t1"
"k","f",,"5139","1624905744210","diff.py","1.1.7 for 2019-2020 @t1"
"e","_","","5139","1624905744461","diff.py","1.1.7 for 2019-2020 @t1"
"k","_",,"5140","1624905744472","diff.py","1.1.7 for 2019-2020 @t1"
"a","Backspace",,,"1624905744982","diff.py","1.1.7 for 2019-2020 @t1"
"e","","_","5139","1624905744988","diff.py","1.1.7 for 2019-2020 @t1"
"a","Backspace",,,"1624905745176","diff.py","1.1.7 for 2019-2020 @t1"
"e","","f","5138","1624905745184","diff.py","1.1.7 for 2019-2020 @t1"
"a","Backspace",,,"1624905745340","diff.py","1.1.7 for 2019-2020 @t1"
"e","","f","5137","1624905745348","diff.py","1.1.7 for 2019-2020 @t1"
"a","Backspace",,,"1624905745509","diff.py","1.1.7 for 2019-2020 @t1"
"e","","i","5136","1624905745517","diff.py","1.1.7 for 2019-2020 @t1"
"a","Backspace",,,"1624905745679","diff.py","1.1.7 for 2019-2020 @t1"
"e","","d","5135","1624905745684","diff.py","1.1.7 for 2019-2020 @t1"
"e","g","","5135","1624905746143","diff.py","1.1.7 for 2019-2020 @t1"
"k","g",,"5136","1624905746146","diff.py","1.1.7 for 2019-2020 @t1"
"e","e","","5136","1624905746221","diff.py","1.1.7 for 2019-2020 @t1"
"k","e",,"5137","1624905746226","diff.py","1.1.7 for 2019-2020 @t1"
"e","_","","5137","1624905746450","diff.py","1.1.7 for 2019-2020 @t1"
"k","_",,"5138","1624905746471","diff.py","1.1.7 for 2019-2020 @t1"
"e","d","","5138","1624905746783","diff.py","1.1.7 for 2019-2020 @t1"
"k","d",,"5139","1624905746789","diff.py","1.1.7 for 2019-2020 @t1"
"e","i","","5139","1624905746941","diff.py","1.1.7 for 2019-2020 @t1"
"k","i",,"5140","1624905746953","diff.py","1.1.7 for 2019-2020 @t1"
"e","f","","5140","1624905747055","diff.py","1.1.7 for 2019-2020 @t1"
"k","f",,"5141","1624905747063","diff.py","1.1.7 for 2019-2020 @t1"
"e","f","","5141","1624905747202","diff.py","1.1.7 for 2019-2020 @t1"
"k","f",,"5142","1624905747214","diff.py","1.1.7 for 2019-2020 @t1"
"e","_","","5142","1624905747515","diff.py","1.1.7 for 2019-2020 @t1"
"k","_",,"5143","1624905747527","diff.py","1.1.7 for 2019-2020 @t1"
"e","b","","5143","1624905748109","diff.py","1.1.7 for 2019-2020 @t1"
"k","b",,"5144","1624905748121","diff.py","1.1.7 for 2019-2020 @t1"
"e","l","","5144","1624905748315","diff.py","1.1.7 for 2019-2020 @t1"
"k","l",,"5145","1624905748327","diff.py","1.1.7 for 2019-2020 @t1"
"e","o","","5145","1624905748434","diff.py","1.1.7 for 2019-2020 @t1"
"k","o",,"5146","1624905748445","diff.py","1.1.7 for 2019-2020 @t1"
"e","c","","5146","1624905748525","diff.py","1.1.7 for 2019-2020 @t1"
"k","c",,"5147","1624905748537","diff.py","1.1.7 for 2019-2020 @t1"
"e","k","","5147","1624905748634","diff.py","1.1.7 for 2019-2020 @t1"
"k","k",,"5148","1624905748638","diff.py","1.1.7 for 2019-2020 @t1"
"e","s","","5148","1624905748746","diff.py","1.1.7 for 2019-2020 @t1"
"k","s",,"5149","1624905748749","diff.py","1.1.7 for 2019-2020 @t1"
"a","Left",,,"1624905751030","diff.py","1.1.7 for 2019-2020 @t1"
"e","t","","5137","1624905751157","diff.py","1.1.7 for 2019-2020 @t1"
"k","t",,"5138","1624905751165","diff.py","1.1.7 for 2019-2020 @t1"
"a","Move Caret to Line End",,,"1624905757967","diff.py","1.1.7 for 2019-2020 @t1"
"a","Up",,,"1624905758579","diff.py","1.1.7 for 2019-2020 @t1"
"a","Move Caret to Line Start with Selection",,,"1624905759041","diff.py","1.1.7 for 2019-2020 @t1"
"a","Enter",,,"1624905773137","diff.py","1.1.7 for 2019-2020 @t1"
"e","    
","","5184","1624905773150","diff.py","1.1.7 for 2019-2020 @t1"
"e","a","","5188","1624905773711","diff.py","1.1.7 for 2019-2020 @t1"
"k","a",,"5189","1624905773723","diff.py","1.1.7 for 2019-2020 @t1"
"e"," ","","5189","1624905773925","diff.py","1.1.7 for 2019-2020 @t1"
"k"," ",,"5190","1624905773928","diff.py","1.1.7 for 2019-2020 @t1"
"e","=","","5190","1624905774058","diff.py","1.1.7 for 2019-2020 @t1"
"k","=",,"5191","1624905774070","diff.py","1.1.7 for 2019-2020 @t1"
"e","a","","5191","1624905774178","diff.py","1.1.7 for 2019-2020 @t1"
"k","a",,"5192","1624905774190","diff.py","1.1.7 for 2019-2020 @t1"
"e"," ","","5192","1624905774275","diff.py","1.1.7 for 2019-2020 @t1"
"k"," ",,"5193","1624905774278","diff.py","1.1.7 for 2019-2020 @t1"
"e","a","","5193","1624905774455","diff.py","1.1.7 for 2019-2020 @t1"
"k","a",,"5194","1624905774466","diff.py","1.1.7 for 2019-2020 @t1"
"e",".","","5194","1624905774611","diff.py","1.1.7 for 2019-2020 @t1"
"k",".",,"5195","1624905774614","diff.py","1.1.7 for 2019-2020 @t1"
"e","s","","5195","1624905774779","diff.py","1.1.7 for 2019-2020 @t1"
"k","s",,"5196","1624905774791","diff.py","1.1.7 for 2019-2020 @t1"
"e","p","","5196","1624905774920","diff.py","1.1.7 for 2019-2020 @t1"
"k","p",,"5197","1624905774922","diff.py","1.1.7 for 2019-2020 @t1"
"a","Backspace",,,"1624905775493","diff.py","1.1.7 for 2019-2020 @t1"
"e","","p","5196","1624905775507","diff.py","1.1.7 for 2019-2020 @t1"
"a","Backspace",,,"1624905775675","diff.py","1.1.7 for 2019-2020 @t1"
"e","","s","5195","1624905775684","diff.py","1.1.7 for 2019-2020 @t1"
"a","Backspace",,,"1624905775837","diff.py","1.1.7 for 2019-2020 @t1"
"e","",".","5194","1624905775844","diff.py","1.1.7 for 2019-2020 @t1"
"a","Backspace",,,"1624905776009","diff.py","1.1.7 for 2019-2020 @t1"
"e","","a","5193","1624905776017","diff.py","1.1.7 for 2019-2020 @t1"
"a","Backspace",,,"1624905776174","diff.py","1.1.7 for 2019-2020 @t1"
"e",""," ","5192","1624905776181","diff.py","1.1.7 for 2019-2020 @t1"
"e",".","","5192","1624905776392","diff.py","1.1.7 for 2019-2020 @t1"
"k",".",,"5193","1624905776403","diff.py","1.1.7 for 2019-2020 @t1"
"e","s","","5193","1624905776521","diff.py","1.1.7 for 2019-2020 @t1"
"k","s",,"5194","1624905776527","diff.py","1.1.7 for 2019-2020 @t1"
"e","p","","5194","1624905776670","diff.py","1.1.7 for 2019-2020 @t1"
"k","p",,"5195","1624905776677","diff.py","1.1.7 for 2019-2020 @t1"
"e","l","","5195","1624905776852","diff.py","1.1.7 for 2019-2020 @t1"
"k","l",,"5196","1624905776864","diff.py","1.1.7 for 2019-2020 @t1"
"e","o","","5196","1624905777243","diff.py","1.1.7 for 2019-2020 @t1"
"k","o",,"5197","1624905777245","diff.py","1.1.7 for 2019-2020 @t1"
"e","t","","5197","1624905777430","diff.py","1.1.7 for 2019-2020 @t1"
"k","t",,"5198","1624905777442","diff.py","1.1.7 for 2019-2020 @t1"
"a","Backspace",,,"1624905778080","diff.py","1.1.7 for 2019-2020 @t1"
"e","","t","5197","1624905778089","diff.py","1.1.7 for 2019-2020 @t1"
"a","Backspace",,,"1624905778228","diff.py","1.1.7 for 2019-2020 @t1"
"e","","o","5196","1624905778233","diff.py","1.1.7 for 2019-2020 @t1"
"e","i","","5196","1624905778788","diff.py","1.1.7 for 2019-2020 @t1"
"k","i",,"5197","1624905778800","diff.py","1.1.7 for 2019-2020 @t1"
"e","t","","5197","1624905778902","diff.py","1.1.7 for 2019-2020 @t1"
"k","t",,"5198","1624905778905","diff.py","1.1.7 for 2019-2020 @t1"
"e","l","","5198","1624905781844","diff.py","1.1.7 for 2019-2020 @t1"
"k","l",,"5199","1624905781847","diff.py","1.1.7 for 2019-2020 @t1"
"e","i","","5199","1624905782001","diff.py","1.1.7 for 2019-2020 @t1"
"k","i",,"5200","1624905782005","diff.py","1.1.7 for 2019-2020 @t1"
"e","n","","5200","1624905782179","diff.py","1.1.7 for 2019-2020 @t1"
"k","n",,"5201","1624905782182","diff.py","1.1.7 for 2019-2020 @t1"
"e","e","","5201","1624905782259","diff.py","1.1.7 for 2019-2020 @t1"
"k","e",,"5202","1624905782262","diff.py","1.1.7 for 2019-2020 @t1"
"e","s","","5202","1624905782432","diff.py","1.1.7 for 2019-2020 @t1"
"k","s",,"5203","1624905782435","diff.py","1.1.7 for 2019-2020 @t1"
"e","(","","5203","1624905782715","diff.py","1.1.7 for 2019-2020 @t1"
"e",")","","5204","1624905782726","diff.py","1.1.7 for 2019-2020 @t1"
"k","(",,"5204","1624905782727","diff.py","1.1.7 for 2019-2020 @t1"
"k",")",,"5205","1624905782802","diff.py","1.1.7 for 2019-2020 @t1"
"a","Left",,,"1624905783209","diff.py","1.1.7 for 2019-2020 @t1"
"e","n","","5204","1624905783764","diff.py","1.1.7 for 2019-2020 @t1"
"k","n",,"5205","1624905783766","diff.py","1.1.7 for 2019-2020 @t1"
"e","e","","5205","1624905783883","diff.py","1.1.7 for 2019-2020 @t1"
"k","e",,"5206","1624905783888","diff.py","1.1.7 for 2019-2020 @t1"
"e","w","","5206","1624905783951","diff.py","1.1.7 for 2019-2020 @t1"
"k","w",,"5207","1624905783958","diff.py","1.1.7 for 2019-2020 @t1"
"e","l","","5207","1624905784077","diff.py","1.1.7 for 2019-2020 @t1"
"k","l",,"5208","1624905784081","diff.py","1.1.7 for 2019-2020 @t1"
"e","i","","5208","1624905784247","diff.py","1.1.7 for 2019-2020 @t1"
"k","i",,"5209","1624905784262","diff.py","1.1.7 for 2019-2020 @t1"
"e","n","","5209","1624905784427","diff.py","1.1.7 for 2019-2020 @t1"
"k","n",,"5210","1624905784442","diff.py","1.1.7 for 2019-2020 @t1"
"e","e","","5210","1624905784539","diff.py","1.1.7 for 2019-2020 @t1"
"k","e",,"5211","1624905784552","diff.py","1.1.7 for 2019-2020 @t1"
"a","Enter",,,"1624905784673","diff.py","1.1.7 for 2019-2020 @t1"
"e","
    ","","5211","1624905784682","diff.py","1.1.7 for 2019-2020 @t1"
"e","                ","","5212","1624905784713","diff.py","1.1.7 for 2019-2020 @t1"
"a","Undo Typing",,,"1624905785457","diff.py","1.1.7 for 2019-2020 @t1"
"e","","                ","5212","1624905785460","diff.py","1.1.7 for 2019-2020 @t1"
"e","","
    ","5211","1624905785465","diff.py","1.1.7 for 2019-2020 @t1"
"a","Move Caret to Line End",,,"1624905785827","diff.py","1.1.7 for 2019-2020 @t1"
"a","Enter",,,"1624905786050","diff.py","1.1.7 for 2019-2020 @t1"
"e","    
","","5213","1624905786060","diff.py","1.1.7 for 2019-2020 @t1"
"e","b","","5217","1624905787740","diff.py","1.1.7 for 2019-2020 @t1"
"k","b",,"5218","1624905787743","diff.py","1.1.7 for 2019-2020 @t1"
"e"," ","","5218","1624905788000","diff.py","1.1.7 for 2019-2020 @t1"
"k"," ",,"5219","1624905788003","diff.py","1.1.7 for 2019-2020 @t1"
"e","=","","5219","1624905788102","diff.py","1.1.7 for 2019-2020 @t1"
"k","=",,"5220","1624905788114","diff.py","1.1.7 for 2019-2020 @t1"
"e"," ","","5220","1624905788883","diff.py","1.1.7 for 2019-2020 @t1"
"k"," ",,"5221","1624905788896","diff.py","1.1.7 for 2019-2020 @t1"
"e","b","","5221","1624905788969","diff.py","1.1.7 for 2019-2020 @t1"
"k","b",,"5222","1624905788981","diff.py","1.1.7 for 2019-2020 @t1"
"e",".","","5222","1624905789111","diff.py","1.1.7 for 2019-2020 @t1"
"k",".",,"5223","1624905789117","diff.py","1.1.7 for 2019-2020 @t1"
"e","s","","5223","1624905789269","diff.py","1.1.7 for 2019-2020 @t1"
"k","s",,"5224","1624905789294","diff.py","1.1.7 for 2019-2020 @t1"
"e","p","","5224","1624905789423","diff.py","1.1.7 for 2019-2020 @t1"
"k","p",,"5225","1624905789426","diff.py","1.1.7 for 2019-2020 @t1"
"e","l","","5225","1624905789620","diff.py","1.1.7 for 2019-2020 @t1"
"k","l",,"5226","1624905789632","diff.py","1.1.7 for 2019-2020 @t1"
"e","i","","5226","1624905789823","diff.py","1.1.7 for 2019-2020 @t1"
"k","i",,"5227","1624905789835","diff.py","1.1.7 for 2019-2020 @t1"
"e","t","","5227","1624905790028","diff.py","1.1.7 for 2019-2020 @t1"
"k","t",,"5228","1624905790040","diff.py","1.1.7 for 2019-2020 @t1"
"e","l","","5228","1624905790777","diff.py","1.1.7 for 2019-2020 @t1"
"k","l",,"5229","1624905790786","diff.py","1.1.7 for 2019-2020 @t1"
"e","i","","5229","1624905790924","diff.py","1.1.7 for 2019-2020 @t1"
"k","i",,"5230","1624905790936","diff.py","1.1.7 for 2019-2020 @t1"
"e","n","","5230","1624905791090","diff.py","1.1.7 for 2019-2020 @t1"
"k","n",,"5231","1624905791093","diff.py","1.1.7 for 2019-2020 @t1"
"e","e","","5231","1624905791176","diff.py","1.1.7 for 2019-2020 @t1"
"k","e",,"5232","1624905791188","diff.py","1.1.7 for 2019-2020 @t1"
"e","s","","5232","1624905791420","diff.py","1.1.7 for 2019-2020 @t1"
"k","s",,"5233","1624905791432","diff.py","1.1.7 for 2019-2020 @t1"
"e","(","","5233","1624905791701","diff.py","1.1.7 for 2019-2020 @t1"
"e",")","","5234","1624905791720","diff.py","1.1.7 for 2019-2020 @t1"
"k","(",,"5234","1624905791725","diff.py","1.1.7 for 2019-2020 @t1"
"e","n","","5234","1624905792029","diff.py","1.1.7 for 2019-2020 @t1"
"k","n",,"5235","1624905792035","diff.py","1.1.7 for 2019-2020 @t1"
"e","e","","5235","1624905792206","diff.py","1.1.7 for 2019-2020 @t1"
"k","e",,"5236","1624905792210","diff.py","1.1.7 for 2019-2020 @t1"
"e","w","","5236","1624905792335","diff.py","1.1.7 for 2019-2020 @t1"
"k","w",,"5237","1624905792352","diff.py","1.1.7 for 2019-2020 @t1"
"a","Choose Lookup Item",,,"1624905793201","diff.py","1.1.7 for 2019-2020 @t1"
"e","line","","5237","1624905793231","diff.py","1.1.7 for 2019-2020 @t1"
"a","Up",,,"1624905793448","diff.py","1.1.7 for 2019-2020 @t1"
"a","Up",,,"1624905793619","diff.py","1.1.7 for 2019-2020 @t1"
"a","Enter",,,"1624905793949","diff.py","1.1.7 for 2019-2020 @t1"
"e","    
","","5184","1624905793953","diff.py","1.1.7 for 2019-2020 @t1"
"e","n","","5188","1624905794247","diff.py","1.1.7 for 2019-2020 @t1"
"k","n",,"5189","1624905794258","diff.py","1.1.7 for 2019-2020 @t1"
"e","e","","5189","1624905794367","diff.py","1.1.7 for 2019-2020 @t1"
"k","e",,"5190","1624905794373","diff.py","1.1.7 for 2019-2020 @t1"
"e","w","","5190","1624905794443","diff.py","1.1.7 for 2019-2020 @t1"
"k","w",,"5191","1624905794459","diff.py","1.1.7 for 2019-2020 @t1"
"a","Choose Lookup Item",,,"1624905794941","diff.py","1.1.7 for 2019-2020 @t1"
"e","line","","5191","1624905794954","diff.py","1.1.7 for 2019-2020 @t1"
"e"," ","","5195","1624905795246","diff.py","1.1.7 for 2019-2020 @t1"
"k"," ",,"5196","1624905795252","diff.py","1.1.7 for 2019-2020 @t1"
"e","=","","5196","1624905795410","diff.py","1.1.7 for 2019-2020 @t1"
"k","=",,"5197","1624905795422","diff.py","1.1.7 for 2019-2020 @t1"
"e"," ","","5197","1624905795538","diff.py","1.1.7 for 2019-2020 @t1"
"k"," ",,"5198","1624905795550","diff.py","1.1.7 for 2019-2020 @t1"
"e","T","","5198","1624905795795","diff.py","1.1.7 for 2019-2020 @t1"
"k","T",,"5199","1624905795807","diff.py","1.1.7 for 2019-2020 @t1"
"e","r","","5199","1624905795915","diff.py","1.1.7 for 2019-2020 @t1"
"k","r",,"5200","1624905795921","diff.py","1.1.7 for 2019-2020 @t1"
"e","u","","5200","1624905796032","diff.py","1.1.7 for 2019-2020 @t1"
"k","u",,"5201","1624905796053","diff.py","1.1.7 for 2019-2020 @t1"
"a","Choose Lookup Item",,,"1624905796346","diff.py","1.1.7 for 2019-2020 @t1"
"e","e","","5201","1624905796355","diff.py","1.1.7 for 2019-2020 @t1"
"a","Move Caret to Line Start with Selection",,,"1624905892583","diff.py","1.1.7 for 2019-2020 @t1"
"a","Backspace",,,"1624905892964","diff.py","1.1.7 for 2019-2020 @t1"
"e","","#             g = self._fancy_replace(a, alo, ahi, b, blo, bhi)","5729","1624905892975","diff.py","1.1.7 for 2019-2020 @t1"
"a","Backspace",,,"1624905893177","diff.py","1.1.7 for 2019-2020 @t1"
"e",""," ","5728","1624905893185","diff.py","1.1.7 for 2019-2020 @t1"
"e","","   ","5725","1624905893200","diff.py","1.1.7 for 2019-2020 @t1"
"a","Backspace",,,"1624905893419","diff.py","1.1.7 for 2019-2020 @t1"
"e",""," ","5724","1624905893427","diff.py","1.1.7 for 2019-2020 @t1"
"e","","   ","5721","1624905893445","diff.py","1.1.7 for 2019-2020 @t1"
"a","Backspace",,,"1624905893767","diff.py","1.1.7 for 2019-2020 @t1"
"e","","
","5721","1624905893772","diff.py","1.1.7 for 2019-2020 @t1"
"a","Down",,,"1624905894252","diff.py","1.1.7 for 2019-2020 @t1"
"a","Down",,,"1624905894465","diff.py","1.1.7 for 2019-2020 @t1"
"a","Move Caret to Line Start with Selection",,,"1624905894761","diff.py","1.1.7 for 2019-2020 @t1"
"a","Backspace",,,"1624905895068","diff.py","1.1.7 for 2019-2020 @t1"
"e","","# in a","5763","1624905895075","diff.py","1.1.7 for 2019-2020 @t1"
"a","Backspace",,,"1624905895295","diff.py","1.1.7 for 2019-2020 @t1"
"e",""," ","5762","1624905895303","diff.py","1.1.7 for 2019-2020 @t1"
"e","","   ","5759","1624905895321","diff.py","1.1.7 for 2019-2020 @t1"
"a","Backspace",,,"1624905895505","diff.py","1.1.7 for 2019-2020 @t1"
"e",""," ","5758","1624905895516","diff.py","1.1.7 for 2019-2020 @t1"
"e","","   ","5755","1624905895534","diff.py","1.1.7 for 2019-2020 @t1"
"a","Backspace",,,"1624905895829","diff.py","1.1.7 for 2019-2020 @t1"
"e",""," ","5754","1624905895835","diff.py","1.1.7 for 2019-2020 @t1"
"e","","   ","5751","1624905895854","diff.py","1.1.7 for 2019-2020 @t1"
"a","Backspace",,,"1624905896230","diff.py","1.1.7 for 2019-2020 @t1"
"e","","
","5751","1624905896238","diff.py","1.1.7 for 2019-2020 @t1"
"a","Down",,,"1624905896675","diff.py","1.1.7 for 2019-2020 @t1"
"a","Down",,,"1624905896845","diff.py","1.1.7 for 2019-2020 @t1"
"a","Down",,,"1624905897031","diff.py","1.1.7 for 2019-2020 @t1"
"a","Down",,,"1624905897203","diff.py","1.1.7 for 2019-2020 @t1"
"a","Move Caret to Line Start with Selection",,,"1624905897636","diff.py","1.1.7 for 2019-2020 @t1"
"a","Backspace",,,"1624905897953","diff.py","1.1.7 for 2019-2020 @t1"
"e","","# in b","5876","1624905897965","diff.py","1.1.7 for 2019-2020 @t1"
"a","Backspace",,,"1624905898160","diff.py","1.1.7 for 2019-2020 @t1"
"e",""," ","5875","1624905898168","diff.py","1.1.7 for 2019-2020 @t1"
"e","","   ","5872","1624905898186","diff.py","1.1.7 for 2019-2020 @t1"
"a","Backspace",,,"1624905898352","diff.py","1.1.7 for 2019-2020 @t1"
"e",""," ","5871","1624905898361","diff.py","1.1.7 for 2019-2020 @t1"
"e","","   ","5868","1624905898384","diff.py","1.1.7 for 2019-2020 @t1"
"a","Backspace",,,"1624905898649","diff.py","1.1.7 for 2019-2020 @t1"
"e",""," ","5867","1624905898657","diff.py","1.1.7 for 2019-2020 @t1"
"e","","   ","5864","1624905898676","diff.py","1.1.7 for 2019-2020 @t1"
"a","Backspace",,,"1624905898971","diff.py","1.1.7 for 2019-2020 @t1"
"e","","
","5864","1624905898981","diff.py","1.1.7 for 2019-2020 @t1"
"a","Down",,,"1624905899417","diff.py","1.1.7 for 2019-2020 @t1"
"a","Down",,,"1624905899599","diff.py","1.1.7 for 2019-2020 @t1"
"a","Down",,,"1624905899788","diff.py","1.1.7 for 2019-2020 @t1"
"a","Down",,,"1624905899969","diff.py","1.1.7 for 2019-2020 @t1"
"a","Move Caret to Line End",,,"1624905900308","diff.py","1.1.7 for 2019-2020 @t1"
"a","Move Caret to Line Start with Selection",,,"1624905900703","diff.py","1.1.7 for 2019-2020 @t1"
"a","Backspace",,,"1624905901117","diff.py","1.1.7 for 2019-2020 @t1"
"e","","#             blocks.append((ai, bi, len(astr)))","5988","1624905901122","diff.py","1.1.7 for 2019-2020 @t1"
"a","Backspace",,,"1624905901318","diff.py","1.1.7 for 2019-2020 @t1"
"e",""," ","5987","1624905901327","diff.py","1.1.7 for 2019-2020 @t1"
"e","","   ","5984","1624905901346","diff.py","1.1.7 for 2019-2020 @t1"
"a","Backspace",,,"1624905901522","diff.py","1.1.7 for 2019-2020 @t1"
"e",""," ","5983","1624905901531","diff.py","1.1.7 for 2019-2020 @t1"
"e","","   ","5980","1624905901550","diff.py","1.1.7 for 2019-2020 @t1"
"a","Backspace",,,"1624905901865","diff.py","1.1.7 for 2019-2020 @t1"
"e",""," ","5979","1624905901870","diff.py","1.1.7 for 2019-2020 @t1"
"e","","   ","5976","1624905901879","diff.py","1.1.7 for 2019-2020 @t1"
"a","Backspace",,,"1624905902151","diff.py","1.1.7 for 2019-2020 @t1"
"e","","
","5976","1624905902161","diff.py","1.1.7 for 2019-2020 @t1"
"a","Move Caret to Line End",,,"1624905911037","diff.py","1.1.7 for 2019-2020 @t1"
"a","Delete",,,"1624905924480","diff.py","1.1.7 for 2019-2020 @t1"
"e","",",","5159","1624905924486","diff.py","1.1.7 for 2019-2020 @t1"
"a","Backspace",,,"1624905924905","diff.py","1.1.7 for 2019-2020 @t1"
"e","","k","5158","1624905924912","diff.py","1.1.7 for 2019-2020 @t1"
"a","Backspace",,,"1624905925089","diff.py","1.1.7 for 2019-2020 @t1"
"e","","n","5157","1624905925097","diff.py","1.1.7 for 2019-2020 @t1"
"a","Backspace",,,"1624905925262","diff.py","1.1.7 for 2019-2020 @t1"
"e","","u","5156","1624905925271","diff.py","1.1.7 for 2019-2020 @t1"
"a","Backspace",,,"1624905925434","diff.py","1.1.7 for 2019-2020 @t1"
"e","","j","5155","1624905925443","diff.py","1.1.7 for 2019-2020 @t1"
"a","Backspace",,,"1624905925605","diff.py","1.1.7 for 2019-2020 @t1"
"e","","e","5154","1624905925613","diff.py","1.1.7 for 2019-2020 @t1"
"a","Backspace",,,"1624905925767","diff.py","1.1.7 for 2019-2020 @t1"
"e","","n","5153","1624905925775","diff.py","1.1.7 for 2019-2020 @t1"
"a","Backspace",,,"1624905925929","diff.py","1.1.7 for 2019-2020 @t1"
"e","","i","5152","1624905925937","diff.py","1.1.7 for 2019-2020 @t1"
"a","Delete",,,"1624905926261","diff.py","1.1.7 for 2019-2020 @t1"
"e",""," ","5152","1624905926266","diff.py","1.1.7 for 2019-2020 @t1"
"a","Backspace",,,"1624905926474","diff.py","1.1.7 for 2019-2020 @t1"
"e","","l","5151","1624905926481","diff.py","1.1.7 for 2019-2020 @t1"
"a","Down",,,"1624905927211","diff.py","1.1.7 for 2019-2020 @t1"
"a","Enter",,,"1624905927486","diff.py","1.1.7 for 2019-2020 @t1"
"e","    
","","5174","1624905927496","diff.py","1.1.7 for 2019-2020 @t1"
"e","l","","5178","1624905927709","diff.py","1.1.7 for 2019-2020 @t1"
"k","l",,"5179","1624905927717","diff.py","1.1.7 for 2019-2020 @t1"
"e","i","","5179","1624905927909","diff.py","1.1.7 for 2019-2020 @t1"
"k","i",,"5180","1624905927939","diff.py","1.1.7 for 2019-2020 @t1"
"e","n","","5180","1624905928080","diff.py","1.1.7 for 2019-2020 @t1"
"k","n",,"5181","1624905928103","diff.py","1.1.7 for 2019-2020 @t1"
"e","e","","5181","1624905928185","diff.py","1.1.7 for 2019-2020 @t1"
"k","e",,"5182","1624905928191","diff.py","1.1.7 for 2019-2020 @t1"
"e","j","","5182","1624905929799","diff.py","1.1.7 for 2019-2020 @t1"
"k","j",,"5183","1624905929812","diff.py","1.1.7 for 2019-2020 @t1"
"e","u","","5183","1624905929991","diff.py","1.1.7 for 2019-2020 @t1"
"k","u",,"5184","1624905930003","diff.py","1.1.7 for 2019-2020 @t1"
"e","n","","5184","1624905930155","diff.py","1.1.7 for 2019-2020 @t1"
"k","n",,"5185","1624905930161","diff.py","1.1.7 for 2019-2020 @t1"
"e","k","","5185","1624905930294","diff.py","1.1.7 for 2019-2020 @t1"
"k","k",,"5186","1624905930306","diff.py","1.1.7 for 2019-2020 @t1"
"e"," ","","5186","1624905930400","diff.py","1.1.7 for 2019-2020 @t1"
"k"," ",,"5187","1624905930409","diff.py","1.1.7 for 2019-2020 @t1"
"e","=","","5187","1624905930537","diff.py","1.1.7 for 2019-2020 @t1"
"k","=",,"5188","1624905930540","diff.py","1.1.7 for 2019-2020 @t1"
"e"," ","","5188","1624905930655","diff.py","1.1.7 for 2019-2020 @t1"
"k"," ",,"5189","1624905930668","diff.py","1.1.7 for 2019-2020 @t1"
"e","N","","5189","1624905930907","diff.py","1.1.7 for 2019-2020 @t1"
"k","N",,"5190","1624905930919","diff.py","1.1.7 for 2019-2020 @t1"
"e","n","","5190","1624905931180","diff.py","1.1.7 for 2019-2020 @t1"
"k","n",,"5191","1624905931191","diff.py","1.1.7 for 2019-2020 @t1"
"a","Backspace",,,"1624905931714","diff.py","1.1.7 for 2019-2020 @t1"
"e","","n","5190","1624905931718","diff.py","1.1.7 for 2019-2020 @t1"
"e","o","","5190","1624905931934","diff.py","1.1.7 for 2019-2020 @t1"
"k","o",,"5191","1624905931956","diff.py","1.1.7 for 2019-2020 @t1"
"a","Choose Lookup Item",,,"1624905932260","diff.py","1.1.7 for 2019-2020 @t1"
"e","ne","","5191","1624905932272","diff.py","1.1.7 for 2019-2020 @t1"
"a","Move Caret to Line End",,,"1624905935358","diff.py","1.1.7 for 2019-2020 @t1"
"a","Move Caret to Line Start with Selection",,,"1624905935745","diff.py","1.1.7 for 2019-2020 @t1"
"a","Up with Selection",,,"1624905935874","diff.py","1.1.7 for 2019-2020 @t1"
"a","Up with Selection",,,"1624905936064","diff.py","1.1.7 for 2019-2020 @t1"
"a","Backspace",,,"1624905936432","diff.py","1.1.7 for 2019-2020 @t1"
"e","","
newline = True
blocks = test(None, _final.splitlines(newline), _snap.splitlines(newline))","6196","1624905936439","diff.py","1.1.7 for 2019-2020 @t1"
"a","Backspace",,,"1624905936635","diff.py","1.1.7 for 2019-2020 @t1"
"e","","
","6195","1624905936642","diff.py","1.1.7 for 2019-2020 @t1"
"a","Clean Up Code",,,"1624905938248","diff.py","1.1.7 for 2019-2020 @t1"
"a","Clean Up Code",,,"1624905938291","diff.py","1.1.7 for 2019-2020 @t1"
"e","
","","16","1624905938312","diff.py","1.1.7 for 2019-2020 @t1"
"e","","                ","3654","1624905938320","diff.py","1.1.7 for 2019-2020 @t1"
"e",""," ","5114","1624905938326","diff.py","1.1.7 for 2019-2020 @t1"
"e","
","","5114","1624905938327","diff.py","1.1.7 for 2019-2020 @t1"
"e"," ","","5205","1624905938332","diff.py","1.1.7 for 2019-2020 @t1"
"a","Clean Up Code",,,"1624905938371","diff.py","1.1.7 for 2019-2020 @t1"
"a","Reload From Disk",,,"1624905938608","diff.py","1.1.7 for 2019-2020 @t1"
"a","EditorChange",,,"1624905949725","diff.py","1.1.7 for 2019-2020 @t1"
"a","Move Caret to Line Start with Selection",,,"1624906097106","diff.py","1.1.7 for 2019-2020 @t1"
"a","Backspace",,,"1624906097411","diff.py","1.1.7 for 2019-2020 @t1"
"e","","debug('zz')","3530","1624906097418","diff.py","1.1.7 for 2019-2020 @t1"
"a","Backspace",,,"1624906097590","diff.py","1.1.7 for 2019-2020 @t1"
"e",""," ","3529","1624906097593","diff.py","1.1.7 for 2019-2020 @t1"
"e","","   ","3526","1624906097599","diff.py","1.1.7 for 2019-2020 @t1"
"a","Backspace",,,"1624906097774","diff.py","1.1.7 for 2019-2020 @t1"
"e",""," ","3525","1624906097779","diff.py","1.1.7 for 2019-2020 @t1"
"e","","   ","3522","1624906097787","diff.py","1.1.7 for 2019-2020 @t1"
"a","Backspace",,,"1624906097973","diff.py","1.1.7 for 2019-2020 @t1"
"e",""," ","3521","1624906097979","diff.py","1.1.7 for 2019-2020 @t1"
"e","","   ","3518","1624906097984","diff.py","1.1.7 for 2019-2020 @t1"
"a","Backspace",,,"1624906098240","diff.py","1.1.7 for 2019-2020 @t1"
"e","","
","3518","1624906098245","diff.py","1.1.7 for 2019-2020 @t1"
"a","Show all duplicates like this",,,"1624906109373","diff.py","1.1.7 for 2019-2020 @t1"
"a","Synchronize document and its fragment",,,"1624906109499","diff.py","1.1.7 for 2019-2020 @t1"
"a","Synchronize document and its fragment",,,"1624906109499","diff.py","1.1.7 for 2019-2020 @t1"
"a","Backspace",,,"1624987485441","diff.py","1.1.7 for 2019-2020 @t1"
"e","","4","890","1624987485459","diff.py","1.1.7 for 2019-2020 @t1"
"e","3","","890","1624987485593","diff.py","1.1.7 for 2019-2020 @t1"
"k","3",,"891","1624987485597","diff.py","1.1.7 for 2019-2020 @t1"
"a","Backspace",,,"1624987487395","diff.py","1.1.7 for 2019-2020 @t1"
"e","","5","897","1624987487408","diff.py","1.1.7 for 2019-2020 @t1"
"e","4","","896","1624987488921","diff.py","1.1.7 for 2019-2020 @t1"
"k","4",,"897","1624987488929","diff.py","1.1.7 for 2019-2020 @t1"
"a","Right",,,"1624987665888","diff.py","1.1.7 for 2019-2020 @t1"
"a","Right",,,"1624987666169","diff.py","1.1.7 for 2019-2020 @t1"
"a","Right",,,"1624987666335","diff.py","1.1.7 for 2019-2020 @t1"
"a","Right",,,"1624987666544","diff.py","1.1.7 for 2019-2020 @t1"
"a","Right",,,"1624987666718","diff.py","1.1.7 for 2019-2020 @t1"
"a","Right",,,"1624987666902","diff.py","1.1.7 for 2019-2020 @t1"
"a","Backspace",,,"1624987667356","diff.py","1.1.7 for 2019-2020 @t1"
"e","","4","896","1624987667365","diff.py","1.1.7 for 2019-2020 @t1"
"e","3","","896","1624987667609","diff.py","1.1.7 for 2019-2020 @t1"
"k","3",,"897","1624987667617","diff.py","1.1.7 for 2019-2020 @t1"
"a","EditorChange",,,"1624988599859","diff.py","1.1.7 for 2019-2020 @t1"
"a","Comment with Line Comment",,,"1624988605422","diff.py","1.1.7 for 2019-2020 @t1"
"a","Delete",,,"1624990027063","diff.py","1.1.7 for 2019-2020 @t1"
"e","","3","890","1624990027074","diff.py","1.1.7 for 2019-2020 @t1"
"a","Delete",,,"1624990027941","diff.py","1.1.7 for 2019-2020 @t1"
"e","","0","890","1624990027951","diff.py","1.1.7 for 2019-2020 @t1"
"e","2","","890","1624990029596","diff.py","1.1.7 for 2019-2020 @t1"
"k","2",,"891","1624990029603","diff.py","1.1.7 for 2019-2020 @t1"
"e","5","","891","1624990030009","diff.py","1.1.7 for 2019-2020 @t1"
"k","5",,"892","1624990030011","diff.py","1.1.7 for 2019-2020 @t1"
"a","EditorChange",,,"1624990039802","diff.py","1.1.7 for 2019-2020 @t1"
"a","Select All",,,"1630457993660","diff.py","1.1.7 for 2019-2020 @t1"
"a","Copy",,,"1630457994506","diff.py","1.1.7 for 2019-2020 @t1"
"c","import difflib


class DiffHelper:
    def __init__(self, charjunk=None):
        self.charjunk = charjunk

    def _fancy_replace(self, abidx, a, alo, ahi, b, blo, bhi):
        r""""""
    When replacing one block of lines with another, search the blocks
    for *similar* lines; the best-matching pair (if any) is used as a
    synch point, and intraline difference marking is done on the
    similar pair. Lots of work, but often worth it.
    Example:
    >>> d = Differ()
    >>> results = d._fancy_replace(['abcDefghiJkl\n'], 0, 1,
    ...                            ['abcdefGhijkl\n'], 0, 1)
    >>> print(''.join(results), end="""")
    - abcDefghiJkl
    ?    ^  ^  ^
    + abcdefGhijkl
    ?    ^  ^  ^
    """"""

        # don't synch up unless the lines have a similarity score of at
        # least cutoff; best_ratio tracks the best score seen so far
        best_ratio, cutoff = 0.25, 0.35
        cruncher = difflib.SequenceMatcher(self.charjunk)
        eqi, eqj = None, None  # 1st indices of equal lines (if any)

        # search for the pair that matches best without being identical
        # (identical lines must be junk lines, & we don't want to synch up
        # on junk -- unless we have to)
        for j in range(blo, bhi):
            bj = b[j]
            cruncher.set_seq2(bj)
            for i in range(alo, ahi):
                ai = a[i]
                if ai == bj:
                    if eqi is None:
                        eqi, eqj = i, j
                    continue
                cruncher.set_seq1(ai)
                # computing similarity is expensive, so use the quick
                # upper bounds first -- have seen this speed up messy
                # compares by a factor of 3.
                # note that ratio() is only expensive to compute the first
                # time it's called on a sequence pair; the expensive part
                # of the computation is cached by cruncher
                if cruncher.real_quick_ratio() > best_ratio and \
                        cruncher.quick_ratio() > best_ratio and \
                        cruncher.ratio() > best_ratio:
                    best_ratio, best_i, best_j = cruncher.ratio(), i, j
        if best_ratio < cutoff:
            # no non-identical ""pretty close"" pair
            if eqi is None:
                # no identical pair either -- treat it as a straight replace
                abidx[0] += sum([len(a[ali]) for ali in range(alo, ahi)])
                abidx[1] += sum([len(b[bli]) for bli in range(blo, bhi)])
                #                 abidx[1] += bhi-blo
                #                 debug(' '.join(['xx', str(ahi), str(alo), str(bhi), str(blo)]))
                #                 yield from self._plain_replace(a, alo, ahi, b, blo, bhi)
                return
            # no close pair, but an identical pair -- synch up on that
            best_i, best_j, best_ratio = eqi, eqj, 1.0
        else:
            # there's a close pair, so forget the identical pair (if any)
            eqi = None

        # a[best_i] very similar to b[best_j]; eqi is None iff they're not
        # identical

        # pump out diffs from before the synch point
        yield from self._fancy_helper(abidx, a, alo, best_i, b, blo, best_j)

        # do intraline marking on the synch pair
        aelt, belt = a[best_i], b[best_j]
        if eqi is None:
            # pump out a '-', '?', '+', '?' quad for the synched lines
            atags = btags = """"
            cruncher.set_seqs(aelt, belt)
            for tag, ai1, ai2, bj1, bj2 in cruncher.get_opcodes():
                la, lb = ai2 - ai1, bj2 - bj1
                if tag == 'replace':
                    atags += '^' * la
                    btags += '^' * lb
                    abidx[0] += la
                    abidx[1] += lb
                elif tag == 'delete':
                    atags += '-' * la
                    abidx[0] += la
                elif tag == 'insert':
                    btags += '+' * lb
                    abidx[1] += lb
                elif tag == 'equal':
                    yield (abidx[0], abidx[1], la)
                    abidx[0] += la
                    abidx[1] += la
                    atags += ' ' * la
                    btags += ' ' * lb
                else:
                    raise ValueError('unknown tag %r' % (tag,))
        #             yield from self._qformat(aelt, belt, atags, btags)
        else:
            # the synch pair is identical
            yield (abidx[0], abidx[1], len(aelt))
        #             yield '  ' + aelt

        # pump out diffs from after the synch point
        yield from self._fancy_helper(abidx, a, best_i + 1, ahi, b, best_j + 1, bhi)

    def _fancy_helper(self, abidx, a, alo, ahi, b, blo, bhi):
        if alo < ahi:
            if blo < bhi:
                yield from self._fancy_replace(abidx, a, alo, ahi, b, blo, bhi)
            else:
                abidx[0] += sum([len(a[ali]) for ali in range(alo, ahi)])
        elif blo < bhi:
            abidx[1] += sum([len(b[bli]) for bli in range(blo, bhi)])


def get_diff_blocks(a, b):
    blocks = []
    linejunk = None
    newline = True
    a = a.splitlines(newline)
    b = b.splitlines(newline)
    cruncher = difflib.SequenceMatcher(linejunk, a, b)
    ai = 0
    bi = 0
    helper = DiffHelper()
    for tag, alo, ahi, blo, bhi in cruncher.get_opcodes():
        astr = ''.join(a[alo:ahi])
        bstr = ''.join(b[blo:bhi])
        #         print(tag, alo, ahi, blo, bhi, astr, bstr)
        if tag == 'replace':
            yield from helper._fancy_replace([ai, bi], a, alo, ahi, b, blo, bhi)
            ai += len(astr)
            bi += len(bstr)
        elif tag == 'delete':
            ai += len(astr)
        #             g = self._dump('-', a, alo, ahi)
        elif tag == 'insert':
            bi += len(bstr)
        #             g = self._dump('+', b, blo, bhi)
        elif tag == 'equal':
            block = (ai, bi, len(astr))
            ai += len(astr)
            bi += len(astr)
            yield block
        else:
            raise ValueError('unknown tag %r' % (tag,))

    return blocks
",,"0","1630457994532","diff.py","1.1.7 for 2019-2020 @t1"
"a","EditorChange",,,"1630458020707","diff.py","1.1.7 for 2019-2020 @t1"
"a","EditorChange",,,"1630458021339","diff.py","1.1.7 for 2019-2020 @t1"
