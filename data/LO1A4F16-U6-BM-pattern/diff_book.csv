["S", "Se", "S", "Sy", "Sys", "Syst", "Syste", "System", "System R", "System Re", "System Req", "System Req\n", "System Req\n    ", "System Req\n    \n\n\n\nSystem Analysis\n\n\n\n\nSystem Design\n\n\n\nTesting", "System Req\n    \n\n\n\nSystem Analysis\n\n\n\n\nSystem Des    the pattern module will have several function\n        setup() -\nign\n\n\n\nTesting", "System Req\n\n\n\n\nSystem Analysis\n\n\n\n\nSystem Des    the pattern module will have several function\n        setup() -\nign\n\n\n\nTesting", "System Req\n\n\n\n\nSystem Analysis\n\n\n\n\nSystem Des    the pattern module will have several function\n        setup() -\nign w\n\n\n\nTesting", "System Req\n\n\n\n\nSystem Analysis\n\n\n\n\nSystem Des    the pattern module will have several function\n        setup() -\nign wi\n\n\n\nTesting", "System Req\n\n\n\n\nSystem Analysis\n\n\n\n\nSystem Des    the pattern module will have several function\n        setup() -\nign wil\n\n\n\nTesting", "System Req\n\n\n\n\nSystem Analysis\n\n\n\n\nSystem Des    the pattern module will have several function\n        setup() -\nign will\n\n\n\nTesting", "System Req\n\n\n\n\nSystem Analysis\n\n\n\n\nSystem Des    the pattern module will have several function\n        setup() -\nign will m\n\n\n\nTesting", "System Req\n\n\n\n\nSystem Analysis\n\n\n\n\nSystem Des    the pattern module will have several function\n        setup() -\nign will ma\n\n\n\nTesting", "System Req\n\n\n\n\nSystem Analysis\n\n\n\n\nSystem Des    the pattern module will have several function\n        setup() -\nign will mak\n\n\n\nTesting", "System Req\n\n\n\n\nSystem Analysis\n\n\n\n\nSystem Des    the pattern module will have several function\n        setup() -\nign will make\n\n\n\nTesting", "System Req\n\n\n\n\nSystem Analysis\n\n\n\n\nSystem Des    the pattern module will have several function\n        setup() -\nign will make t\n\n\n\nTesting", "System Req\n\n\n\n\nSystem Analysis\n\n\n\n\nSystem Des    the pattern module will have several function\n        setup() -\nign will make tu\n\n\n\nTesting", "System Req\n\n\n\n\nSystem Analysis\n\n\n\n\nSystem Des    the pattern module will have several function\n        setup() -\nign will make tur\n\n\n\nTesting", "System Req\n\n\n\n\nSystem Analysis\n\n\n\n\nSystem Des    the pattern module will have several function\n        setup() -\nign will make turt\n\n\n\nTesting", "System Req\n\n\n\n\nSystem Analysis\n\n\n\n\nSystem Des    the pattern module will have several function\n        setup() -\nign will make turtl\n\n\n\nTesting", "System Req\n\n\n\n\nSystem Analysis\n\n\n\n\nSystem Des    the pattern module will have several function\n        setup() -\nign will make turtle\n\n\n\nTesting", "System Req\n\n\n\n\nSystem Analysis\n\n\n\n\nSystem Des    the pattern module will have several function\n        setup() -\nign will make turtle d\n\n\n\nTesting", "System Req\n\n\n\n\nSystem Analysis\n\n\n\n\nSystem Des    the pattern module will have several function\n        setup() -\nign will make turtle dr\n\n\n\nTesting", "System Req\n\n\n\n\nSystem Analysis\n\n\n\n\nSystem Des    the pattern module will have several function\n        setup() -\nign will make turtle dra\n\n\n\nTesting", "System Req\n\n\n\n\nSystem Analysis\n\n\n\n\nSystem Des    the pattern module will have several function\n        setup() -\nign will make turtle draw\n\n\n\nTesting", "System Req\n\n\n\n\nSystem Analysis\n\n\n\n\nSystem Des    the pattern module will have several function\n        setup() -\nign will make turtle draw q\n\n\n\nTesting", "System Req\n\n\n\n\nSystem Analysis\n\n\n\n\nSystem Des    the pattern module will have several function\n        setup() -\nign will make turtle draw qu\n\n\n\nTesting", "System Req\n\n\n\n\nSystem Analysis\n\n\n\n\nSystem Des    the pattern module will have several function\n        setup() -\nign will make turtle draw qui\n\n\n\nTesting", "System Req\n\n\n\n\nSystem Analysis\n\n\n\n\nSystem Des    the pattern module will have several function\n        setup() -\nign will make turtle draw quic\n\n\n\nTesting", "System Req\n\n\n\n\nSystem Analysis\n\n\n\n\nSystem Des    the pattern module will have several function\n        setup() -\nign will make turtle draw quick\n\n\n\nTesting", "System Req\n\n\n\n\nSystem Analysis\n\n\n\n\nSystem Des    the pattern module will have several function\n        setup() -\nign will make turtle draw quickl\n\n\n\nTesting", "System Req\n\n\n\n\nSystem Analysis\n\n\n\n\nSystem Des    the pattern module will have several function\n        setup() -\nign will make turtle draw quickly\n\n\n\nTesting", "System Req\n\n\n\n\nSystem Analysis\n\n\n\n\nSystem Des    the pattern module will have several function\n        setup() -\nign will make turtle draw quickly\n            \n\n\n\nTesting", "System Req\n\n\n\n\nSystem Analysis\n\n\n\n\nSystem Des    the pattern module will have several function\n        setup() -\nign will make turtle draw quickly\n                \n\n\n\nTesting", "System Req\n\n\n\n\nSystem Analysis\n\n\n\n\nSystem Des    the pattern module will have several function\n        setup() -\nign will make turtle draw quickly\n                    \n\n\n\nTesting", "System Req\n\n\n\n\nSystem Analysis\n\n\n\n\nSystem Des    the pattern module will have several function\n        setup() -\nign will make turtle draw quickly\n                    m\n\n\n\nTesting", "System Req\n\n\n\n\nSystem Analysis\n\n\n\n\nSystem Des    the pattern module will have several function\n        setup() -\nign will make turtle draw quickly\n                    ma\n\n\n\nTesting", "System Req\n\n\n\n\nSystem Analysis\n\n\n\n\nSystem Des    the pattern module will have several function\n        setup() -\nign will make turtle draw quickly\n                    mak\n\n\n\nTesting", "System Req\n\n\n\n\nSystem Analysis\n\n\n\n\nSystem Des    the pattern module will have several function\n        setup() -\nign will make turtle draw quickly\n                    make\n\n\n\nTesting", "System Req\n\n\n\n\nSystem Analysis\n\n\n\n\nSystem Des    the pattern module will have several function\n        setup() -\nign will make turtle draw quickly\n                    make t\n\n\n\nTesting", "System Req\n\n\n\n\nSystem Analysis\n\n\n\n\nSystem Des    the pattern module will have several function\n        setup() -\nign will make turtle draw quickly\n                    make tu\n\n\n\nTesting", "System Req\n\n\n\n\nSystem Analysis\n\n\n\n\nSystem Des    the pattern module will have several function\n        setup() -\nign will make turtle draw quickly\n                    make tur\n\n\n\nTesting", "System Req\n\n\n\n\nSystem Analysis\n\n\n\n\nSystem Des    the pattern module will have several function\n        setup() -\nign will make turtle draw quickly\n                    make turt\n\n\n\nTesting", "System Req\n\n\n\n\nSystem Analysis\n\n\n\n\nSystem Des    the pattern module will have several function\n        setup() -\nign will make turtle draw quickly\n                    make turtl\n\n\n\nTesting", "System Req\n\n\n\n\nSystem Analysis\n\n\n\n\nSystem Des    the pattern module will have several function\n        setup() -\nign will make turtle draw quickly\n                    make turtle\n\n\n\nTesting", "System Req\n\n\n\n\nSystem Analysis\n\n\n\n\nSystem Des    the pattern module will have several function\n        setup() -\nign will make turtle draw quickly\n                    make turtle h\n\n\n\nTesting", "System Req\n\n\n\n\nSystem Analysis\n\n\n\n\nSystem Des    the pattern module will have several function\n        setup() -\nign will make turtle draw quickly\n                    make turtle ha\n\n\n\nTesting", "System Req\n\n\n\n\nSystem Analysis\n\n\n\n\nSystem Des    the pattern module will have several function\n        setup() -\nign will make turtle draw quickly\n                    make turtle hav\n\n\n\nTesting", "System Req\n\n\n\n\nSystem Analysis\n\n\n\n\nSystem Des    the pattern module will have several function\n        setup() -\nign will make turtle draw quickly\n                    make turtle have\n\n\n\nTesting", "System Req\n\n\n\n\nSystem Analysis\n\n\n\n\nSystem Des    the pattern module will have several function\n        setup() -\nign will make turtle draw quickly\n                    make turtle have a\n\n\n\nTesting", "System Req\n\n\n\n\nSystem Analysis\n\n\n\n\nSystem Des    the pattern module will have several function\n        setup() -\nign will make turtle draw quickly\n                    make turtle have a w\n\n\n\nTesting", "System Req\n\n\n\n\nSystem Analysis\n\n\n\n\nSystem Des    the pattern module will have several function\n        setup() -\nign will make turtle draw quickly\n                    make turtle have a wi\n\n\n\nTesting", "System Req\n\n\n\n\nSystem Analysis\n\n\n\n\nSystem Des    the pattern module will have several function\n        setup() -\nign will make turtle draw quickly\n                    make turtle have a win\n\n\n\nTesting", "System Req\n\n\n\n\nSystem Analysis\n\n\n\n\nSystem Des    the pattern module will have several function\n        setup() -\nign will make turtle draw quickly\n                    make turtle have a wind\n\n\n\nTesting", "System Req\n\n\n\n\nSystem Analysis\n\n\n\n\nSystem Des    the pattern module will have several function\n        setup() -\nign will make turtle draw quickly\n                    make turtle have a windo\n\n\n\nTesting", "System Req\n\n\n\n\nSystem Analysis\n\n\n\n\nSystem Des    the pattern module will have several function\n        setup() -\nign will make turtle draw quickly\n                    make turtle have a windo w\n\n\n\nTesting", "System Req\n\n\n\n\nSystem Analysis\n\n\n\n\nSystem Des    the pattern module will have several function\n        setup() -\nign will make turtle draw quickly\n                    make turtle have a windo \n\n\n\nTesting", "System Req\n\n\n\n\nSystem Analysis\n\n\n\n\nSystem Des    the pattern module will have several function\n        setup() -\nign will make turtle draw quickly\n                    make turtle have a windo\n\n\n\nTesting", "System Req\n\n\n\n\nSystem Analysis\n\n\n\n\nSystem Des    the pattern module will have several function\n        setup() -\nign will make turtle draw quickly\n                    make turtle have a window\n\n\n\nTesting", "System Req\n\n\n\n\nSystem Analysis\n\n\n\n\nSystem Des    the pattern module will have several function\n        setup() -\nign will make turtle draw quickly\n                    make turtle have a window o\n\n\n\nTesting", "System Req\n\n\n\n\nSystem Analysis\n\n\n\n\nSystem Des    the pattern module will have several function\n        setup() -\nign will make turtle draw quickly\n                    make turtle have a window of\n\n\n\nTesting", "System Req\n\n\n\n\nSystem Analysis\n\n\n\n\nSystem Des    the pattern module will have several function\n        setup() -\nign will make turtle draw quickly\n                    make turtle have a window of 1\n\n\n\nTesting", "System Req\n\n\n\n\nSystem Analysis\n\n\n\n\nSystem Des    the pattern module will have several function\n        setup() -\nign will make turtle draw quickly\n                    make turtle have a window of 10\n\n\n\nTesting", "System Req\n\n\n\n\nSystem Analysis\n\n\n\n\nSystem Des    the pattern module will have several function\n        setup() -\nign will make turtle draw quickly\n                    make turtle have a window of 100\n\n\n\nTesting", "System Req\n\n\n\n\nSystem Analysis\n\n\n\n\nSystem Des    the pattern module will have several function\n        setup() -\nign will make turtle draw quickly\n                    make turtle have a window of 1000\n\n\n\nTesting", "System Req\n\n\n\n\nSystem Analysis\n\n\n\n\nSystem Des    the pattern module will have several function\n        setup() -\nign will make turtle draw quickly\n                    make turtle have a window of 1000 *\n\n\n\nTesting", "System Req\n\n\n\n\nSystem Analysis\n\n\n\n\nSystem Des    the pattern module will have several function\n        setup() -\nign will make turtle draw quickly\n                    make turtle have a window of 1000 * 8\n\n\n\nTesting", "System Req\n\n\n\n\nSystem Analysis\n\n\n\n\nSystem Des    the pattern module will have several function\n        setup() -\nign will make turtle draw quickly\n                    make turtle have a window of 1000 * 80\n\n\n\nTesting", "System Req\n\n\n\n\nSystem Analysis\n\n\n\n\nSystem Des    the pattern module will have several function\n        setup() -\nign will make turtle draw quickly\n                    make turtle have a window of 1000 * 800\n\n\n\nTesting", "System Req\n\n\n\n\nSystem Analysis\n\n\n\n\nSystem Des    the pattern module will have several function\n        setup() -\nign will make turtle draw quickly\n                    make turtle have a window of 1000 * 800\n                   \n\n\n\nTesting", "System Req\n\n\n\n\nSystem Analysis\n\n\n\n\nSystem Des    the pattern module will have several function\n        setup() -\nign will make turtle draw quickly\n                    make turtle have a window of 1000 * 800\n                  \n\n\n\nTesting", "System Req\n\n\n\n\nSystem Analysis\n\n\n\n\nSystem Des    the pattern module will have several function\n        setup() -\nign will make turtle draw quickly\n                    make turtle have a window of 1000 * 800\n                 \n\n\n\nTesting", "System Req\n\n\n\n\nSystem Analysis\n\n\n\n\nSystem Des    the pattern module will have several function\n        setup() -\nign will make turtle draw quickly\n                    make turtle have a window of 1000 * 800\n                \n\n\n\nTesting", "System Req\n\n\n\n\nSystem Analysis\n\n\n\n\nSystem Des    the pattern module will have several function\n        setup() -\nign will make turtle draw quickly\n                    make turtle have a window of 1000 * 800\n               \n\n\n\nTesting", "System Req\n\n\n\n\nSystem Analysis\n\n\n\n\nSystem Des    the pattern module will have several function\n        setup() -\nign will make turtle draw quickly\n                    make turtle have a window of 1000 * 800\n              \n\n\n\nTesting", "System Req\n\n\n\n\nSystem Analysis\n\n\n\n\nSystem Des    the pattern module will have several function\n        setup() -\nign will make turtle draw quickly\n                    make turtle have a window of 1000 * 800\n             \n\n\n\nTesting", "System Req\n\n\n\n\nSystem Analysis\n\n\n\n\nSystem Des    the pattern module will have several function\n        setup() -\nign will make turtle draw quickly\n                    make turtle have a window of 1000 * 800\n            \n\n\n\nTesting", "System Req\n\n\n\n\nSystem Analysis\n\n\n\n\nSystem Des    the pattern module will have several function\n        setup() -\nign will make turtle draw quickly\n                    make turtle have a window of 1000 * 800\n           \n\n\n\nTesting", "System Req\n\n\n\n\nSystem Analysis\n\n\n\n\nSystem Des    the pattern module will have several function\n        setup() -\nign will make turtle draw quickly\n                    make turtle have a window of 1000 * 800\n          \n\n\n\nTesting", "System Req\n\n\n\n\nSystem Analysis\n\n\n\n\nSystem Des    the pattern module will have several function\n        setup() -\nign will make turtle draw quickly\n                    make turtle have a window of 1000 * 800\n         \n\n\n\nTesting", "System Req\n\n\n\n\nSystem Analysis\n\n\n\n\nSystem Des    the pattern module will have several function\n        setup() -\nign will make turtle draw quickly\n                    make turtle have a window of 1000 * 800\n        \n\n\n\nTesting", "System Req\n\n\n\n\nSystem Analysis\n\n\n\n\nSystem Des    the pattern module will have several function\n        setup() -\nign will make turtle draw quickly\n                    make turtle have a window of 1000 * 800\n        r\n\n\n\nTesting", "System Req\n\n\n\n\nSystem Analysis\n\n\n\n\nSystem Des    the pattern module will have several function\n        setup() -\nign will make turtle draw quickly\n                    make turtle have a window of 1000 * 800\n        re\n\n\n\nTesting", "System Req\n\n\n\n\nSystem Analysis\n\n\n\n\nSystem Des    the pattern module will have several function\n        setup() -\nign will make turtle draw quickly\n                    make turtle have a window of 1000 * 800\n        res\n\n\n\nTesting", "System Req\n\n\n\n\nSystem Analysis\n\n\n\n\nSystem Des    the pattern module will have several function\n        setup() -\nign will make turtle draw quickly\n                    make turtle have a window of 1000 * 800\n        rese\n\n\n\nTesting", "System Req\n\n\n\n\nSystem Analysis\n\n\n\n\nSystem Des    the pattern module will have several function\n        setup() -\nign will make turtle draw quickly\n                    make turtle have a window of 1000 * 800\n        reset\n\n\n\nTesting", "System Req\n\n\n\n\nSystem Analysis\n\n\n\n\nSystem Des    the pattern module will have several function\n        setup() -\nign will make turtle draw quickly\n                    make turtle have a window of 1000 * 800\n        reset(\n\n\n\nTesting", "System Req\n\n\n\n\nSystem Analysis\n\n\n\n\nSystem Des    the pattern module will have several function\n        setup() -\nign will make turtle draw quickly\n                    make turtle have a window of 1000 * 800\n        reset(0\n\n\n\nTesting", "System Req\n\n\n\n\nSystem Analysis\n\n\n\n\nSystem Des    the pattern module will have several function\n        setup() -\nign will make turtle draw quickly\n                    make turtle have a window of 1000 * 800\n        reset(\n\n\n\nTesting", "System Req\n\n\n\n\nSystem Analysis\n\n\n\n\nSystem Des    the pattern module will have several function\n        setup() -\nign will make turtle draw quickly\n                    make turtle have a window of 1000 * 800\n        reset()\n\n\n\nTesting", "System Req\n\n\n\n\nSystem Analysis\n\n\n\n\nSystem Des    the pattern module will have several function\n        setup() -\nign will make turtle draw quickly\n                    make turtle have a window of 1000 * 800\n        reset()\n       \n\n\n\nTesting", "System Req\n\n\n\n\nSystem Analysis\n\n\n\n\nSystem Des    the pattern module will have several function\n        setup() -\nign will make turtle draw quickly\n                    make turtle have a window of 1000 * 800\n        reset()\n      \n\n\n\nTesting", "System Req\n\n\n\n\nSystem Analysis\n\n\n\n\nSystem Des    the pattern module will have several function\n        setup() -\nign will make turtle draw quickly\n                    make turtle have a window of 1000 * 800\n        reset()\n     \n\n\n\nTesting", "System Req\n\n\n\n\nSystem Analysis\n\n\n\n\nSystem Des    the pattern module will have several function\n        setup() -\nign will make turtle draw quickly\n                    make turtle have a window of 1000 * 800\n        reset()\n    \n\n\n\nTesting", "System Req\n\n\n\n\nSystem Analysis\n\n\n\n\nSystem Des    the pattern module will have several function\n        setup() -\nign will make turtle draw quickly\n                    make turtle have a window of 1000 * 800\n        reset()\n   \n\n\n\nTesting", "System Req\n\n\n\n\nSystem Analysis\n\n\n\n\nSystem Des    the pattern module will have several function\n        setup() -\nign will make turtle draw quickly\n                    make turtle have a window of 1000 * 800\n        reset()\n  \n\n\n\nTesting", "System Req\n\n\n\n\nSystem Analysis\n\n\n\n\nSystem Des    the pattern module will have several function\n        setup() -\nign will make turtle draw quickly\n                    make turtle have a window of 1000 * 800\n        reset()\n \n\n\n\nTesting", "System Req\n\n\n\n\nSystem Analysis\n\n\n\n\nSystem Des    the pattern module will have several function\n        setup() -\nign will make turtle draw quickly\n                    make turtle have a window of 1000 * 800\n        reset()\n\n\n\n\nTesting", "System Req\n\n\n\n\nSystem Analysis\n\n\n\n\nSystem Des    the pattern module will have several function\n        setup() -\nign will make turtle draw quickly\n                    make turtle have a window of 1000 * 800\n        reset()\n\n\n\nTesting", "System Req\n\n\n\n\nSystem Analysis\n\n\n\n\nSystem Des    the pattern module will have several function\n        setup() -\nign will make turtle draw quickly\n                    make turtle have a window of 1000 * 800\n        reset() -\n\n\n\nTesting", "System Req\n\n\n\n\nSystem Analysis\n\n\n\n\nSystem Des    the pattern module will have several function\n        setup() -\nign will make turtle draw quickly\n                    make turtle have a window of 1000 * 800\n        reset() - t\n\n\n\nTesting", "System Req\n\n\n\n\nSystem Analysis\n\n\n\n\nSystem Des    the pattern module will have several function\n        setup() -\nign will make turtle draw quickly\n                    make turtle have a window of 1000 * 800\n        reset() - tu\n\n\n\nTesting", "System Req\n\n\n\n\nSystem Analysis\n\n\n\n\nSystem Des    the pattern module will have several function\n        setup() -\nign will make turtle draw quickly\n                    make turtle have a window of 1000 * 800\n        reset() - tur\n\n\n\nTesting", "System Req\n\n\n\n\nSystem Analysis\n\n\n\n\nSystem Des    the pattern module will have several function\n        setup() -\nign will make turtle draw quickly\n                    make turtle have a window of 1000 * 800\n        reset() - turt\n\n\n\nTesting", "System Req\n\n\n\n\nSystem Analysis\n\n\n\n\nSystem Des    the pattern module will have several function\n        setup() -\nign will make turtle draw quickly\n                    make turtle have a window of 1000 * 800\n        reset() - turtl\n\n\n\nTesting", "System Req\n\n\n\n\nSystem Analysis\n\n\n\n\nSystem Des    the pattern module will have several function\n        setup() -\nign will make turtle draw quickly\n                    make turtle have a window of 1000 * 800\n        reset() - turtle\n\n\n\nTesting", "System Req\n\n\n\n\nSystem Analysis\n\n\n\n\nSystem Des    the pattern module will have several function\n        setup() -\nign will make turtle draw quickly\n                    make turtle have a window of 1000 * 800\n        reset() - turtle w\n\n\n\nTesting", "System Req\n\n\n\n\nSystem Analysis\n\n\n\n\nSystem Des    the pattern module will have several function\n        setup() -\nign will make turtle draw quickly\n                    make turtle have a window of 1000 * 800\n        reset() - turtle wi\n\n\n\nTesting", "System Req\n\n\n\n\nSystem Analysis\n\n\n\n\nSystem Des    the pattern module will have several function\n        setup() -\nign will make turtle draw quickly\n                    make turtle have a window of 1000 * 800\n        reset() - turtle wil\n\n\n\nTesting", "System Req\n\n\n\n\nSystem Analysis\n\n\n\n\nSystem Des    the pattern module will have several function\n        setup() -\nign will make turtle draw quickly\n                    make turtle have a window of 1000 * 800\n        reset() - turtle will\n\n\n\nTesting", "System Req\n\n\n\n\nSystem Analysis\n\n\n\n\nSystem Des    the pattern module will have several function\n        setup() -\nign will make turtle draw quickly\n                    make turtle have a window of 1000 * 800\n        reset() - turtle will e\n\n\n\nTesting", "System Req\n\n\n\n\nSystem Analysis\n\n\n\n\nSystem Des    the pattern module will have several function\n        setup() -\nign will make turtle draw quickly\n                    make turtle have a window of 1000 * 800\n        reset() - turtle will er\n\n\n\nTesting", "System Req\n\n\n\n\nSystem Analysis\n\n\n\n\nSystem Des    the pattern module will have several function\n        setup() -\nign will make turtle draw quickly\n                    make turtle have a window of 1000 * 800\n        reset() - turtle will era\n\n\n\nTesting", "System Req\n\n\n\n\nSystem Analysis\n\n\n\n\nSystem Des    the pattern module will have several function\n        setup() -\nign will make turtle draw quickly\n                    make turtle have a window of 1000 * 800\n        reset() - turtle will eras\n\n\n\nTesting", "System Req\n\n\n\n\nSystem Analysis\n\n\n\n\nSystem Des    the pattern module will have several function\n        setup() -\nign will make turtle draw quickly\n                    make turtle have a window of 1000 * 800\n        reset() - turtle will erase\n\n\n\nTesting", "System Req\n\n\n\n\nSystem Analysis\n\n\n\n\nSystem Des    the pattern module will have several function\n        setup() -\nign will make turtle draw quickly\n                    make turtle have a window of 1000 * 800\n        reset() - turtle will erase e\n\n\n\nTesting", "System Req\n\n\n\n\nSystem Analysis\n\n\n\n\nSystem Des    the pattern module will have several function\n        setup() -\nign will make turtle draw quickly\n                    make turtle have a window of 1000 * 800\n        reset() - turtle will erase ev\n\n\n\nTesting", "System Req\n\n\n\n\nSystem Analysis\n\n\n\n\nSystem Des    the pattern module will have several function\n        setup() -\nign will make turtle draw quickly\n                    make turtle have a window of 1000 * 800\n        reset() - turtle will erase eve\n\n\n\nTesting", "System Req\n\n\n\n\nSystem Analysis\n\n\n\n\nSystem Des    the pattern module will have several function\n        setup() -\nign will make turtle draw quickly\n                    make turtle have a window of 1000 * 800\n        reset() - turtle will erase ever\n\n\n\nTesting", "System Req\n\n\n\n\nSystem Analysis\n\n\n\n\nSystem Des    the pattern module will have several function\n        setup() -\nign will make turtle draw quickly\n                    make turtle have a window of 1000 * 800\n        reset() - turtle will erase every\n\n\n\nTesting", "System Req\n\n\n\n\nSystem Analysis\n\n\n\n\nSystem Des    the pattern module will have several function\n        setup() -\nign will make turtle draw quickly\n                    make turtle have a window of 1000 * 800\n        reset() - turtle will erase everyt\n\n\n\nTesting", "System Req\n\n\n\n\nSystem Analysis\n\n\n\n\nSystem Des    the pattern module will have several function\n        setup() -\nign will make turtle draw quickly\n                    make turtle have a window of 1000 * 800\n        reset() - turtle will erase everyth\n\n\n\nTesting", "System Req\n\n\n\n\nSystem Analysis\n\n\n\n\nSystem Des    the pattern module will have several function\n        setup() -\nign will make turtle draw quickly\n                    make turtle have a window of 1000 * 800\n        reset() - turtle will erase everythi\n\n\n\nTesting", "System Req\n\n\n\n\nSystem Analysis\n\n\n\n\nSystem Des    the pattern module will have several function\n        setup() -\nign will make turtle draw quickly\n                    make turtle have a window of 1000 * 800\n        reset() - turtle will erase everythin\n\n\n\nTesting", "System Req\n\n\n\n\nSystem Analysis\n\n\n\n\nSystem Des    the pattern module will have several function\n        setup() -\nign will make turtle draw quickly\n                    make turtle have a window of 1000 * 800\n        reset() - turtle will erase everything\n\n\n\nTesting", "System Req\n\n\n\n\nSystem Analysis\n\n\n\n\nSystem Des    the pattern module will have several function\n        setup() -\nign will make turtle draw quickly\n                    make turtle have a window of 1000 * 800\n        reset() - turtle will erase everything\n         \n\n\n\nTesting", "System Req\n\n\n\n\nSystem Analysis\n\n\n\n\nSystem Des    the pattern module will have several function\n        setup() -\nign will make turtle draw quickly\n                    make turtle have a window of 1000 * 800\n        reset() - turtle will erase everything\n            \n\n\n\nTesting", "System Req\n\n\n\n\nSystem Analysis\n\n\n\n\nSystem Des    the pattern module will have several function\n        setup() -\nign will make turtle draw quickly\n                    make turtle have a window of 1000 * 800\n        reset() - turtle will erase everything\n           \n\n\n\nTesting", "System Req\n\n\n\n\nSystem Analysis\n\n\n\n\nSystem Des    the pattern module will have several function\n        setup() -\nign will make turtle draw quickly\n                    make turtle have a window of 1000 * 800\n        reset() - turtle will erase everything\n          \n\n\n\nTesting", "System Req\n\n\n\n\nSystem Analysis\n\n\n\n\nSystem Des    the pattern module will have several function\n        setup() -\nign will make turtle draw quickly\n                    make turtle have a window of 1000 * 800\n        reset() - turtle will erase everything\n         \n\n\n\nTesting", "System Req\n\n\n\n\nSystem Analysis\n\n\n\n\nSystem Des    the pattern module will have several function\n        setup() -\nign will make turtle draw quickly\n                    make turtle have a window of 1000 * 800\n        reset() - turtle will erase everything\n        \n\n\n\nTesting", "System Req\n\n\n\n\nSystem Analysis\n\n\n\n\nSystem Des    the pattern module will have several function\n        setup() -\nign will make turtle draw quickly\n                    make turtle have a window of 1000 * 800\n        reset() - turtle will erase everything\n        d\n\n\n\nTesting", "System Req\n\n\n\n\nSystem Analysis\n\n\n\n\nSystem Des    the pattern module will have several function\n        setup() -\nign will make turtle draw quickly\n                    make turtle have a window of 1000 * 800\n        reset() - turtle will erase everything\n        dr\n\n\n\nTesting", "System Req\n\n\n\n\nSystem Analysis\n\n\n\n\nSystem Des    the pattern module will have several function\n        setup() -\nign will make turtle draw quickly\n                    make turtle have a window of 1000 * 800\n        reset() - turtle will erase everything\n        dre\n\n\n\nTesting", "System Req\n\n\n\n\nSystem Analysis\n\n\n\n\nSystem Des    the pattern module will have several function\n        setup() -\nign will make turtle draw quickly\n                    make turtle have a window of 1000 * 800\n        reset() - turtle will erase everything\n        drea\n\n\n\nTesting", "System Req\n\n\n\n\nSystem Analysis\n\n\n\n\nSystem Des    the pattern module will have several function\n        setup() -\nign will make turtle draw quickly\n                    make turtle have a window of 1000 * 800\n        reset() - turtle will erase everything\n        dre\n\n\n\nTesting", "System Req\n\n\n\n\nSystem Analysis\n\n\n\n\nSystem Des    the pattern module will have several function\n        setup() -\nign will make turtle draw quickly\n                    make turtle have a window of 1000 * 800\n        reset() - turtle will erase everything\n        dr\n\n\n\nTesting", "System Req\n\n\n\n\nSystem Analysis\n\n\n\n\nSystem Des    the pattern module will have several function\n        setup() -\nign will make turtle draw quickly\n                    make turtle have a window of 1000 * 800\n        reset() - turtle will erase everything\n        dra\n\n\n\nTesting", "System Req\n\n\n\n\nSystem Analysis\n\n\n\n\nSystem Des    the pattern module will have several function\n        setup() -\nign will make turtle draw quickly\n                    make turtle have a window of 1000 * 800\n        reset() - turtle will erase everything\n        draw\n\n\n\nTesting", "System Req\n\n\n\n\nSystem Analysis\n\n\n\n\nSystem Des    the pattern module will have several function\n        setup() -\nign will make turtle draw quickly\n                    make turtle have a window of 1000 * 800\n        reset() - turtle will erase everything\n        drawR\n\n\n\nTesting", "System Req\n\n\n\n\nSystem Analysis\n\n\n\n\nSystem Des    the pattern module will have several function\n        setup() -\nign will make turtle draw quickly\n                    make turtle have a window of 1000 * 800\n        reset() - turtle will erase everything\n        drawRe\n\n\n\nTesting", "System Req\n\n\n\n\nSystem Analysis\n\n\n\n\nSystem Des    the pattern module will have several function\n        setup() -\nign will make turtle draw quickly\n                    make turtle have a window of 1000 * 800\n        reset() - turtle will erase everything\n        drawRec\n\n\n\nTesting", "System Req\n\n\n\n\nSystem Analysis\n\n\n\n\nSystem Des    the pattern module will have several function\n        setup() -\nign will make turtle draw quickly\n                    make turtle have a window of 1000 * 800\n        reset() - turtle will erase everything\n        drawRect\n\n\n\nTesting", "System Req\n\n\n\n\nSystem Analysis\n\n\n\n\nSystem Des    the pattern module will have several function\n        setup() -\nign will make turtle draw quickly\n                    make turtle have a window of 1000 * 800\n        reset() - turtle will erase everything\n        drawRecta\n\n\n\nTesting", "System Req\n\n\n\n\nSystem Analysis\n\n\n\n\nSystem Des    the pattern module will have several function\n        setup() -\nign will make turtle draw quickly\n                    make turtle have a window of 1000 * 800\n        reset() - turtle will erase everything\n        drawRectan\n\n\n\nTesting", "System Req\n\n\n\n\nSystem Analysis\n\n\n\n\nSystem Des    the pattern module will have several function\n        setup() -\nign will make turtle draw quickly\n                    make turtle have a window of 1000 * 800\n        reset() - turtle will erase everything\n        drawRectang\n\n\n\nTesting", "System Req\n\n\n\n\nSystem Analysis\n\n\n\n\nSystem Des    the pattern module will have several function\n        setup() -\nign will make turtle draw quickly\n                    make turtle have a window of 1000 * 800\n        reset() - turtle will erase everything\n        drawRectan\n\n\n\nTesting", "System Req\n\n\n\n\nSystem Analysis\n\n\n\n\nSystem Des    the pattern module will have several function\n        setup() -\nign will make turtle draw quickly\n                    make turtle have a window of 1000 * 800\n        reset() - turtle will erase everything\n        drawRecta\n\n\n\nTesting", "System Req\n\n\n\n\nSystem Analysis\n\n\n\n\nSystem Des    the pattern module will have several function\n        setup() -\nign will make turtle draw quickly\n                    make turtle have a window of 1000 * 800\n        reset() - turtle will erase everything\n        drawRect\n\n\n\nTesting", "System Req\n\n\n\n\nSystem Analysis\n\n\n\n\nSystem Des    the pattern module will have several function\n        setup() -\nign will make turtle draw quickly\n                    make turtle have a window of 1000 * 800\n        reset() - turtle will erase everything\n        drawRecte\n\n\n\nTesting", "System Req\n\n\n\n\nSystem Analysis\n\n\n\n\nSystem Des    the pattern module will have several function\n        setup() -\nign will make turtle draw quickly\n                    make turtle have a window of 1000 * 800\n        reset() - turtle will erase everything\n        drawRecten\n\n\n\nTesting", "System Req\n\n\n\n\nSystem Analysis\n\n\n\n\nSystem Des    the pattern module will have several function\n        setup() -\nign will make turtle draw quickly\n                    make turtle have a window of 1000 * 800\n        reset() - turtle will erase everything\n        drawRecteng\n\n\n\nTesting", "System Req\n\n\n\n\nSystem Analysis\n\n\n\n\nSystem Des    the pattern module will have several function\n        setup() -\nign will make turtle draw quickly\n                    make turtle have a window of 1000 * 800\n        reset() - turtle will erase everything\n        drawRectengl\n\n\n\nTesting", "System Req\n\n\n\n\nSystem Analysis\n\n\n\n\nSystem Des    the pattern module will have several function\n        setup() -\nign will make turtle draw quickly\n                    make turtle have a window of 1000 * 800\n        reset() - turtle will erase everything\n        drawRectengle\n\n\n\nTesting", "System Req\n\n\n\n\nSystem Analysis\n\n\n\n\nSystem Des    the pattern module will have several function\n        setup() -\nign will make turtle draw quickly\n                    make turtle have a window of 1000 * 800\n        reset() - turtle will erase everything\n        drawRectengleP\n\n\n\nTesting", "System Req\n\n\n\n\nSystem Analysis\n\n\n\n\nSystem Des    the pattern module will have several function\n        setup() -\nign will make turtle draw quickly\n                    make turtle have a window of 1000 * 800\n        reset() - turtle will erase everything\n        drawRectenglePa\n\n\n\nTesting", "System Req\n\n\n\n\nSystem Analysis\n\n\n\n\nSystem Des    the pattern module will have several function\n        setup() -\nign will make turtle draw quickly\n                    make turtle have a window of 1000 * 800\n        reset() - turtle will erase everything\n        drawRectenglePat\n\n\n\nTesting", "System Req\n\n\n\n\nSystem Analysis\n\n\n\n\nSystem Des    the pattern module will have several function\n        setup() -\nign will make turtle draw quickly\n                    make turtle have a window of 1000 * 800\n        reset() - turtle will erase everything\n        drawRectenglePatt\n\n\n\nTesting", "System Req\n\n\n\n\nSystem Analysis\n\n\n\n\nSystem Des    the pattern module will have several function\n        setup() -\nign will make turtle draw quickly\n                    make turtle have a window of 1000 * 800\n        reset() - turtle will erase everything\n        drawRectenglePatte\n\n\n\nTesting", "System Req\n\n\n\n\nSystem Analysis\n\n\n\n\nSystem Des    the pattern module will have several function\n        setup() -\nign will make turtle draw quickly\n                    make turtle have a window of 1000 * 800\n        reset() - turtle will erase everything\n        drawRectenglePatter\n\n\n\nTesting", "System Req\n\n\n\n\nSystem Analysis\n\n\n\n\nSystem Des    the pattern module will have several function\n        setup() -\nign will make turtle draw quickly\n                    make turtle have a window of 1000 * 800\n        reset() - turtle will erase everything\n        drawRectenglePattern\n\n\n\nTesting", "System Req\n\n\n\n\nSystem Analysis\n\n\n\n\nSystem Des    the pattern module will have several function\n        setup() -\nign will make turtle draw quickly\n                    make turtle have a window of 1000 * 800\n        reset() - turtle will erase everything\n        drawRectenglePattern(\n\n\n\nTesting", "System Req\n\n\n\n\nSystem Analysis\n\n\n\n\nSystem Des    the pattern module will have several function\n        setup() -\nign will make turtle draw quickly\n                    make turtle have a window of 1000 * 800\n        reset() - turtle will erase everything\n        drawRectenglePattern()\n\n\n\nTesting", "System Req\n\n\n\n\nSystem Analysis\n\n\n\n\nSystem Des    the pattern module will have several function\n        setup() -\nign will make turtle draw quickly\n                    make turtle have a window of 1000 * 800\n        reset() - turtle will erase everything\n        drawRectenglePattern() -\n\n\n\nTesting", "System Req\n\n\n\n\nSystem Analysis\n\n\n\n\nSystem Des    the pattern module will have several function\n        setup() -\nign will make turtle draw quickly\n                    make turtle have a window of 1000 * 800\n        reset() - turtle will erase everything\n        drawRectenglePattern() - w\n\n\n\nTesting", "System Req\n\n\n\n\nSystem Analysis\n\n\n\n\nSystem Des    the pattern module will have several function\n        setup() -\nign will make turtle draw quickly\n                    make turtle have a window of 1000 * 800\n        reset() - turtle will erase everything\n        drawRectenglePattern() - wi\n\n\n\nTesting", "System Req\n\n\n\n\nSystem Analysis\n\n\n\n\nSystem Des    the pattern module will have several function\n        setup() -\nign will make turtle draw quickly\n                    make turtle have a window of 1000 * 800\n        reset() - turtle will erase everything\n        drawRectenglePattern() - wil\n\n\n\nTesting", "System Req\n\n\n\n\nSystem Analysis\n\n\n\n\nSystem Des    the pattern module will have several function\n        setup() -\nign will make turtle draw quickly\n                    make turtle have a window of 1000 * 800\n        reset() - turtle will erase everything\n        drawRectenglePattern() - will\n\n\n\nTesting", "System Req\n\n\n\n\nSystem Analysis\n\n\n\n\nSystem Des    the pattern module will have several function\n        setup() -\nign will make turtle draw quickly\n                    make turtle have a window of 1000 * 800\n        reset() - turtle will erase everything\n        drawRectenglePattern() - will c\n\n\n\nTesting", "System Req\n\n\n\n\nSystem Analysis\n\n\n\n\nSystem Des    the pattern module will have several function\n        setup() -\nign will make turtle draw quickly\n                    make turtle have a window of 1000 * 800\n        reset() - turtle will erase everything\n        drawRectenglePattern() - will ca\n\n\n\nTesting", "System Req\n\n\n\n\nSystem Analysis\n\n\n\n\nSystem Des    the pattern module will have several function\n        setup() -\nign will make turtle draw quickly\n                    make turtle have a window of 1000 * 800\n        reset() - turtle will erase everything\n        drawRectenglePattern() - will cal\n\n\n\nTesting", "System Req\n\n\n\n\nSystem Analysis\n\n\n\n\nSystem Des    the pattern module will have several function\n        setup() -\nign will make turtle draw quickly\n                    make turtle have a window of 1000 * 800\n        reset() - turtle will erase everything\n        drawRectenglePattern() - will call\n\n\n\nTesting", "System Req\n\n\n\n\nSystem Analysis\n\n\n\n\nSystem Des    the pattern module will have several function\n        setup() -\nign will make turtle draw quickly\n                    make turtle have a window of 1000 * 800\n        reset() - turtle will erase everything\n        drawRectenglePattern() - will call d\n\n\n\nTesting", "System Req\n\n\n\n\nSystem Analysis\n\n\n\n\nSystem Des    the pattern module will have several function\n        setup() -\nign will make turtle draw quickly\n                    make turtle have a window of 1000 * 800\n        reset() - turtle will erase everything\n        drawRectenglePattern() - will call dr\n\n\n\nTesting", "System Req\n\n\n\n\nSystem Analysis\n\n\n\n\nSystem Des    the pattern module will have several function\n        setup() -\nign will make turtle draw quickly\n                    make turtle have a window of 1000 * 800\n        reset() - turtle will erase everything\n        drawRectenglePattern() - will call dra\n\n\n\nTesting", "System Req\n\n\n\n\nSystem Analysis\n\n\n\n\nSystem Des    the pattern module will have several function\n        setup() -\nign will make turtle draw quickly\n                    make turtle have a window of 1000 * 800\n        reset() - turtle will erase everything\n        drawRectenglePattern() - will call draw\n\n\n\nTesting", "System Req\n\n\n\n\nSystem Analysis\n\n\n\n\nSystem Des    the pattern module will have several function\n        setup() -\nign will make turtle draw quickly\n                    make turtle have a window of 1000 * 800\n        reset() - turtle will erase everything\n        drawRectenglePattern() - will call draw r\n\n\n\nTesting", "System Req\n\n\n\n\nSystem Analysis\n\n\n\n\nSystem Des    the pattern module will have several function\n        setup() -\nign will make turtle draw quickly\n                    make turtle have a window of 1000 * 800\n        reset() - turtle will erase everything\n        drawRectenglePattern() - will call draw re\n\n\n\nTesting", "System Req\n\n\n\n\nSystem Analysis\n\n\n\n\nSystem Des    the pattern module will have several function\n        setup() -\nign will make turtle draw quickly\n                    make turtle have a window of 1000 * 800\n        reset() - turtle will erase everything\n        drawRectenglePattern() - will call draw rec\n\n\n\nTesting", "System Req\n\n\n\n\nSystem Analysis\n\n\n\n\nSystem Des    the pattern module will have several function\n        setup() -\nign will make turtle draw quickly\n                    make turtle have a window of 1000 * 800\n        reset() - turtle will erase everything\n        drawRectenglePattern() - will call draw rect\n\n\n\nTesting", "System Req\n\n\n\n\nSystem Analysis\n\n\n\n\nSystem Des    the pattern module will have several function\n        setup() -\nign will make turtle draw quickly\n                    make turtle have a window of 1000 * 800\n        reset() - turtle will erase everything\n        drawRectenglePattern() - will call draw recta\n\n\n\nTesting", "System Req\n\n\n\n\nSystem Analysis\n\n\n\n\nSystem Des    the pattern module will have several function\n        setup() -\nign will make turtle draw quickly\n                    make turtle have a window of 1000 * 800\n        reset() - turtle will erase everything\n        drawRectenglePattern() - will call draw rectan\n\n\n\nTesting", "System Req\n\n\n\n\nSystem Analysis\n\n\n\n\nSystem Des    the pattern module will have several function\n        setup() -\nign will make turtle draw quickly\n                    make turtle have a window of 1000 * 800\n        reset() - turtle will erase everything\n        drawRectenglePattern() - will call draw rectang\n\n\n\nTesting", "System Req\n\n\n\n\nSystem Analysis\n\n\n\n\nSystem Des    the pattern module will have several function\n        setup() -\nign will make turtle draw quickly\n                    make turtle have a window of 1000 * 800\n        reset() - turtle will erase everything\n        drawRectenglePattern() - will call draw rectangl\n\n\n\nTesting", "System Req\n\n\n\n\nSystem Analysis\n\n\n\n\nSystem Des    the pattern module will have several function\n        setup() -\nign will make turtle draw quickly\n                    make turtle have a window of 1000 * 800\n        reset() - turtle will erase everything\n        drawRectenglePattern() - will call draw rectangle\n\n\n\nTesting", "System Req\n\n\n\n\nSystem Analysis\n\n\n\n\nSystem Des    the pattern module will have several function\n        setup() -\nign will make turtle draw quickly\n                    make turtle have a window of 1000 * 800\n        reset() - turtle will erase everything\n        drawRectenglePattern() - will call draw rectangle\n        D\n\n\n\nTesting", "System Req\n\n\n\n\nSystem Analysis\n\n\n\n\nSystem Des    the pattern module will have several function\n        setup() -\nign will make turtle draw quickly\n                    make turtle have a window of 1000 * 800\n        reset() - turtle will erase everything\n        drawRectenglePattern() - will call draw rectangle\n        \n\n\n\nTesting", "System Req\n\n\n\n\nSystem Analysis\n\n\n\n\nSystem Des    the pattern module will have several function\n        setup() -\nign will make turtle draw quickly\n                    make turtle have a window of 1000 * 800\n        reset() - turtle will erase everything\n        drawRectenglePattern() - will call draw rectangle\n        d\n\n\n\nTesting", "System Req\n\n\n\n\nSystem Analysis\n\n\n\n\nSystem Des    the pattern module will have several function\n        setup() -\nign will make turtle draw quickly\n                    make turtle have a window of 1000 * 800\n        reset() - turtle will erase everything\n        drawRectenglePattern() - will call draw rectangle\n        dr\n\n\n\nTesting", "System Req\n\n\n\n\nSystem Analysis\n\n\n\n\nSystem Des    the pattern module will have several function\n        setup() -\nign will make turtle draw quickly\n                    make turtle have a window of 1000 * 800\n        reset() - turtle will erase everything\n        drawRectenglePattern() - will call draw rectangle\n        dra\n\n\n\nTesting", "System Req\n\n\n\n\nSystem Analysis\n\n\n\n\nSystem Des    the pattern module will have several function\n        setup() -\nign will make turtle draw quickly\n                    make turtle have a window of 1000 * 800\n        reset() - turtle will erase everything\n        drawRectenglePattern() - will call draw rectangle\n        draw\n\n\n\nTesting", "System Req\n\n\n\n\nSystem Analysis\n\n\n\n\nSystem Des    the pattern module will have several function\n        setup() -\nign will make turtle draw quickly\n                    make turtle have a window of 1000 * 800\n        reset() - turtle will erase everything\n        drawRectenglePattern() - will call draw rectangle\n        drawR\n\n\n\nTesting", "System Req\n\n\n\n\nSystem Analysis\n\n\n\n\nSystem Des    the pattern module will have several function\n        setup() -\nign will make turtle draw quickly\n                    make turtle have a window of 1000 * 800\n        reset() - turtle will erase everything\n        drawRectenglePattern() - will call draw rectangle\n        drawRe\n\n\n\nTesting", "System Req\n\n\n\n\nSystem Analysis\n\n\n\n\nSystem Des    the pattern module will have several function\n        setup() -\nign will make turtle draw quickly\n                    make turtle have a window of 1000 * 800\n        reset() - turtle will erase everything\n        drawRectenglePattern() - will call draw rectangle\n        drawRec\n\n\n\nTesting", "System Req\n\n\n\n\nSystem Analysis\n\n\n\n\nSystem Des    the pattern module will have several function\n        setup() -\nign will make turtle draw quickly\n                    make turtle have a window of 1000 * 800\n        reset() - turtle will erase everything\n        drawRectenglePattern() - will call draw rectangle\n        drawRect\n\n\n\nTesting", "System Req\n\n\n\n\nSystem Analysis\n\n\n\n\nSystem Des    the pattern module will have several function\n        setup() -\nign will make turtle draw quickly\n                    make turtle have a window of 1000 * 800\n        reset() - turtle will erase everything\n        drawRectenglePattern() - will call draw rectangle\n        drawRecta\n\n\n\nTesting", "System Req\n\n\n\n\nSystem Analysis\n\n\n\n\nSystem Des    the pattern module will have several function\n        setup() -\nign will make turtle draw quickly\n                    make turtle have a window of 1000 * 800\n        reset() - turtle will erase everything\n        drawRectenglePattern() - will call draw rectangle\n        drawRectan\n\n\n\nTesting", "System Req\n\n\n\n\nSystem Analysis\n\n\n\n\nSystem Des    the pattern module will have several function\n        setup() -\nign will make turtle draw quickly\n                    make turtle have a window of 1000 * 800\n        reset() - turtle will erase everything\n        drawRectenglePattern() - will call draw rectangle\n        drawRectang\n\n\n\nTesting", "System Req\n\n\n\n\nSystem Analysis\n\n\n\n\nSystem Des    the pattern module will have several function\n        setup() -\nign will make turtle draw quickly\n                    make turtle have a window of 1000 * 800\n        reset() - turtle will erase everything\n        drawRectenglePattern() - will call draw rectangle\n        drawRectangl\n\n\n\nTesting", "System Req\n\n\n\n\nSystem Analysis\n\n\n\n\nSystem Des    the pattern module will have several function\n        setup() -\nign will make turtle draw quickly\n                    make turtle have a window of 1000 * 800\n        reset() - turtle will erase everything\n        drawRectenglePattern() - will call draw rectangle\n        drawRectangle\n\n\n\nTesting", "System Req\n\n\n\n\nSystem Analysis\n\n\n\n\nSystem Des    the pattern module will have several function\n        setup() -\nign will make turtle draw quickly\n                    make turtle have a window of 1000 * 800\n        reset() - turtle will erase everything\n        drawRectenglePattern() - will call draw rectangle\n        drawRectangle(\n\n\n\nTesting", "System Req\n\n\n\n\nSystem Analysis\n\n\n\n\nSystem Des    the pattern module will have several function\n        setup() -\nign will make turtle draw quickly\n                    make turtle have a window of 1000 * 800\n        reset() - turtle will erase everything\n        drawRectenglePattern() - will call draw rectangle\n        drawRectangle()\n\n\n\nTesting", "System Req\n\n\n\n\nSystem Analysis\n\n\n\n\nSystem Des    the pattern module will have several function\n        setup() -\nign will make turtle draw quickly\n                    make turtle have a window of 1000 * 800\n        reset() - turtle will erase everything\n        drawRectenglePattern() - will call draw rectangle\n        drawRectangle() -\n\n\n\nTesting", "System Req\n\n\n\n\nSystem Analysis\n\n\n\n\nSystem Des    the pattern module will have several function\n        setup() -\nign will make turtle draw quickly\n                    make turtle have a window of 1000 * 800\n        reset() - turtle will erase everything\n        drawRectenglePattern() - will call draw rectangle\n        drawRectangle() - d\n\n\n\nTesting", "System Req\n\n\n\n\nSystem Analysis\n\n\n\n\nSystem Des    the pattern module will have several function\n        setup() -\nign will make turtle draw quickly\n                    make turtle have a window of 1000 * 800\n        reset() - turtle will erase everything\n        drawRectenglePattern() - will call draw rectangle\n        drawRectangle() - dr\n\n\n\nTesting", "System Req\n\n\n\n\nSystem Analysis\n\n\n\n\nSystem Des    the pattern module will have several function\n        setup() -\nign will make turtle draw quickly\n                    make turtle have a window of 1000 * 800\n        reset() - turtle will erase everything\n        drawRectenglePattern() - will call draw rectangle\n        drawRectangle() - dre\n\n\n\nTesting", "System Req\n\n\n\n\nSystem Analysis\n\n\n\n\nSystem Des    the pattern module will have several function\n        setup() -\nign will make turtle draw quickly\n                    make turtle have a window of 1000 * 800\n        reset() - turtle will erase everything\n        drawRectenglePattern() - will call draw rectangle\n        drawRectangle() - dr\n\n\n\nTesting", "System Req\n\n\n\n\nSystem Analysis\n\n\n\n\nSystem Des    the pattern module will have several function\n        setup() -\nign will make turtle draw quickly\n                    make turtle have a window of 1000 * 800\n        reset() - turtle will erase everything\n        drawRectenglePattern() - will call draw rectangle\n        drawRectangle() - dra\n\n\n\nTesting", "System Req\n\n\n\n\nSystem Analysis\n\n\n\n\nSystem Des    the pattern module will have several function\n        setup() -\nign will make turtle draw quickly\n                    make turtle have a window of 1000 * 800\n        reset() - turtle will erase everything\n        drawRectenglePattern() - will call draw rectangle\n        drawRectangle() - draw\n\n\n\nTesting", "System Req\n\n\n\n\nSystem Analysis\n\n\n\n\nSystem Des    the pattern module will have several function\n        setup() -\nign will make turtle draw quickly\n                    make turtle have a window of 1000 * 800\n        reset() - turtle will erase everything\n        drawRectenglePattern() - will call draw rectangle\n        drawRectangle() - draw a\n\n\n\nTesting", "System Req\n\n\n\n\nSystem Analysis\n\n\n\n\nSystem Des    the pattern module will have several function\n        setup() -\nign will make turtle draw quickly\n                    make turtle have a window of 1000 * 800\n        reset() - turtle will erase everything\n        drawRectenglePattern() - will call draw rectangle\n        drawRectangle() - draw a s\n\n\n\nTesting", "System Req\n\n\n\n\nSystem Analysis\n\n\n\n\nSystem Des    the pattern module will have several function\n        setup() -\nign will make turtle draw quickly\n                    make turtle have a window of 1000 * 800\n        reset() - turtle will erase everything\n        drawRectenglePattern() - will call draw rectangle\n        drawRectangle() - draw a si\n\n\n\nTesting", "System Req\n\n\n\n\nSystem Analysis\n\n\n\n\nSystem Des    the pattern module will have several function\n        setup() -\nign will make turtle draw quickly\n                    make turtle have a window of 1000 * 800\n        reset() - turtle will erase everything\n        drawRectenglePattern() - will call draw rectangle\n        drawRectangle() - draw a sin\n\n\n\nTesting", "System Req\n\n\n\n\nSystem Analysis\n\n\n\n\nSystem Des    the pattern module will have several function\n        setup() -\nign will make turtle draw quickly\n                    make turtle have a window of 1000 * 800\n        reset() - turtle will erase everything\n        drawRectenglePattern() - will call draw rectangle\n        drawRectangle() - draw a sing\n\n\n\nTesting", "System Req\n\n\n\n\nSystem Analysis\n\n\n\n\nSystem Des    the pattern module will have several function\n        setup() -\nign will make turtle draw quickly\n                    make turtle have a window of 1000 * 800\n        reset() - turtle will erase everything\n        drawRectenglePattern() - will call draw rectangle\n        drawRectangle() - draw a singl\n\n\n\nTesting", "System Req\n\n\n\n\nSystem Analysis\n\n\n\n\nSystem Des    the pattern module will have several function\n        setup() -\nign will make turtle draw quickly\n                    make turtle have a window of 1000 * 800\n        reset() - turtle will erase everything\n        drawRectenglePattern() - will call draw rectangle\n        drawRectangle() - draw a single\n\n\n\nTesting", "System Req\n\n\n\n\nSystem Analysis\n\n\n\n\nSystem Des    the pattern module will have several function\n        setup() -\nign will make turtle draw quickly\n                    make turtle have a window of 1000 * 800\n        reset() - turtle will erase everything\n        drawRectenglePattern() - will call draw rectangle\n        drawRectangle() - draw a single r\n\n\n\nTesting", "System Req\n\n\n\n\nSystem Analysis\n\n\n\n\nSystem Des    the pattern module will have several function\n        setup() -\nign will make turtle draw quickly\n                    make turtle have a window of 1000 * 800\n        reset() - turtle will erase everything\n        drawRectenglePattern() - will call draw rectangle\n        drawRectangle() - draw a single re\n\n\n\nTesting", "System Req\n\n\n\n\nSystem Analysis\n\n\n\n\nSystem Des    the pattern module will have several function\n        setup() -\nign will make turtle draw quickly\n                    make turtle have a window of 1000 * 800\n        reset() - turtle will erase everything\n        drawRectenglePattern() - will call draw rectangle\n        drawRectangle() - draw a single rec\n\n\n\nTesting", "System Req\n\n\n\n\nSystem Analysis\n\n\n\n\nSystem Des    the pattern module will have several function\n        setup() -\nign will make turtle draw quickly\n                    make turtle have a window of 1000 * 800\n        reset() - turtle will erase everything\n        drawRectenglePattern() - will call draw rectangle\n        drawRectangle() - draw a single rect\n\n\n\nTesting", "System Req\n\n\n\n\nSystem Analysis\n\n\n\n\nSystem Des    the pattern module will have several function\n        setup() -\nign will make turtle draw quickly\n                    make turtle have a window of 1000 * 800\n        reset() - turtle will erase everything\n        drawRectenglePattern() - will call draw rectangle\n        drawRectangle() - draw a single recta\n\n\n\nTesting", "System Req\n\n\n\n\nSystem Analysis\n\n\n\n\nSystem Des    the pattern module will have several function\n        setup() -\nign will make turtle draw quickly\n                    make turtle have a window of 1000 * 800\n        reset() - turtle will erase everything\n        drawRectenglePattern() - will call draw rectangle\n        drawRectangle() - draw a single rectan\n\n\n\nTesting", "System Req\n\n\n\n\nSystem Analysis\n\n\n\n\nSystem Des    the pattern module will have several function\n        setup() -\nign will make turtle draw quickly\n                    make turtle have a window of 1000 * 800\n        reset() - turtle will erase everything\n        drawRectenglePattern() - will call draw rectangle\n        drawRectangle() - draw a single rectang\n\n\n\nTesting", "System Req\n\n\n\n\nSystem Analysis\n\n\n\n\nSystem Des    the pattern module will have several function\n        setup() -\nign will make turtle draw quickly\n                    make turtle have a window of 1000 * 800\n        reset() - turtle will erase everything\n        drawRectenglePattern() - will call draw rectangle\n        drawRectangle() - draw a single rectange\n\n\n\nTesting", "System Req\n\n\n\n\nSystem Analysis\n\n\n\n\nSystem Des    the pattern module will have several function\n        setup() -\nign will make turtle draw quickly\n                    make turtle have a window of 1000 * 800\n        reset() - turtle will erase everything\n        drawRectenglePattern() - will call draw rectangle\n        drawRectangle() - draw a single rectangel\n\n\n\nTesting", "System Req\n\n\n\n\nSystem Analysis\n\n\n\n\nSystem Des    the pattern module will have several function\n        setup() -\nign will make turtle draw quickly\n                    make turtle have a window of 1000 * 800\n        reset() - turtle will erase everything\n        drawRectenglePattern() - will call draw rectangle\n        drawRectangle() - draw a single rectange\n\n\n\nTesting", "System Req\n\n\n\n\nSystem Analysis\n\n\n\n\nSystem Des    the pattern module will have several function\n        setup() -\nign will make turtle draw quickly\n                    make turtle have a window of 1000 * 800\n        reset() - turtle will erase everything\n        drawRectenglePattern() - will call draw rectangle\n        drawRectangle() - draw a single rectang\n\n\n\nTesting", "System Req\n\n\n\n\nSystem Analysis\n\n\n\n\nSystem Des    the pattern module will have several function\n        setup() -\nign will make turtle draw quickly\n                    make turtle have a window of 1000 * 800\n        reset() - turtle will erase everything\n        drawRectenglePattern() - will call draw rectangle\n        drawRectangle() - draw a single rectangl\n\n\n\nTesting", "System Req\n\n\n\n\nSystem Analysis\n\n\n\n\nSystem Des    the pattern module will have several function\n        setup() -\nign will make turtle draw quickly\n                    make turtle have a window of 1000 * 800\n        reset() - turtle will erase everything\n        drawRectenglePattern() - will call draw rectangle\n        drawRectangle() - draw a single rectangle\n\n\n\nTesting", "System Req\n\n\n\n\nSystem Analysis\n\n\n\n\nSystem Des    the pattern module will have several function\n        setup() -\nign will make turtle draw quickly\n                    make turtle have a window of 1000 * 800\n        reset() - turtle will erase everything\n        drawRectenglePattern() - will call draw rectangle\n        drawRectangle() - draw a single rectangle\n        d\n\n\n\nTesting", "System Req\n\n\n\n\nSystem Analysis\n\n\n\n\nSystem Des    the pattern module will have several function\n        setup() -\nign will make turtle draw quickly\n                    make turtle have a window of 1000 * 800\n        reset() - turtle will erase everything\n        drawRectenglePattern() - will call draw rectangle\n        drawRectangle() - draw a single rectangle\n        dr\n\n\n\nTesting", "System Req\n\n\n\n\nSystem Analysis\n\n\n\n\nSystem Des    the pattern module will have several function\n        setup() -\nign will make turtle draw quickly\n                    make turtle have a window of 1000 * 800\n        reset() - turtle will erase everything\n        drawRectenglePattern() - will call draw rectangle\n        drawRectangle() - draw a single rectangle\n        dre\n\n\n\nTesting", "System Req\n\n\n\n\nSystem Analysis\n\n\n\n\nSystem Des    the pattern module will have several function\n        setup() -\nign will make turtle draw quickly\n                    make turtle have a window of 1000 * 800\n        reset() - turtle will erase everything\n        drawRectenglePattern() - will call draw rectangle\n        drawRectangle() - draw a single rectangle\n        dr\n\n\n\nTesting", "System Req\n\n\n\n\nSystem Analysis\n\n\n\n\nSystem Des    the pattern module will have several function\n        setup() -\nign will make turtle draw quickly\n                    make turtle have a window of 1000 * 800\n        reset() - turtle will erase everything\n        drawRectenglePattern() - will call draw rectangle\n        drawRectangle() - draw a single rectangle\n        d\n\n\n\nTesting", "System Req\n\n\n\n\nSystem Analysis\n\n\n\n\nSystem Des    the pattern module will have several function\n        setup() -\nign will make turtle draw quickly\n                    make turtle have a window of 1000 * 800\n        reset() - turtle will erase everything\n        drawRectenglePattern() - will call draw rectangle\n        drawRectangle() - draw a single rectangle\n        dr\n\n\n\nTesting", "System Req\n\n\n\n\nSystem Analysis\n\n\n\n\nSystem Des    the pattern module will have several function\n        setup() -\nign will make turtle draw quickly\n                    make turtle have a window of 1000 * 800\n        reset() - turtle will erase everything\n        drawRectenglePattern() - will call draw rectangle\n        drawRectangle() - draw a single rectangle\n        dra\n\n\n\nTesting", "System Req\n\n\n\n\nSystem Analysis\n\n\n\n\nSystem Des    the pattern module will have several function\n        setup() -\nign will make turtle draw quickly\n                    make turtle have a window of 1000 * 800\n        reset() - turtle will erase everything\n        drawRectenglePattern() - will call draw rectangle\n        drawRectangle() - draw a single rectangle\n        draw\n\n\n\nTesting", "System Req\n\n\n\n\nSystem Analysis\n\n\n\n\nSystem Des    the pattern module will have several function\n        setup() -\nign will make turtle draw quickly\n                    make turtle have a window of 1000 * 800\n        reset() - turtle will erase everything\n        drawRectenglePattern() - will call draw rectangle\n        drawRectangle() - draw a single rectangle\n        drawC\n\n\n\nTesting", "System Req\n\n\n\n\nSystem Analysis\n\n\n\n\nSystem Des    the pattern module will have several function\n        setup() -\nign will make turtle draw quickly\n                    make turtle have a window of 1000 * 800\n        reset() - turtle will erase everything\n        drawRectenglePattern() - will call draw rectangle\n        drawRectangle() - draw a single rectangle\n        drawCi\n\n\n\nTesting", "System Req\n\n\n\n\nSystem Analysis\n\n\n\n\nSystem Des    the pattern module will have several function\n        setup() -\nign will make turtle draw quickly\n                    make turtle have a window of 1000 * 800\n        reset() - turtle will erase everything\n        drawRectenglePattern() - will call draw rectangle\n        drawRectangle() - draw a single rectangle\n        drawCir\n\n\n\nTesting", "System Req\n\n\n\n\nSystem Analysis\n\n\n\n\nSystem Des    the pattern module will have several function\n        setup() -\nign will make turtle draw quickly\n                    make turtle have a window of 1000 * 800\n        reset() - turtle will erase everything\n        drawRectenglePattern() - will call draw rectangle\n        drawRectangle() - draw a single rectangle\n        drawCirc\n\n\n\nTesting", "System Req\n\n\n\n\nSystem Analysis\n\n\n\n\nSystem Des    the pattern module will have several function\n        setup() -\nign will make turtle draw quickly\n                    make turtle have a window of 1000 * 800\n        reset() - turtle will erase everything\n        drawRectenglePattern() - will call draw rectangle\n        drawRectangle() - draw a single rectangle\n        drawCircl\n\n\n\nTesting", "System Req\n\n\n\n\nSystem Analysis\n\n\n\n\nSystem Des    the pattern module will have several function\n        setup() -\nign will make turtle draw quickly\n                    make turtle have a window of 1000 * 800\n        reset() - turtle will erase everything\n        drawRectenglePattern() - will call draw rectangle\n        drawRectangle() - draw a single rectangle\n        drawCircle\n\n\n\nTesting", "System Req\n\n\n\n\nSystem Analysis\n\n\n\n\nSystem Des    the pattern module will have several function\n        setup() -\nign will make turtle draw quickly\n                    make turtle have a window of 1000 * 800\n        reset() - turtle will erase everything\n        drawRectenglePattern() - will call draw rectangle\n        drawRectangle() - draw a single rectangle\n        drawCircleP\n\n\n\nTesting", "System Req\n\n\n\n\nSystem Analysis\n\n\n\n\nSystem Des    the pattern module will have several function\n        setup() -\nign will make turtle draw quickly\n                    make turtle have a window of 1000 * 800\n        reset() - turtle will erase everything\n        drawRectenglePattern() - will call draw rectangle\n        drawRectangle() - draw a single rectangle\n        drawCirclePa\n\n\n\nTesting", "System Req\n\n\n\n\nSystem Analysis\n\n\n\n\nSystem Des    the pattern module will have several function\n        setup() -\nign will make turtle draw quickly\n                    make turtle have a window of 1000 * 800\n        reset() - turtle will erase everything\n        drawRectenglePattern() - will call draw rectangle\n        drawRectangle() - draw a single rectangle\n        drawCirclePat\n\n\n\nTesting", "System Req\n\n\n\n\nSystem Analysis\n\n\n\n\nSystem Des    the pattern module will have several function\n        setup() -\nign will make turtle draw quickly\n                    make turtle have a window of 1000 * 800\n        reset() - turtle will erase everything\n        drawRectenglePattern() - will call draw rectangle\n        drawRectangle() - draw a single rectangle\n        drawCirclePatt\n\n\n\nTesting", "System Req\n\n\n\n\nSystem Analysis\n\n\n\n\nSystem Des    the pattern module will have several function\n        setup() -\nign will make turtle draw quickly\n                    make turtle have a window of 1000 * 800\n        reset() - turtle will erase everything\n        drawRectenglePattern() - will call draw rectangle\n        drawRectangle() - draw a single rectangle\n        drawCirclePatte\n\n\n\nTesting", "System Req\n\n\n\n\nSystem Analysis\n\n\n\n\nSystem Des    the pattern module will have several function\n        setup() -\nign will make turtle draw quickly\n                    make turtle have a window of 1000 * 800\n        reset() - turtle will erase everything\n        drawRectenglePattern() - will call draw rectangle\n        drawRectangle() - draw a single rectangle\n        drawCirclePatten\n\n\n\nTesting", "System Req\n\n\n\n\nSystem Analysis\n\n\n\n\nSystem Des    the pattern module will have several function\n        setup() -\nign will make turtle draw quickly\n                    make turtle have a window of 1000 * 800\n        reset() - turtle will erase everything\n        drawRectenglePattern() - will call draw rectangle\n        drawRectangle() - draw a single rectangle\n        drawCirclePatten(\n\n\n\nTesting", "System Req\n\n\n\n\nSystem Analysis\n\n\n\n\nSystem Des    the pattern module will have several function\n        setup() -\nign will make turtle draw quickly\n                    make turtle have a window of 1000 * 800\n        reset() - turtle will erase everything\n        drawRectenglePattern() - will call draw rectangle\n        drawRectangle() - draw a single rectangle\n        drawCirclePatten()\n\n\n\nTesting", "System Req\n\n\n\n\nSystem Analysis\n\n\n\n\nSystem Des    the pattern module will have several function\n        setup() -\nign will make turtle draw quickly\n                    make turtle have a window of 1000 * 800\n        reset() - turtle will erase everything\n        drawRectenglePattern() - will call draw rectangle\n        drawRectangle() - draw a single rectangle\n        drawCirclePatten() -\n\n\n\nTesting", "System Req\n\n\n\n\nSystem Analysis\n\n\n\n\nSystem Des    the pattern module will have several function\n        setup() -\nign will make turtle draw quickly\n                    make turtle have a window of 1000 * 800\n        reset() - turtle will erase everything\n        drawRectenglePattern() - will call draw rectangle\n        drawRectangle() - draw a single rectangle\n        drawCirclePatten() -\n        drawSuperPattern() - \n\n\n\nTesting", "System Req\n\n\n\n\nSystem Analysis\n\n\n\n\nSystem Des    the pattern module will have several function\n        setup() -\nign will make turtle draw quickly\n                    make turtle have a window of 1000 * 800\n        reset() - turtle will erase everything\n        drawRectenglePattern() - will call draw rectangle\n        drawRectangle() - draw a single rectangle\n        drawCirclePatten() -\n        drawSuperPattern() - r\n\n\n\nTesting", "System Req\n\n\n\n\nSystem Analysis\n\n\n\n\nSystem Des    the pattern module will have several function\n        setup() -\nign will make turtle draw quickly\n                    make turtle have a window of 1000 * 800\n        reset() - turtle will erase everything\n        drawRectenglePattern() - will call draw rectangle\n        drawRectangle() - draw a single rectangle\n        drawCirclePatten() -\n        drawSuperPattern() - ra\n\n\n\nTesting", "System Req\n\n\n\n\nSystem Analysis\n\n\n\n\nSystem Des    the pattern module will have several function\n        setup() -\nign will make turtle draw quickly\n                    make turtle have a window of 1000 * 800\n        reset() - turtle will erase everything\n        drawRectenglePattern() - will call draw rectangle\n        drawRectangle() - draw a single rectangle\n        drawCirclePatten() -\n        drawSuperPattern() - ran\n\n\n\nTesting", "System Req\n\n\n\n\nSystem Analysis\n\n\n\n\nSystem Des    the pattern module will have several function\n        setup() -\nign will make turtle draw quickly\n                    make turtle have a window of 1000 * 800\n        reset() - turtle will erase everything\n        drawRectenglePattern() - will call draw rectangle\n        drawRectangle() - draw a single rectangle\n        drawCirclePatten() -\n        drawSuperPattern() - rand\n\n\n\nTesting", "System Req\n\n\n\n\nSystem Analysis\n\n\n\n\nSystem Des    the pattern module will have several function\n        setup() -\nign will make turtle draw quickly\n                    make turtle have a window of 1000 * 800\n        reset() - turtle will erase everything\n        drawRectenglePattern() - will call draw rectangle\n        drawRectangle() - draw a single rectangle\n        drawCirclePatten() -\n        drawSuperPattern() - rando\n\n\n\nTesting", "System Req\n\n\n\n\nSystem Analysis\n\n\n\n\nSystem Des    the pattern module will have several function\n        setup() -\nign will make turtle draw quickly\n                    make turtle have a window of 1000 * 800\n        reset() - turtle will erase everything\n        drawRectenglePattern() - will call draw rectangle\n        drawRectangle() - draw a single rectangle\n        drawCirclePatten() -\n        drawSuperPattern() - random\n\n\n\nTesting", "System Req\n\n\n\n\nSystem Analysis\n\n\n\n\nSystem Des    the pattern module will have several function\n        setup() -\nign will make turtle draw quickly\n                    make turtle have a window of 1000 * 800\n        reset() - turtle will erase everything\n        drawRectenglePattern() - will call draw rectangle\n        drawRectangle() - draw a single rectangle\n        drawCirclePatten() -\n        drawSuperPattern() - randoml\n\n\n\nTesting", "System Req\n\n\n\n\nSystem Analysis\n\n\n\n\nSystem Des    the pattern module will have several function\n        setup() -\nign will make turtle draw quickly\n                    make turtle have a window of 1000 * 800\n        reset() - turtle will erase everything\n        drawRectenglePattern() - will call draw rectangle\n        drawRectangle() - draw a single rectangle\n        drawCirclePatten() -\n        drawSuperPattern() - randomly\n\n\n\nTesting", "System Req\n\n\n\n\nSystem Analysis\n\n\n\n\nSystem Des    the pattern module will have several function\n        setup() -\nign will make turtle draw quickly\n                    make turtle have a window of 1000 * 800\n        reset() - turtle will erase everything\n        drawRectenglePattern() - will call draw rectangle\n        drawRectangle() - draw a single rectangle\n        drawCirclePatten() -\n        drawSuperPattern() - randomly d\n\n\n\nTesting", "System Req\n\n\n\n\nSystem Analysis\n\n\n\n\nSystem Des    the pattern module will have several function\n        setup() -\nign will make turtle draw quickly\n                    make turtle have a window of 1000 * 800\n        reset() - turtle will erase everything\n        drawRectenglePattern() - will call draw rectangle\n        drawRectangle() - draw a single rectangle\n        drawCirclePatten() -\n        drawSuperPattern() - randomly dr\n\n\n\nTesting", "System Req\n\n\n\n\nSystem Analysis\n\n\n\n\nSystem Des    the pattern module will have several function\n        setup() -\nign will make turtle draw quickly\n                    make turtle have a window of 1000 * 800\n        reset() - turtle will erase everything\n        drawRectenglePattern() - will call draw rectangle\n        drawRectangle() - draw a single rectangle\n        drawCirclePatten() -\n        drawSuperPattern() - randomly dra\n\n\n\nTesting", "System Req\n\n\n\n\nSystem Analysis\n\n\n\n\nSystem Des    the pattern module will have several function\n        setup() -\nign will make turtle draw quickly\n                    make turtle have a window of 1000 * 800\n        reset() - turtle will erase everything\n        drawRectenglePattern() - will call draw rectangle\n        drawRectangle() - draw a single rectangle\n        drawCirclePatten() -\n        drawSuperPattern() - randomly draw\n\n\n\nTesting", "System Req\n\n\n\n\nSystem Analysis\n\n\n\n\nSystem Des    the pattern module will have several function\n        setup() -\nign will make turtle draw quickly\n                    make turtle have a window of 1000 * 800\n        reset() - turtle will erase everything\n        drawRectenglePattern() - will call draw rectangle\n        drawRectangle() - draw a single rectangle\n        drawCirclePatten() -\n        drawSuperPattern() - randomly draw r\n\n\n\nTesting", "System Req\n\n\n\n\nSystem Analysis\n\n\n\n\nSystem Des    the pattern module will have several function\n        setup() -\nign will make turtle draw quickly\n                    make turtle have a window of 1000 * 800\n        reset() - turtle will erase everything\n        drawRectenglePattern() - will call draw rectangle\n        drawRectangle() - draw a single rectangle\n        drawCirclePatten() -\n        drawSuperPattern() - randomly draw re\n\n\n\nTesting", "System Req\n\n\n\n\nSystem Analysis\n\n\n\n\nSystem Des    the pattern module will have several function\n        setup() -\nign will make turtle draw quickly\n                    make turtle have a window of 1000 * 800\n        reset() - turtle will erase everything\n        drawRectenglePattern() - will call draw rectangle\n        drawRectangle() - draw a single rectangle\n        drawCirclePatten() -\n        drawSuperPattern() - randomly draw rec\n\n\n\nTesting", "System Req\n\n\n\n\nSystem Analysis\n\n\n\n\nSystem Des    the pattern module will have several function\n        setup() -\nign will make turtle draw quickly\n                    make turtle have a window of 1000 * 800\n        reset() - turtle will erase everything\n        drawRectenglePattern() - will call draw rectangle\n        drawRectangle() - draw a single rectangle\n        drawCirclePatten() -\n        drawSuperPattern() - randomly draw rect\n\n\n\nTesting", "System Req\n\n\n\n\nSystem Analysis\n\n\n\n\nSystem Des    the pattern module will have several function\n        setup() -\nign will make turtle draw quickly\n                    make turtle have a window of 1000 * 800\n        reset() - turtle will erase everything\n        drawRectenglePattern() - will call draw rectangle\n        drawRectangle() - draw a single rectangle\n        drawCirclePatten() -\n        drawSuperPattern() - randomly draw recta\n\n\n\nTesting", "System Req\n\n\n\n\nSystem Analysis\n\n\n\n\nSystem Des    the pattern module will have several function\n        setup() -\nign will make turtle draw quickly\n                    make turtle have a window of 1000 * 800\n        reset() - turtle will erase everything\n        drawRectenglePattern() - will call draw rectangle\n        drawRectangle() - draw a single rectangle\n        drawCirclePatten() -\n        drawSuperPattern() - randomly draw rectan\n\n\n\nTesting", "System Req\n\n\n\n\nSystem Analysis\n\n\n\n\nSystem Des    the pattern module will have several function\n        setup() -\nign will make turtle draw quickly\n                    make turtle have a window of 1000 * 800\n        reset() - turtle will erase everything\n        drawRectenglePattern() - will call draw rectangle\n        drawRectangle() - draw a single rectangle\n        drawCirclePatten() -\n        drawSuperPattern() - randomly draw rectang\n\n\n\nTesting", "System Req\n\n\n\n\nSystem Analysis\n\n\n\n\nSystem Des    the pattern module will have several function\n        setup() -\nign will make turtle draw quickly\n                    make turtle have a window of 1000 * 800\n        reset() - turtle will erase everything\n        drawRectenglePattern() - will call draw rectangle\n        drawRectangle() - draw a single rectangle\n        drawCirclePatten() -\n        drawSuperPattern() - randomly draw rectangl\n\n\n\nTesting", "System Req\n\n\n\n\nSystem Analysis\n\n\n\n\nSystem Des    the pattern module will have several function\n        setup() -\nign will make turtle draw quickly\n                    make turtle have a window of 1000 * 800\n        reset() - turtle will erase everything\n        drawRectenglePattern() - will call draw rectangle\n        drawRectangle() - draw a single rectangle\n        drawCirclePatten() -\n        drawSuperPattern() - randomly draw rectangle\n\n\n\nTesting", "System Req\n\n\n\n\nSystem Analysis\n\n\n\n\nSystem Des    the pattern module will have several function\n        setup() -\nign will make turtle draw quickly\n                    make turtle have a window of 1000 * 800\n        reset() - turtle will erase everything\n        drawRectenglePattern() - will call draw rectangle\n        drawRectangle() - draw a single rectangle\n        drawCirclePatten() -\n        drawSuperPattern() - randomly draw rectangle a\n\n\n\nTesting", "System Req\n\n\n\n\nSystem Analysis\n\n\n\n\nSystem Des    the pattern module will have several function\n        setup() -\nign will make turtle draw quickly\n                    make turtle have a window of 1000 * 800\n        reset() - turtle will erase everything\n        drawRectenglePattern() - will call draw rectangle\n        drawRectangle() - draw a single rectangle\n        drawCirclePatten() -\n        drawSuperPattern() - randomly draw rectangle an\n\n\n\nTesting", "System Req\n\n\n\n\nSystem Analysis\n\n\n\n\nSystem Des    the pattern module will have several function\n        setup() -\nign will make turtle draw quickly\n                    make turtle have a window of 1000 * 800\n        reset() - turtle will erase everything\n        drawRectenglePattern() - will call draw rectangle\n        drawRectangle() - draw a single rectangle\n        drawCirclePatten() -\n        drawSuperPattern() - randomly draw rectangle and\n\n\n\nTesting", "System Req\n\n\n\n\nSystem Analysis\n\n\n\n\nSystem Des    the pattern module will have several function\n        setup() -\nign will make turtle draw quickly\n                    make turtle have a window of 1000 * 800\n        reset() - turtle will erase everything\n        drawRectenglePattern() - will call draw rectangle\n        drawRectangle() - draw a single rectangle\n        drawCirclePatten() -\n        drawSuperPattern() - randomly draw rectangle and c\n\n\n\nTesting", "System Req\n\n\n\n\nSystem Analysis\n\n\n\n\nSystem Des    the pattern module will have several function\n        setup() -\nign will make turtle draw quickly\n                    make turtle have a window of 1000 * 800\n        reset() - turtle will erase everything\n        drawRectenglePattern() - will call draw rectangle\n        drawRectangle() - draw a single rectangle\n        drawCirclePatten() -\n        drawSuperPattern() - randomly draw rectangle and ci\n\n\n\nTesting", "System Req\n\n\n\n\nSystem Analysis\n\n\n\n\nSystem Des    the pattern module will have several function\n        setup() -\nign will make turtle draw quickly\n                    make turtle have a window of 1000 * 800\n        reset() - turtle will erase everything\n        drawRectenglePattern() - will call draw rectangle\n        drawRectangle() - draw a single rectangle\n        drawCirclePatten() -\n        drawSuperPattern() - randomly draw rectangle and cir\n\n\n\nTesting", "System Req\n\n\n\n\nSystem Analysis\n\n\n\n\nSystem Des    the pattern module will have several function\n        setup() -\nign will make turtle draw quickly\n                    make turtle have a window of 1000 * 800\n        reset() - turtle will erase everything\n        drawRectenglePattern() - will call draw rectangle\n        drawRectangle() - draw a single rectangle\n        drawCirclePatten() -\n        drawSuperPattern() - randomly draw rectangle and circ\n\n\n\nTesting", "System Req\n\n\n\n\nSystem Analysis\n\n\n\n\nSystem Des    the pattern module will have several function\n        setup() -\nign will make turtle draw quickly\n                    make turtle have a window of 1000 * 800\n        reset() - turtle will erase everything\n        drawRectenglePattern() - will call draw rectangle\n        drawRectangle() - draw a single rectangle\n        drawCirclePatten() -\n        drawSuperPattern() - randomly draw rectangle and circl\n\n\n\nTesting", "System Req\n\n\n\n\nSystem Analysis\n\n\n\n\nSystem Des    the pattern module will have several function\n        setup() -\nign will make turtle draw quickly\n                    make turtle have a window of 1000 * 800\n        reset() - turtle will erase everything\n        drawRectenglePattern() - will call draw rectangle\n        drawRectangle() - draw a single rectangle\n        drawCirclePatten() -\n        drawSuperPattern() - randomly draw rectangle and circle\n\n\n\nTesting", "System Req\n\n\n\n\nSystem Analysis\n\n\n\n\nSystem Des    the pattern module will have several function\n        setup() -\nign will make turtle draw quickly\n                    make turtle have a window of 1000 * 800\n        reset() - turtle will erase everything\n        drawRectenglePattern() - will call draw rectangle\n        drawRectangle() - draw a single rectangle\n        drawCirclePatten() -\n        drawSuperPattern() - randomly draw rectangle and circle p\n\n\n\nTesting", "System Req\n\n\n\n\nSystem Analysis\n\n\n\n\nSystem Des    the pattern module will have several function\n        setup() -\nign will make turtle draw quickly\n                    make turtle have a window of 1000 * 800\n        reset() - turtle will erase everything\n        drawRectenglePattern() - will call draw rectangle\n        drawRectangle() - draw a single rectangle\n        drawCirclePatten() -\n        drawSuperPattern() - randomly draw rectangle and circle pa\n\n\n\nTesting", "System Req\n\n\n\n\nSystem Analysis\n\n\n\n\nSystem Des    the pattern module will have several function\n        setup() -\nign will make turtle draw quickly\n                    make turtle have a window of 1000 * 800\n        reset() - turtle will erase everything\n        drawRectenglePattern() - will call draw rectangle\n        drawRectangle() - draw a single rectangle\n        drawCirclePatten() -\n        drawSuperPattern() - randomly draw rectangle and circle pat\n\n\n\nTesting", "System Req\n\n\n\n\nSystem Analysis\n\n\n\n\nSystem Des    the pattern module will have several function\n        setup() -\nign will make turtle draw quickly\n                    make turtle have a window of 1000 * 800\n        reset() - turtle will erase everything\n        drawRectenglePattern() - will call draw rectangle\n        drawRectangle() - draw a single rectangle\n        drawCirclePatten() -\n        drawSuperPattern() - randomly draw rectangle and circle patt\n\n\n\nTesting", "System Req\n\n\n\n\nSystem Analysis\n\n\n\n\nSystem Des    the pattern module will have several function\n        setup() -\nign will make turtle draw quickly\n                    make turtle have a window of 1000 * 800\n        reset() - turtle will erase everything\n        drawRectenglePattern() - will call draw rectangle\n        drawRectangle() - draw a single rectangle\n        drawCirclePatten() -\n        drawSuperPattern() - randomly draw rectangle and circle patte\n\n\n\nTesting", "System Req\n\n\n\n\nSystem Analysis\n\n\n\n\nSystem Des    the pattern module will have several function\n        setup() -\nign will make turtle draw quickly\n                    make turtle have a window of 1000 * 800\n        reset() - turtle will erase everything\n        drawRectenglePattern() - will call draw rectangle\n        drawRectangle() - draw a single rectangle\n        drawCirclePatten() -\n        drawSuperPattern() - randomly draw rectangle and circle patten\n\n\n\nTesting", "System Req\n\n\n\n\nSystem Analysis\n\n\n\n\nSystem Des    the pattern module will have several function\n        setup() -\nign will make turtle draw quickly\n                    make turtle have a window of 1000 * 800\n        reset() - turtle will erase everything\n        drawRectenglePattern() - will call draw rectangle\n        drawRectangle() - draw a single rectangle\n        drawCirclePatten() -\n        drawSuperPattern() - randomly draw rectangle and circle patte\n\n\n\nTesting", "System Req\n\n\n\n\nSystem Analysis\n\n\n\n\nSystem Des    the pattern module will have several function\n        setup() -\nign will make turtle draw quickly\n                    make turtle have a window of 1000 * 800\n        reset() - turtle will erase everything\n        drawRectenglePattern() - will call draw rectangle\n        drawRectangle() - draw a single rectangle\n        drawCirclePatten() -\n        drawSuperPattern() - randomly draw rectangle and circle patter\n\n\n\nTesting", "System Req\n\n\n\n\nSystem Analysis\n\n\n\n\nSystem Des    the pattern module will have several function\n        setup() -\nign will make turtle draw quickly\n                    make turtle have a window of 1000 * 800\n        reset() - turtle will erase everything\n        drawRectenglePattern() - will call draw rectangle\n        drawRectangle() - draw a single rectangle\n        drawCirclePatten() -\n        drawSuperPattern() - randomly draw rectangle and circle pattern\n\n\n\nTesting", "System Req\n\n\n\n\nSystem Analysis\n\n\n\n\nSystem Des    the pattern module will have several function\n        setup() -\nign will make turtle draw quickly\n                    make turtle have a window of 1000 * 800\n        reset() - turtle will erase everything\n        drawRectenglePattern() - will call draw rectangle\n        drawRectangle() - draw a single rectangle\n        drawCirclePatten() -\n        drawSuperPattern() - randomly draw rectangle and circle patternd\n\n\n\nTesting", "System Req\n\n\n\n\nSystem Analysis\n\n\n\n\nSystem Des    the pattern module will have several function\n        setup() -\nign will make turtle draw quickly\n                    make turtle have a window of 1000 * 800\n        reset() - turtle will erase everything\n        drawRectenglePattern() - will call draw rectangle\n        drawRectangle() - draw a single rectangle\n        drawCirclePatten() -\n        drawSuperPattern() - randomly draw rectangle and circle pattern\n\n\n\nTesting", "System Req\n\n\n\n\nSystem Analysis\n\n\n\n\nSystem Des    the pattern module will have several function\n        setup() -\nign will make turtle draw quickly\n                    make turtle have a window of 1000 * 800\n        reset() - turtle will erase everything\n        drawRectenglePattern() - will call draw rectangle\n        drawRectangle() - draw a single rectangle\n        drawCirclePatten() -\n        drawSuperPattern() - randomly draw rectangle and circle patterns\n\n\n\nTesting", "System Req\n\n\n\n\nSystem Analysis\n\n\n\n\nSystem Des    the pattern module will have several function\n        setup() -\nign will make turtle draw quickly\n                    make turtle have a window of 1000 * 800\n        reset() - turtle will erase everything\n        drawRectenglePattern() - will call draw rectangle\n        drawRectangle() - draw a single rectangle\n        drawCirclePatten() -\n        drawSuperPattern() - randomly draw rectangle and circle patterns b\n\n\n\nTesting", "System Req\n\n\n\n\nSystem Analysis\n\n\n\n\nSystem Des    the pattern module will have several function\n        setup() -\nign will make turtle draw quickly\n                    make turtle have a window of 1000 * 800\n        reset() - turtle will erase everything\n        drawRectenglePattern() - will call draw rectangle\n        drawRectangle() - draw a single rectangle\n        drawCirclePatten() -\n        drawSuperPattern() - randomly draw rectangle and circle patterns ba\n\n\n\nTesting", "System Req\n\n\n\n\nSystem Analysis\n\n\n\n\nSystem Des    the pattern module will have several function\n        setup() -\nign will make turtle draw quickly\n                    make turtle have a window of 1000 * 800\n        reset() - turtle will erase everything\n        drawRectenglePattern() - will call draw rectangle\n        drawRectangle() - draw a single rectangle\n        drawCirclePatten() -\n        drawSuperPattern() - randomly draw rectangle and circle patterns bas\n\n\n\nTesting", "System Req\n\n\n\n\nSystem Analysis\n\n\n\n\nSystem Des    the pattern module will have several function\n        setup() -\nign will make turtle draw quickly\n                    make turtle have a window of 1000 * 800\n        reset() - turtle will erase everything\n        drawRectenglePattern() - will call draw rectangle\n        drawRectangle() - draw a single rectangle\n        drawCirclePatten() -\n        drawSuperPattern() - randomly draw rectangle and circle patterns base\n\n\n\nTesting", "System Req\n\n\n\n\nSystem Analysis\n\n\n\n\nSystem Des    the pattern module will have several function\n        setup() -\nign will make turtle draw quickly\n                    make turtle have a window of 1000 * 800\n        reset() - turtle will erase everything\n        drawRectenglePattern() - will call draw rectangle\n        drawRectangle() - draw a single rectangle\n        drawCirclePatten() -\n        drawSuperPattern() - randomly draw rectangle and circle patterns based\n\n\n\nTesting", "System Req\n\n\n\n\nSystem Analysis\n\n\n\n\nSystem Des    the pattern module will have several function\n        setup() -\nign will make turtle draw quickly\n                    make turtle have a window of 1000 * 800\n        reset() - turtle will erase everything\n        drawRectenglePattern() - will call draw rectangle\n        drawRectangle() - draw a single rectangle\n        drawCirclePatten() -\n        drawSuperPattern() - randomly draw rectangle and circle patterns based o\n\n\n\nTesting", "System Req\n\n\n\n\nSystem Analysis\n\n\n\n\nSystem Des    the pattern module will have several function\n        setup() -\nign will make turtle draw quickly\n                    make turtle have a window of 1000 * 800\n        reset() - turtle will erase everything\n        drawRectenglePattern() - will call draw rectangle\n        drawRectangle() - draw a single rectangle\n        drawCirclePatten() -\n        drawSuperPattern() - randomly draw rectangle and circle patterns based on\n\n\n\nTesting", "System Req\n\n\n\n\nSystem Analysis\n\n\n\n\nSystem Des    the pattern module will have several function\n        setup() -\nign will make turtle draw quickly\n                    make turtle have a window of 1000 * 800\n        reset() - turtle will erase everything\n        drawRectenglePattern() - will call draw rectangle\n        drawRectangle() - draw a single rectangle\n        drawCirclePatten() -\n        drawSuperPattern() - randomly draw rectangle and circle patterns based on r\n\n\n\nTesting", "System Req\n\n\n\n\nSystem Analysis\n\n\n\n\nSystem Des    the pattern module will have several function\n        setup() -\nign will make turtle draw quickly\n                    make turtle have a window of 1000 * 800\n        reset() - turtle will erase everything\n        drawRectenglePattern() - will call draw rectangle\n        drawRectangle() - draw a single rectangle\n        drawCirclePatten() -\n        drawSuperPattern() - randomly draw rectangle and circle patterns based on ra\n\n\n\nTesting", "System Req\n\n\n\n\nSystem Analysis\n\n\n\n\nSystem Des    the pattern module will have several function\n        setup() -\nign will make turtle draw quickly\n                    make turtle have a window of 1000 * 800\n        reset() - turtle will erase everything\n        drawRectenglePattern() - will call draw rectangle\n        drawRectangle() - draw a single rectangle\n        drawCirclePatten() -\n        drawSuperPattern() - randomly draw rectangle and circle patterns based on ran\n\n\n\nTesting", "System Req\n\n\n\n\nSystem Analysis\n\n\n\n\nSystem Des    the pattern module will have several function\n        setup() -\nign will make turtle draw quickly\n                    make turtle have a window of 1000 * 800\n        reset() - turtle will erase everything\n        drawRectenglePattern() - will call draw rectangle\n        drawRectangle() - draw a single rectangle\n        drawCirclePatten() -\n        drawSuperPattern() - randomly draw rectangle and circle patterns based on rand\n\n\n\nTesting", "System Req\n\n\n\n\nSystem Analysis\n\n\n\n\nSystem Des    the pattern module will have several function\n        setup() -\nign will make turtle draw quickly\n                    make turtle have a window of 1000 * 800\n        reset() - turtle will erase everything\n        drawRectenglePattern() - will call draw rectangle\n        drawRectangle() - draw a single rectangle\n        drawCirclePatten() -\n        drawSuperPattern() - randomly draw rectangle and circle patterns based on rando\n\n\n\nTesting", "System Req\n\n\n\n\nSystem Analysis\n\n\n\n\nSystem Des    the pattern module will have several function\n        setup() -\nign will make turtle draw quickly\n                    make turtle have a window of 1000 * 800\n        reset() - turtle will erase everything\n        drawRectenglePattern() - will call draw rectangle\n        drawRectangle() - draw a single rectangle\n        drawCirclePatten() -\n        drawSuperPattern() - randomly draw rectangle and circle patterns based on random\n\n\n\nTesting", "System Req\n\n\n\n\nSystem Analysis\n\n\n\n\nSystem Des    the pattern module will have several function\n        setup() -\nign will make turtle draw quickly\n                    make turtle have a window of 1000 * 800\n        reset() - turtle will erase everything\n        drawRectenglePattern() - will call draw rectangle\n        drawRectangle() - draw a single rectangle\n        drawCirclePatten() -\n        drawSuperPattern() - randomly draw rectangle and circle patterns based on random v\n\n\n\nTesting", "System Req\n\n\n\n\nSystem Analysis\n\n\n\n\nSystem Des    the pattern module will have several function\n        setup() -\nign will make turtle draw quickly\n                    make turtle have a window of 1000 * 800\n        reset() - turtle will erase everything\n        drawRectenglePattern() - will call draw rectangle\n        drawRectangle() - draw a single rectangle\n        drawCirclePatten() -\n        drawSuperPattern() - randomly draw rectangle and circle patterns based on random va\n\n\n\nTesting", "System Req\n\n\n\n\nSystem Analysis\n\n\n\n\nSystem Des    the pattern module will have several function\n        setup() -\nign will make turtle draw quickly\n                    make turtle have a window of 1000 * 800\n        reset() - turtle will erase everything\n        drawRectenglePattern() - will call draw rectangle\n        drawRectangle() - draw a single rectangle\n        drawCirclePatten() -\n        drawSuperPattern() - randomly draw rectangle and circle patterns based on random val\n\n\n\nTesting", "System Req\n\n\n\n\nSystem Analysis\n\n\n\n\nSystem Des    the pattern module will have several function\n        setup() -\nign will make turtle draw quickly\n                    make turtle have a window of 1000 * 800\n        reset() - turtle will erase everything\n        drawRectenglePattern() - will call draw rectangle\n        drawRectangle() - draw a single rectangle\n        drawCirclePatten() -\n        drawSuperPattern() - randomly draw rectangle and circle patterns based on random valu\n\n\n\nTesting", "System Req\n\n\n\n\nSystem Analysis\n\n\n\n\nSystem Des    the pattern module will have several function\n        setup() -\nign will make turtle draw quickly\n                    make turtle have a window of 1000 * 800\n        reset() - turtle will erase everything\n        drawRectenglePattern() - will call draw rectangle\n        drawRectangle() - draw a single rectangle\n        drawCirclePatten() -\n        drawSuperPattern() - randomly draw rectangle and circle patterns based on random value\n\n\n\nTesting", "System Req\n\n\n\n\nSystem Analysis\n\n\n\n\nSystem Des    the pattern module will have several function\n        setup() -\nign will make turtle draw quickly\n                    make turtle have a window of 1000 * 800\n        reset() - turtle will erase everything\n        drawRectenglePattern() - will call draw rectangle\n        drawRectangle() - draw a single rectangle\n        drawCirclePatten() -\n        drawSuperPattern() - randomly draw rectangle and circle patterns based on random values\n\n\n\nTesting", "System Req\n\n\n\n\nSystem Analysis\n\n\n\n\nSystem Des    the pattern module will have several function\n        setup() -\nign will make turtle draw quickly\n                    make turtle have a window of 1000 * 800\n        reset() - turtle will erase everything\n        drawRectenglePattern() - will call draw rectangle\n        drawRectangle() - draw a single rectangle\n        drawCirclePatten() -\n        drawSuperPattern() - randomly draw rectangle and circle patterns based on random values\n        d\n\n\n\nTesting", "System Req\n\n\n\n\nSystem Analysis\n\n\n\n\nSystem Des    the pattern module will have several function\n        setup() -\nign will make turtle draw quickly\n                    make turtle have a window of 1000 * 800\n        reset() - turtle will erase everything\n        drawRectenglePattern() - will call draw rectangle\n        drawRectangle() - draw a single rectangle\n        drawCirclePatten() -\n        drawSuperPattern() - randomly draw rectangle and circle patterns based on random values\n        dr\n\n\n\nTesting", "System Req\n\n\n\n\nSystem Analysis\n\n\n\n\nSystem Des    the pattern module will have several function\n        setup() -\nign will make turtle draw quickly\n                    make turtle have a window of 1000 * 800\n        reset() - turtle will erase everything\n        drawRectenglePattern() - will call draw rectangle\n        drawRectangle() - draw a single rectangle\n        drawCirclePatten() -\n        drawSuperPattern() - randomly draw rectangle and circle patterns based on random values\n        dre\n\n\n\nTesting", "System Req\n\n\n\n\nSystem Analysis\n\n\n\n\nSystem Des    the pattern module will have several function\n        setup() -\nign will make turtle draw quickly\n                    make turtle have a window of 1000 * 800\n        reset() - turtle will erase everything\n        drawRectenglePattern() - will call draw rectangle\n        drawRectangle() - draw a single rectangle\n        drawCirclePatten() -\n        drawSuperPattern() - randomly draw rectangle and circle patterns based on random values\n        dr\n\n\n\nTesting", "System Req\n\n\n\n\nSystem Analysis\n\n\n\n\nSystem Des    the pattern module will have several function\n        setup() -\nign will make turtle draw quickly\n                    make turtle have a window of 1000 * 800\n        reset() - turtle will erase everything\n        drawRectenglePattern() - will call draw rectangle\n        drawRectangle() - draw a single rectangle\n        drawCirclePatten() -\n        drawSuperPattern() - randomly draw rectangle and circle patterns based on random values\n        dra\n\n\n\nTesting", "System Req\n\n\n\n\nSystem Analysis\n\n\n\n\nSystem Des    the pattern module will have several function\n        setup() -\nign will make turtle draw quickly\n                    make turtle have a window of 1000 * 800\n        reset() - turtle will erase everything\n        drawRectenglePattern() - will call draw rectangle\n        drawRectangle() - draw a single rectangle\n        drawCirclePatten() -\n        drawSuperPattern() - randomly draw rectangle and circle patterns based on random values\n        draw\n\n\n\nTesting", "System Req\n\n\n\n\nSystem Analysis\n\n\n\n\nSystem Des    the pattern module will have several function\n        setup() -\nign will make turtle draw quickly\n                    make turtle have a window of 1000 * 800\n        reset() - turtle will erase everything\n        drawRectenglePattern() - will call draw rectangle\n        drawRectangle() - draw a single rectangle\n        drawCirclePatten() -\n        drawSuperPattern() - randomly draw rectangle and circle patterns based on random values\n        drawR\n\n\n\nTesting", "System Req\n\n\n\n\nSystem Analysis\n\n\n\n\nSystem Des    the pattern module will have several function\n        setup() -\nign will make turtle draw quickly\n                    make turtle have a window of 1000 * 800\n        reset() - turtle will erase everything\n        drawRectenglePattern() - will call draw rectangle\n        drawRectangle() - draw a single rectangle\n        drawCirclePatten() -\n        drawSuperPattern() - randomly draw rectangle and circle patterns based on random values\n        drawRa\n\n\n\nTesting", "System Req\n\n\n\n\nSystem Analysis\n\n\n\n\nSystem Des    the pattern module will have several function\n        setup() -\nign will make turtle draw quickly\n                    make turtle have a window of 1000 * 800\n        reset() - turtle will erase everything\n        drawRectenglePattern() - will call draw rectangle\n        drawRectangle() - draw a single rectangle\n        drawCirclePatten() -\n        drawSuperPattern() - randomly draw rectangle and circle patterns based on random values\n        drawRan\n\n\n\nTesting", "System Req\n\n\n\n\nSystem Analysis\n\n\n\n\nSystem Des    the pattern module will have several function\n        setup() -\nign will make turtle draw quickly\n                    make turtle have a window of 1000 * 800\n        reset() - turtle will erase everything\n        drawRectenglePattern() - will call draw rectangle\n        drawRectangle() - draw a single rectangle\n        drawCirclePatten() -\n        drawSuperPattern() - randomly draw rectangle and circle patterns based on random values\n        drawRand\n\n\n\nTesting", "System Req\n\n\n\n\nSystem Analysis\n\n\n\n\nSystem Des    the pattern module will have several function\n        setup() -\nign will make turtle draw quickly\n                    make turtle have a window of 1000 * 800\n        reset() - turtle will erase everything\n        drawRectenglePattern() - will call draw rectangle\n        drawRectangle() - draw a single rectangle\n        drawCirclePatten() -\n        drawSuperPattern() - randomly draw rectangle and circle patterns based on random values\n        drawRando\n\n\n\nTesting", "System Req\n\n\n\n\nSystem Analysis\n\n\n\n\nSystem Des    the pattern module will have several function\n        setup() -\nign will make turtle draw quickly\n                    make turtle have a window of 1000 * 800\n        reset() - turtle will erase everything\n        drawRectenglePattern() - will call draw rectangle\n        drawRectangle() - draw a single rectangle\n        drawCirclePatten() -\n        drawSuperPattern() - randomly draw rectangle and circle patterns based on random values\n        drawRandom\n\n\n\nTesting", "System Req\n\n\n\n\nSystem Analysis\n\n\n\n\nSystem Des    the pattern module will have several function\n        setup() -\nign will make turtle draw quickly\n                    make turtle have a window of 1000 * 800\n        reset() - turtle will erase everything\n        drawRectenglePattern() - will call draw rectangle\n        drawRectangle() - draw a single rectangle\n        drawCirclePatten() -\n        drawSuperPattern() - randomly draw rectangle and circle patterns based on random values\n        drawRandomC\n\n\n\nTesting", "System Req\n\n\n\n\nSystem Analysis\n\n\n\n\nSystem Des    the pattern module will have several function\n        setup() -\nign will make turtle draw quickly\n                    make turtle have a window of 1000 * 800\n        reset() - turtle will erase everything\n        drawRectenglePattern() - will call draw rectangle\n        drawRectangle() - draw a single rectangle\n        drawCirclePatten() -\n        drawSuperPattern() - randomly draw rectangle and circle patterns based on random values\n        drawRandomCo\n\n\n\nTesting", "System Req\n\n\n\n\nSystem Analysis\n\n\n\n\nSystem Des    the pattern module will have several function\n        setup() -\nign will make turtle draw quickly\n                    make turtle have a window of 1000 * 800\n        reset() - turtle will erase everything\n        drawRectenglePattern() - will call draw rectangle\n        drawRectangle() - draw a single rectangle\n        drawCirclePatten() -\n        drawSuperPattern() - randomly draw rectangle and circle patterns based on random values\n        drawRandomCol\n\n\n\nTesting", "System Req\n\n\n\n\nSystem Analysis\n\n\n\n\nSystem Des    the pattern module will have several function\n        setup() -\nign will make turtle draw quickly\n                    make turtle have a window of 1000 * 800\n        reset() - turtle will erase everything\n        drawRectenglePattern() - will call draw rectangle\n        drawRectangle() - draw a single rectangle\n        drawCirclePatten() -\n        drawSuperPattern() - randomly draw rectangle and circle patterns based on random values\n        drawRandomColo\n\n\n\nTesting", "System Req\n\n\n\n\nSystem Analysis\n\n\n\n\nSystem Des    the pattern module will have several function\n        setup() -\nign will make turtle draw quickly\n                    make turtle have a window of 1000 * 800\n        reset() - turtle will erase everything\n        drawRectenglePattern() - will call draw rectangle\n        drawRectangle() - draw a single rectangle\n        drawCirclePatten() -\n        drawSuperPattern() - randomly draw rectangle and circle patterns based on random values\n        drawRandomColor\n\n\n\nTesting", "System Req\n\n\n\n\nSystem Analysis\n\n\n\n\nSystem Des    the pattern module will have several function\n        setup() -\nign will make turtle draw quickly\n                    make turtle have a window of 1000 * 800\n        reset() - turtle will erase everything\n        drawRectenglePattern() - will call draw rectangle\n        drawRectangle() - draw a single rectangle\n        drawCirclePatten() -\n        drawSuperPattern() - randomly draw rectangle and circle patterns based on random values\n        drawRandomColor)\n\n\n\nTesting", "System Req\n\n\n\n\nSystem Analysis\n\n\n\n\nSystem Des    the pattern module will have several function\n        setup() -\nign will make turtle draw quickly\n                    make turtle have a window of 1000 * 800\n        reset() - turtle will erase everything\n        drawRectenglePattern() - will call draw rectangle\n        drawRectangle() - draw a single rectangle\n        drawCirclePatten() -\n        drawSuperPattern() - randomly draw rectangle and circle patterns based on random values\n        drawRandomColor\n\n\n\nTesting", "System Req\n\n\n\n\nSystem Analysis\n\n\n\n\nSystem Des    the pattern module will have several function\n        setup() -\nign will make turtle draw quickly\n                    make turtle have a window of 1000 * 800\n        reset() - turtle will erase everything\n        drawRectenglePattern() - will call draw rectangle\n        drawRectangle() - draw a single rectangle\n        drawCirclePatten() -\n        drawSuperPattern() - randomly draw rectangle and circle patterns based on random values\n        drawRandomColor(\n\n\n\nTesting", "System Req\n\n\n\n\nSystem Analysis\n\n\n\n\nSystem Des    the pattern module will have several function\n        setup() -\nign will make turtle draw quickly\n                    make turtle have a window of 1000 * 800\n        reset() - turtle will erase everything\n        drawRectenglePattern() - will call draw rectangle\n        drawRectangle() - draw a single rectangle\n        drawCirclePatten() -\n        drawSuperPattern() - randomly draw rectangle and circle patterns based on random values\n        drawRandomColor()\n\n\n\nTesting", "System Req\n\n\n\n\nSystem Analysis\n\n\n\n\nSystem Des    the pattern module will have several function\n        setup() -\nign will make turtle draw quickly\n                    make turtle have a window of 1000 * 800\n        reset() - turtle will erase everything\n        drawRectenglePattern() - will call draw rectangle\n        drawRectangle() - draw a single rectangle\n        drawCirclePatten() -\n        drawSuperPattern() - randomly draw rectangle and circle patterns based on random values\n        drawRandomColor()-\n\n\n\nTesting", "System Req\n\n\n\n\nSystem Analysis\n\n\n\n\nSystem Des    the pattern module will have several function\n        setup() -\nign will make turtle draw quickly\n                    make turtle have a window of 1000 * 800\n        reset() - turtle will erase everything\n        drawRectenglePattern() - will call draw rectangle\n        drawRectangle() - draw a single rectangle\n        drawCirclePatten() -\n        drawSuperPattern() - randomly draw rectangle and circle patterns based on random values\n        drawRandomColor()- d\n\n\n\nTesting", "System Req\n\n\n\n\nSystem Analysis\n\n\n\n\nSystem Des    the pattern module will have several function\n        setup() -\nign will make turtle draw quickly\n                    make turtle have a window of 1000 * 800\n        reset() - turtle will erase everything\n        drawRectenglePattern() - will call draw rectangle\n        drawRectangle() - draw a single rectangle\n        drawCirclePatten() -\n        drawSuperPattern() - randomly draw rectangle and circle patterns based on random values\n        drawRandomColor()- do\n\n\n\nTesting", "System Req\n\n\n\n\nSystem Analysis\n\n\n\n\nSystem Des    the pattern module will have several function\n        setup() -\nign will make turtle draw quickly\n                    make turtle have a window of 1000 * 800\n        reset() - turtle will erase everything\n        drawRectenglePattern() - will call draw rectangle\n        drawRectangle() - draw a single rectangle\n        drawCirclePatten() -\n        drawSuperPattern() - randomly draw rectangle and circle patterns based on random values\n        drawRandomColor()- do n\n\n\n\nTesting", "System Req\n\n\n\n\nSystem Analysis\n\n\n\n\nSystem Des    the pattern module will have several function\n        setup() -\nign will make turtle draw quickly\n                    make turtle have a window of 1000 * 800\n        reset() - turtle will erase everything\n        drawRectenglePattern() - will call draw rectangle\n        drawRectangle() - draw a single rectangle\n        drawCirclePatten() -\n        drawSuperPattern() - randomly draw rectangle and circle patterns based on random values\n        drawRandomColor()- do no\n\n\n\nTesting", "System Req\n\n\n\n\nSystem Analysis\n\n\n\n\nSystem Des    the pattern module will have several function\n        setup() -\nign will make turtle draw quickly\n                    make turtle have a window of 1000 * 800\n        reset() - turtle will erase everything\n        drawRectenglePattern() - will call draw rectangle\n        drawRectangle() - draw a single rectangle\n        drawCirclePatten() -\n        drawSuperPattern() - randomly draw rectangle and circle patterns based on random values\n        drawRandomColor()- do not\n\n\n\nTesting", "System Req\n\n\n\n\nSystem Analysis\n\n\n\n\nSystem Des    the pattern module will have several function\n        setup() -\nign will make turtle draw quickly\n                    make turtle have a window of 1000 * 800\n        reset() - turtle will erase everything\n        drawRectenglePattern() - will call draw rectangle\n        drawRectangle() - draw a single rectangle\n        drawCirclePatten() -\n        drawSuperPattern() - randomly draw rectangle and circle patterns based on random values\n        drawRandomColor()- do not u\n\n\n\nTesting", "System Req\n\n\n\n\nSystem Analysis\n\n\n\n\nSystem Des    the pattern module will have several function\n        setup() -\nign will make turtle draw quickly\n                    make turtle have a window of 1000 * 800\n        reset() - turtle will erase everything\n        drawRectenglePattern() - will call draw rectangle\n        drawRectangle() - draw a single rectangle\n        drawCirclePatten() -\n        drawSuperPattern() - randomly draw rectangle and circle patterns based on random values\n        drawRandomColor()- do not us\n\n\n\nTesting", "System Req\n\n\n\n\nSystem Analysis\n\n\n\n\nSystem Des    the pattern module will have several function\n        setup() -\nign will make turtle draw quickly\n                    make turtle have a window of 1000 * 800\n        reset() - turtle will erase everything\n        drawRectenglePattern() - will call draw rectangle\n        drawRectangle() - draw a single rectangle\n        drawCirclePatten() -\n        drawSuperPattern() - randomly draw rectangle and circle patterns based on random values\n        drawRandomColor()- do not use\n\n\n\nTesting", "System Req\n\n\n\n\nSystem Analysis\n\n\n\n\nSystem Des    the pattern module will have several function\n        setup() -\nign will make turtle draw quickly\n                    make turtle have a window of 1000 * 800\n        reset() - turtle will erase everything\n        drawRectenglePattern() - will call draw rectangle\n        drawRectangle() - draw a single rectangle\n        drawCirclePatten() -\n        drawSuperPattern() - randomly draw rectangle and circle patterns based on random values\n        drawRandomColor()- do not use a\n\n\n\nTesting", "System Req\n\n\n\n\nSystem Analysis\n\n\n\n\nSystem Des    the pattern module will have several function\n        setup() -\nign will make turtle draw quickly\n                    make turtle have a window of 1000 * 800\n        reset() - turtle will erase everything\n        drawRectenglePattern() - will call draw rectangle\n        drawRectangle() - draw a single rectangle\n        drawCirclePatten() -\n        drawSuperPattern() - randomly draw rectangle and circle patterns based on random values\n        drawRandomColor()- do not use an\n\n\n\nTesting", "System Req\n\n\n\n\nSystem Analysis\n\n\n\n\nSystem Des    the pattern module will have several function\n        setup() -\nign will make turtle draw quickly\n                    make turtle have a window of 1000 * 800\n        reset() - turtle will erase everything\n        drawRectenglePattern() - will call draw rectangle\n        drawRectangle() - draw a single rectangle\n        drawCirclePatten() -\n        drawSuperPattern() - randomly draw rectangle and circle patterns based on random values\n        drawRandomColor()- do not use any\n\n\n\nTesting", "System Req\n\n\n\n\nSystem Analysis\n\n\n\n\nSystem Des    the pattern module will have several function\n        setup() -\nign will make turtle draw quickly\n                    make turtle have a window of 1000 * 800\n        reset() - turtle will erase everything\n        drawRectenglePattern() - will call draw rectangle\n        drawRectangle() - draw a single rectangle\n        drawCirclePatten() -\n        drawSuperPattern() - randomly draw rectangle and circle patterns based on random values\n        drawRandomColor()- do not use any p\n\n\n\nTesting", "System Req\n\n\n\n\nSystem Analysis\n\n\n\n\nSystem Des    the pattern module will have several function\n        setup() -\nign will make turtle draw quickly\n                    make turtle have a window of 1000 * 800\n        reset() - turtle will erase everything\n        drawRectenglePattern() - will call draw rectangle\n        drawRectangle() - draw a single rectangle\n        drawCirclePatten() -\n        drawSuperPattern() - randomly draw rectangle and circle patterns based on random values\n        drawRandomColor()- do not use any pe\n\n\n\nTesting", "System Req\n\n\n\n\nSystem Analysis\n\n\n\n\nSystem Des    the pattern module will have several function\n        setup() -\nign will make turtle draw quickly\n                    make turtle have a window of 1000 * 800\n        reset() - turtle will erase everything\n        drawRectenglePattern() - will call draw rectangle\n        drawRectangle() - draw a single rectangle\n        drawCirclePatten() -\n        drawSuperPattern() - randomly draw rectangle and circle patterns based on random values\n        drawRandomColor()- do not use any per\n\n\n\nTesting", "System Req\n\n\n\n\nSystem Analysis\n\n\n\n\nSystem Des    the pattern module will have several function\n        setup() -\nign will make turtle draw quickly\n                    make turtle have a window of 1000 * 800\n        reset() - turtle will erase everything\n        drawRectenglePattern() - will call draw rectangle\n        drawRectangle() - draw a single rectangle\n        drawCirclePatten() -\n        drawSuperPattern() - randomly draw rectangle and circle patterns based on random values\n        drawRandomColor()- do not use any pera\n\n\n\nTesting", "System Req\n\n\n\n\nSystem Analysis\n\n\n\n\nSystem Des    the pattern module will have several function\n        setup() -\nign will make turtle draw quickly\n                    make turtle have a window of 1000 * 800\n        reset() - turtle will erase everything\n        drawRectenglePattern() - will call draw rectangle\n        drawRectangle() - draw a single rectangle\n        drawCirclePatten() -\n        drawSuperPattern() - randomly draw rectangle and circle patterns based on random values\n        drawRandomColor()- do not use any peram\n\n\n\nTesting", "System Req\n\n\n\n\nSystem Analysis\n\n\n\n\nSystem Des    the pattern module will have several function\n        setup() -\nign will make turtle draw quickly\n                    make turtle have a window of 1000 * 800\n        reset() - turtle will erase everything\n        drawRectenglePattern() - will call draw rectangle\n        drawRectangle() - draw a single rectangle\n        drawCirclePatten() -\n        drawSuperPattern() - randomly draw rectangle and circle patterns based on random values\n        drawRandomColor()- do not use any perame\n\n\n\nTesting", "System Req\n\n\n\n\nSystem Analysis\n\n\n\n\nSystem Des    the pattern module will have several function\n        setup() -\nign will make turtle draw quickly\n                    make turtle have a window of 1000 * 800\n        reset() - turtle will erase everything\n        drawRectenglePattern() - will call draw rectangle\n        drawRectangle() - draw a single rectangle\n        drawCirclePatten() -\n        drawSuperPattern() - randomly draw rectangle and circle patterns based on random values\n        drawRandomColor()- do not use any peram\n\n\n\nTesting", "System Req\n\n\n\n\nSystem Analysis\n\n\n\n\nSystem Des    the pattern module will have several function\n        setup() -\nign will make turtle draw quickly\n                    make turtle have a window of 1000 * 800\n        reset() - turtle will erase everything\n        drawRectenglePattern() - will call draw rectangle\n        drawRectangle() - draw a single rectangle\n        drawCirclePatten() -\n        drawSuperPattern() - randomly draw rectangle and circle patterns based on random values\n        drawRandomColor()- do not use any pera\n\n\n\nTesting", "System Req\n\n\n\n\nSystem Analysis\n\n\n\n\nSystem Des    the pattern module will have several function\n        setup() -\nign will make turtle draw quickly\n                    make turtle have a window of 1000 * 800\n        reset() - turtle will erase everything\n        drawRectenglePattern() - will call draw rectangle\n        drawRectangle() - draw a single rectangle\n        drawCirclePatten() -\n        drawSuperPattern() - randomly draw rectangle and circle patterns based on random values\n        drawRandomColor()- do not use any per\n\n\n\nTesting", "System Req\n\n\n\n\nSystem Analysis\n\n\n\n\nSystem Des    the pattern module will have several function\n        setup() -\nign will make turtle draw quickly\n                    make turtle have a window of 1000 * 800\n        reset() - turtle will erase everything\n        drawRectenglePattern() - will call draw rectangle\n        drawRectangle() - draw a single rectangle\n        drawCirclePatten() -\n        drawSuperPattern() - randomly draw rectangle and circle patterns based on random values\n        drawRandomColor()- do not use any pera\n\n\n\nTesting", "System Req\n\n\n\n\nSystem Analysis\n\n\n\n\nSystem Des    the pattern module will have several function\n        setup() -\nign will make turtle draw quickly\n                    make turtle have a window of 1000 * 800\n        reset() - turtle will erase everything\n        drawRectenglePattern() - will call draw rectangle\n        drawRectangle() - draw a single rectangle\n        drawCirclePatten() -\n        drawSuperPattern() - randomly draw rectangle and circle patterns based on random values\n        drawRandomColor()- do not use any peram\n\n\n\nTesting", "System Req\n\n\n\n\nSystem Analysis\n\n\n\n\nSystem Des    the pattern module will have several function\n        setup() -\nign will make turtle draw quickly\n                    make turtle have a window of 1000 * 800\n        reset() - turtle will erase everything\n        drawRectenglePattern() - will call draw rectangle\n        drawRectangle() - draw a single rectangle\n        drawCirclePatten() -\n        drawSuperPattern() - randomly draw rectangle and circle patterns based on random values\n        drawRandomColor()- do not use any perame\n\n\n\nTesting", "System Req\n\n\n\n\nSystem Analysis\n\n\n\n\nSystem Des    the pattern module will have several function\n        setup() -\nign will make turtle draw quickly\n                    make turtle have a window of 1000 * 800\n        reset() - turtle will erase everything\n        drawRectenglePattern() - will call draw rectangle\n        drawRectangle() - draw a single rectangle\n        drawCirclePatten() -\n        drawSuperPattern() - randomly draw rectangle and circle patterns based on random values\n        drawRandomColor()- do not use any peramet\n\n\n\nTesting", "System Req\n\n\n\n\nSystem Analysis\n\n\n\n\nSystem Des    the pattern module will have several function\n        setup() -\nign will make turtle draw quickly\n                    make turtle have a window of 1000 * 800\n        reset() - turtle will erase everything\n        drawRectenglePattern() - will call draw rectangle\n        drawRectangle() - draw a single rectangle\n        drawCirclePatten() -\n        drawSuperPattern() - randomly draw rectangle and circle patterns based on random values\n        drawRandomColor()- do not use any peramete\n\n\n\nTesting", "System Req\n\n\n\n\nSystem Analysis\n\n\n\n\nSystem Des    the pattern module will have several function\n        setup() -\nign will make turtle draw quickly\n                    make turtle have a window of 1000 * 800\n        reset() - turtle will erase everything\n        drawRectenglePattern() - will call draw rectangle\n        drawRectangle() - draw a single rectangle\n        drawCirclePatten() -\n        drawSuperPattern() - randomly draw rectangle and circle patterns based on random values\n        drawRandomColor()- do not use any perameter\n\n\n\nTesting", "System Req\n\n\n\n\nSystem Analysis\n\n\n\n\nSystem Des    the pattern module will have several function\n        setup() -\nign will make turtle draw quickly\n                    make turtle have a window of 1000 * 800\n        reset() - turtle will erase everything\n        drawRectenglePattern() - will call draw rectangle\n        drawRectangle() - draw a single rectangle\n        drawCirclePatten() -\n        drawSuperPattern() - randomly draw rectangle and circle patterns based on random values\n        drawRandomColor()- do not use any perameters\n\n\n\nTesting", "System Req\n\n\n\n\nSystem Analysis\n\n\n\n\nSystem Des    the pattern module will have several function\n        setup() -\nign will make turtle draw quickly\n                    make turtle have a window of 1000 * 800\n        reset() - turtle will erase everything\n        drawRectenglePattern() - will call draw rectangle\n        drawRectangle() - draw a single rectangle\n        drawCirclePatten() -\n        drawSuperPattern() - randomly draw rectangle and circle patterns based on random values\n        drawRandomColor()- do not use any perameters a\n\n\n\nTesting", "System Req\n\n\n\n\nSystem Analysis\n\n\n\n\nSystem Des    the pattern module will have several function\n        setup() -\nign will make turtle draw quickly\n                    make turtle have a window of 1000 * 800\n        reset() - turtle will erase everything\n        drawRectenglePattern() - will call draw rectangle\n        drawRectangle() - draw a single rectangle\n        drawCirclePatten() -\n        drawSuperPattern() - randomly draw rectangle and circle patterns based on random values\n        drawRandomColor()- do not use any perameters an\n\n\n\nTesting", "System Req\n\n\n\n\nSystem Analysis\n\n\n\n\nSystem Des    the pattern module will have several function\n        setup() -\nign will make turtle draw quickly\n                    make turtle have a window of 1000 * 800\n        reset() - turtle will erase everything\n        drawRectenglePattern() - will call draw rectangle\n        drawRectangle() - draw a single rectangle\n        drawCirclePatten() -\n        drawSuperPattern() - randomly draw rectangle and circle patterns based on random values\n        drawRandomColor()- do not use any perameters and\n\n\n\nTesting", "System Req\n\n\n\n\nSystem Analysis\n\n\n\n\nSystem Des    the pattern module will have several function\n        setup() -\nign will make turtle draw quickly\n                    make turtle have a window of 1000 * 800\n        reset() - turtle will erase everything\n        drawRectenglePattern() - will call draw rectangle\n        drawRectangle() - draw a single rectangle\n        drawCirclePatten() -\n        drawSuperPattern() - randomly draw rectangle and circle patterns based on random values\n        drawRandomColor()- do not use any perameters and m\n\n\n\nTesting", "System Req\n\n\n\n\nSystem Analysis\n\n\n\n\nSystem Des    the pattern module will have several function\n        setup() -\nign will make turtle draw quickly\n                    make turtle have a window of 1000 * 800\n        reset() - turtle will erase everything\n        drawRectenglePattern() - will call draw rectangle\n        drawRectangle() - draw a single rectangle\n        drawCirclePatten() -\n        drawSuperPattern() - randomly draw rectangle and circle patterns based on random values\n        drawRandomColor()- do not use any perameters and ma\n\n\n\nTesting", "System Req\n\n\n\n\nSystem Analysis\n\n\n\n\nSystem Des    the pattern module will have several function\n        setup() -\nign will make turtle draw quickly\n                    make turtle have a window of 1000 * 800\n        reset() - turtle will erase everything\n        drawRectenglePattern() - will call draw rectangle\n        drawRectangle() - draw a single rectangle\n        drawCirclePatten() -\n        drawSuperPattern() - randomly draw rectangle and circle patterns based on random values\n        drawRandomColor()- do not use any perameters and mak\n\n\n\nTesting", "System Req\n\n\n\n\nSystem Analysis\n\n\n\n\nSystem Des    the pattern module will have several function\n        setup() -\nign will make turtle draw quickly\n                    make turtle have a window of 1000 * 800\n        reset() - turtle will erase everything\n        drawRectenglePattern() - will call draw rectangle\n        drawRectangle() - draw a single rectangle\n        drawCirclePatten() -\n        drawSuperPattern() - randomly draw rectangle and circle patterns based on random values\n        drawRandomColor()- do not use any perameters and make\n\n\n\nTesting", "System Req\n\n\n\n\nSystem Analysis\n\n\n\n\nSystem Des    the pattern module will have several function\n        setup() -\nign will make turtle draw quickly\n                    make turtle have a window of 1000 * 800\n        reset() - turtle will erase everything\n        drawRectenglePattern() - will call draw rectangle\n        drawRectangle() - draw a single rectangle\n        drawCirclePatten() -\n        drawSuperPattern() - randomly draw rectangle and circle patterns based on random values\n        drawRandomColor()- do not use any perameters and make t\n\n\n\nTesting", "System Req\n\n\n\n\nSystem Analysis\n\n\n\n\nSystem Des    the pattern module will have several function\n        setup() -\nign will make turtle draw quickly\n                    make turtle have a window of 1000 * 800\n        reset() - turtle will erase everything\n        drawRectenglePattern() - will call draw rectangle\n        drawRectangle() - draw a single rectangle\n        drawCirclePatten() -\n        drawSuperPattern() - randomly draw rectangle and circle patterns based on random values\n        drawRandomColor()- do not use any perameters and make tu\n\n\n\nTesting", "System Req\n\n\n\n\nSystem Analysis\n\n\n\n\nSystem Des    the pattern module will have several function\n        setup() -\nign will make turtle draw quickly\n                    make turtle have a window of 1000 * 800\n        reset() - turtle will erase everything\n        drawRectenglePattern() - will call draw rectangle\n        drawRectangle() - draw a single rectangle\n        drawCirclePatten() -\n        drawSuperPattern() - randomly draw rectangle and circle patterns based on random values\n        drawRandomColor()- do not use any perameters and make tur\n\n\n\nTesting", "System Req\n\n\n\n\nSystem Analysis\n\n\n\n\nSystem Des    the pattern module will have several function\n        setup() -\nign will make turtle draw quickly\n                    make turtle have a window of 1000 * 800\n        reset() - turtle will erase everything\n        drawRectenglePattern() - will call draw rectangle\n        drawRectangle() - draw a single rectangle\n        drawCirclePatten() -\n        drawSuperPattern() - randomly draw rectangle and circle patterns based on random values\n        drawRandomColor()- do not use any perameters and make turt\n\n\n\nTesting", "System Req\n\n\n\n\nSystem Analysis\n\n\n\n\nSystem Des    the pattern module will have several function\n        setup() -\nign will make turtle draw quickly\n                    make turtle have a window of 1000 * 800\n        reset() - turtle will erase everything\n        drawRectenglePattern() - will call draw rectangle\n        drawRectangle() - draw a single rectangle\n        drawCirclePatten() -\n        drawSuperPattern() - randomly draw rectangle and circle patterns based on random values\n        drawRandomColor()- do not use any perameters and make turtl\n\n\n\nTesting", "System Req\n\n\n\n\nSystem Analysis\n\n\n\n\nSystem Des    the pattern module will have several function\n        setup() -\nign will make turtle draw quickly\n                    make turtle have a window of 1000 * 800\n        reset() - turtle will erase everything\n        drawRectenglePattern() - will call draw rectangle\n        drawRectangle() - draw a single rectangle\n        drawCirclePatten() -\n        drawSuperPattern() - randomly draw rectangle and circle patterns based on random values\n        drawRandomColor()- do not use any perameters and make turtle\n\n\n\nTesting", "System Req\n\n\n\n\nSystem Analysis\n\n\n\n\nSystem Des    the pattern module will have several function\n        setup() -\nign will make turtle draw quickly\n                    make turtle have a window of 1000 * 800\n        reset() - turtle will erase everything\n        drawRectenglePattern() - will call draw rectangle\n        drawRectangle() - draw a single rectangle\n        drawCirclePatten() -\n        drawSuperPattern() - randomly draw rectangle and circle patterns based on random values\n        drawRandomColor()- do not use any perameters and make turtle d\n\n\n\nTesting", "System Req\n\n\n\n\nSystem Analysis\n\n\n\n\nSystem Des    the pattern module will have several function\n        setup() -\nign will make turtle draw quickly\n                    make turtle have a window of 1000 * 800\n        reset() - turtle will erase everything\n        drawRectenglePattern() - will call draw rectangle\n        drawRectangle() - draw a single rectangle\n        drawCirclePatten() -\n        drawSuperPattern() - randomly draw rectangle and circle patterns based on random values\n        drawRandomColor()- do not use any perameters and make turtle dr\n\n\n\nTesting", "System Req\n\n\n\n\nSystem Analysis\n\n\n\n\nSystem Des    the pattern module will have several function\n        setup() -\nign will make turtle draw quickly\n                    make turtle have a window of 1000 * 800\n        reset() - turtle will erase everything\n        drawRectenglePattern() - will call draw rectangle\n        drawRectangle() - draw a single rectangle\n        drawCirclePatten() -\n        drawSuperPattern() - randomly draw rectangle and circle patterns based on random values\n        drawRandomColor()- do not use any perameters and make turtle dra\n\n\n\nTesting", "System Req\n\n\n\n\nSystem Analysis\n\n\n\n\nSystem Des    the pattern module will have several function\n        setup() -\nign will make turtle draw quickly\n                    make turtle have a window of 1000 * 800\n        reset() - turtle will erase everything\n        drawRectenglePattern() - will call draw rectangle\n        drawRectangle() - draw a single rectangle\n        drawCirclePatten() -\n        drawSuperPattern() - randomly draw rectangle and circle patterns based on random values\n        drawRandomColor()- do not use any perameters and make turtle draw\n\n\n\nTesting", "System Req\n\n\n\n\nSystem Analysis\n\n\n\n\nSystem Des    the pattern module will have several function\n        setup() -\nign will make turtle draw quickly\n                    make turtle have a window of 1000 * 800\n        reset() - turtle will erase everything\n        drawRectenglePattern() - will call draw rectangle\n        drawRectangle() - draw a single rectangle\n        drawCirclePatten() -\n        drawSuperPattern() - randomly draw rectangle and circle patterns based on random values\n        drawRandomColor()- do not use any perameters and make turtle draw i\n\n\n\nTesting", "System Req\n\n\n\n\nSystem Analysis\n\n\n\n\nSystem Des    the pattern module will have several function\n        setup() -\nign will make turtle draw quickly\n                    make turtle have a window of 1000 * 800\n        reset() - turtle will erase everything\n        drawRectenglePattern() - will call draw rectangle\n        drawRectangle() - draw a single rectangle\n        drawCirclePatten() -\n        drawSuperPattern() - randomly draw rectangle and circle patterns based on random values\n        drawRandomColor()- do not use any perameters and make turtle draw in\n\n\n\nTesting", "System Req\n\n\n\n\nSystem Analysis\n\n\n\n\nSystem Des    the pattern module will have several function\n        setup() -\nign will make turtle draw quickly\n                    make turtle have a window of 1000 * 800\n        reset() - turtle will erase everything\n        drawRectenglePattern() - will call draw rectangle\n        drawRectangle() - draw a single rectangle\n        drawCirclePatten() -\n        drawSuperPattern() - randomly draw rectangle and circle patterns based on random values\n        drawRandomColor()- do not use any perameters and make turtle draw in 1\n\n\n\nTesting", "System Req\n\n\n\n\nSystem Analysis\n\n\n\n\nSystem Des    the pattern module will have several function\n        setup() -\nign will make turtle draw quickly\n                    make turtle have a window of 1000 * 800\n        reset() - turtle will erase everything\n        drawRectenglePattern() - will call draw rectangle\n        drawRectangle() - draw a single rectangle\n        drawCirclePatten() -\n        drawSuperPattern() - randomly draw rectangle and circle patterns based on random values\n        drawRandomColor()- do not use any perameters and make turtle draw in 1/\n\n\n\nTesting", "System Req\n\n\n\n\nSystem Analysis\n\n\n\n\nSystem Des    the pattern module will have several function\n        setup() -\nign will make turtle draw quickly\n                    make turtle have a window of 1000 * 800\n        reset() - turtle will erase everything\n        drawRectenglePattern() - will call draw rectangle\n        drawRectangle() - draw a single rectangle\n        drawCirclePatten() -\n        drawSuperPattern() - randomly draw rectangle and circle patterns based on random values\n        drawRandomColor()- do not use any perameters and make turtle draw in 1/4\n\n\n\nTesting", "System Req\n\n\n\n\nSystem Analysis\n\n\n\n\nSystem Des    the pattern module will have several function\n        setup() -\nign will make turtle draw quickly\n                    make turtle have a window of 1000 * 800\n        reset() - turtle will erase everything\n        drawRectenglePattern() - will call draw rectangle\n        drawRectangle() - draw a single rectangle\n        drawCirclePatten() -\n        drawSuperPattern() - randomly draw rectangle and circle patterns based on random values\n        drawRandomColor()- do not use any perameters and make turtle draw in 1/4 r\n\n\n\nTesting", "System Req\n\n\n\n\nSystem Analysis\n\n\n\n\nSystem Des    the pattern module will have several function\n        setup() -\nign will make turtle draw quickly\n                    make turtle have a window of 1000 * 800\n        reset() - turtle will erase everything\n        drawRectenglePattern() - will call draw rectangle\n        drawRectangle() - draw a single rectangle\n        drawCirclePatten() -\n        drawSuperPattern() - randomly draw rectangle and circle patterns based on random values\n        drawRandomColor()- do not use any perameters and make turtle draw in 1/4 ra\n\n\n\nTesting", "System Req\n\n\n\n\nSystem Analysis\n\n\n\n\nSystem Des    the pattern module will have several function\n        setup() -\nign will make turtle draw quickly\n                    make turtle have a window of 1000 * 800\n        reset() - turtle will erase everything\n        drawRectenglePattern() - will call draw rectangle\n        drawRectangle() - draw a single rectangle\n        drawCirclePatten() -\n        drawSuperPattern() - randomly draw rectangle and circle patterns based on random values\n        drawRandomColor()- do not use any perameters and make turtle draw in 1/4 ran\n\n\n\nTesting", "System Req\n\n\n\n\nSystem Analysis\n\n\n\n\nSystem Des    the pattern module will have several function\n        setup() -\nign will make turtle draw quickly\n                    make turtle have a window of 1000 * 800\n        reset() - turtle will erase everything\n        drawRectenglePattern() - will call draw rectangle\n        drawRectangle() - draw a single rectangle\n        drawCirclePatten() -\n        drawSuperPattern() - randomly draw rectangle and circle patterns based on random values\n        drawRandomColor()- do not use any perameters and make turtle draw in 1/4 rand\n\n\n\nTesting", "System Req\n\n\n\n\nSystem Analysis\n\n\n\n\nSystem Des    the pattern module will have several function\n        setup() -\nign will make turtle draw quickly\n                    make turtle have a window of 1000 * 800\n        reset() - turtle will erase everything\n        drawRectenglePattern() - will call draw rectangle\n        drawRectangle() - draw a single rectangle\n        drawCirclePatten() -\n        drawSuperPattern() - randomly draw rectangle and circle patterns based on random values\n        drawRandomColor()- do not use any perameters and make turtle draw in 1/4 rando\n\n\n\nTesting", "System Req\n\n\n\n\nSystem Analysis\n\n\n\n\nSystem Des    the pattern module will have several function\n        setup() -\nign will make turtle draw quickly\n                    make turtle have a window of 1000 * 800\n        reset() - turtle will erase everything\n        drawRectenglePattern() - will call draw rectangle\n        drawRectangle() - draw a single rectangle\n        drawCirclePatten() -\n        drawSuperPattern() - randomly draw rectangle and circle patterns based on random values\n        drawRandomColor()- do not use any perameters and make turtle draw in 1/4 random\n\n\n\nTesting", "System Req\n\n\n\n\nSystem Analysis\n\n\n\n\nSystem Des    the pattern module will have several function\n        setup() -\nign will make turtle draw quickly\n                    make turtle have a window of 1000 * 800\n        reset() - turtle will erase everything\n        drawRectenglePattern() - will call draw rectangle\n        drawRectangle() - draw a single rectangle\n        drawCirclePatten() -\n        drawSuperPattern() - randomly draw rectangle and circle patterns based on random values\n        drawRandomColor()- do not use any perameters and make turtle draw in 1/4 random c\n\n\n\nTesting", "System Req\n\n\n\n\nSystem Analysis\n\n\n\n\nSystem Des    the pattern module will have several function\n        setup() -\nign will make turtle draw quickly\n                    make turtle have a window of 1000 * 800\n        reset() - turtle will erase everything\n        drawRectenglePattern() - will call draw rectangle\n        drawRectangle() - draw a single rectangle\n        drawCirclePatten() -\n        drawSuperPattern() - randomly draw rectangle and circle patterns based on random values\n        drawRandomColor()- do not use any perameters and make turtle draw in 1/4 random co\n\n\n\nTesting", "System Req\n\n\n\n\nSystem Analysis\n\n\n\n\nSystem Des    the pattern module will have several function\n        setup() -\nign will make turtle draw quickly\n                    make turtle have a window of 1000 * 800\n        reset() - turtle will erase everything\n        drawRectenglePattern() - will call draw rectangle\n        drawRectangle() - draw a single rectangle\n        drawCirclePatten() -\n        drawSuperPattern() - randomly draw rectangle and circle patterns based on random values\n        drawRandomColor()- do not use any perameters and make turtle draw in 1/4 random col\n\n\n\nTesting", "System Req\n\n\n\n\nSystem Analysis\n\n\n\n\nSystem Des    the pattern module will have several function\n        setup() -\nign will make turtle draw quickly\n                    make turtle have a window of 1000 * 800\n        reset() - turtle will erase everything\n        drawRectenglePattern() - will call draw rectangle\n        drawRectangle() - draw a single rectangle\n        drawCirclePatten() -\n        drawSuperPattern() - randomly draw rectangle and circle patterns based on random values\n        drawRandomColor()- do not use any perameters and make turtle draw in 1/4 random colo\n\n\n\nTesting", "System Req\n\n\n\n\nSystem Analysis\n\n\n\n\nSystem Des    the pattern module will have several function\n        setup() -\nign will make turtle draw quickly\n                    make turtle have a window of 1000 * 800\n        reset() - turtle will erase everything\n        drawRectenglePattern() - will call draw rectangle\n        drawRectangle() - draw a single rectangle\n        drawCirclePatten() -\n        drawSuperPattern() - randomly draw rectangle and circle patterns based on random values\n        drawRandomColor()- do not use any perameters and make turtle draw in 1/4 random color\n\n\n\nTesting", "System Req\n\n\n\n\nSystem Analysis\n\n\n\n\nSystem Des    the pattern module will have several function\n        setup() -\nign will make turtle draw quickly\n                    make turtle have a window of 1000 * 800\n        reset() - turtle will erase everything\n        drawRectenglePattern() - will call draw rectangle\n        drawRectangle() - draw a single rectangle\n        drawCirclePatten() -\n        drawSuperPattern() - randomly draw rectangle and circle patterns based on random values\n        drawRandomColor()- do not use any perameters and make turtle draw in 1/4 random colors\n\n\n\nTesting", "System Req\n\n\n\n\nSystem Analysis\n\n\n\n\nSystem Des    the pattern module will have several function\n        setup() -\nign will make turtle draw quickly\n                    make turtle have a window of 1000 * 800\n        reset() - turtle will erase everything\n        drawRectenglePattern() - will call draw rectangle\n        drawRectangle() - draw a single rectangle\n        drawCirclePatten() -\n        drawSuperPattern() - randomly draw rectangle and circle patterns based on random values\n        drawRandomColor()- do not use any perameters and make turtle draw in 1/4 random colors\n        d\n\n\n\nTesting", "System Req\n\n\n\n\nSystem Analysis\n\n\n\n\nSystem Des    the pattern module will have several function\n        setup() -\nign will make turtle draw quickly\n                    make turtle have a window of 1000 * 800\n        reset() - turtle will erase everything\n        drawRectenglePattern() - will call draw rectangle\n        drawRectangle() - draw a single rectangle\n        drawCirclePatten() -\n        drawSuperPattern() - randomly draw rectangle and circle patterns based on random values\n        drawRandomColor()- do not use any perameters and make turtle draw in 1/4 random colors\n        do\n\n\n\nTesting", "System Req\n\n\n\n\nSystem Analysis\n\n\n\n\nSystem Des    the pattern module will have several function\n        setup() -\nign will make turtle draw quickly\n                    make turtle have a window of 1000 * 800\n        reset() - turtle will erase everything\n        drawRectenglePattern() - will call draw rectangle\n        drawRectangle() - draw a single rectangle\n        drawCirclePatten() -\n        drawSuperPattern() - randomly draw rectangle and circle patterns based on random values\n        drawRandomColor()- do not use any perameters and make turtle draw in 1/4 random colors\n        don\n\n\n\nTesting", "System Req\n\n\n\n\nSystem Analysis\n\n\n\n\nSystem Des    the pattern module will have several function\n        setup() -\nign will make turtle draw quickly\n                    make turtle have a window of 1000 * 800\n        reset() - turtle will erase everything\n        drawRectenglePattern() - will call draw rectangle\n        drawRectangle() - draw a single rectangle\n        drawCirclePatten() -\n        drawSuperPattern() - randomly draw rectangle and circle patterns based on random values\n        drawRandomColor()- do not use any perameters and make turtle draw in 1/4 random colors\n        done\n\n\n\nTesting", "System Req\n\n\n\n\nSystem Analysis\n\n\n\n\nSystem Des    the pattern module will have several function\n        setup() -\nign will make turtle draw quickly\n                    make turtle have a window of 1000 * 800\n        reset() - turtle will erase everything\n        drawRectenglePattern() - will call draw rectangle\n        drawRectangle() - draw a single rectangle\n        drawCirclePatten() -\n        drawSuperPattern() - randomly draw rectangle and circle patterns based on random values\n        drawRandomColor()- do not use any perameters and make turtle draw in 1/4 random colors\n        done(\n\n\n\nTesting", "System Req\n\n\n\n\nSystem Analysis\n\n\n\n\nSystem Des    the pattern module will have several function\n        setup() -\nign will make turtle draw quickly\n                    make turtle have a window of 1000 * 800\n        reset() - turtle will erase everything\n        drawRectenglePattern() - will call draw rectangle\n        drawRectangle() - draw a single rectangle\n        drawCirclePatten() -\n        drawSuperPattern() - randomly draw rectangle and circle patterns based on random values\n        drawRandomColor()- do not use any perameters and make turtle draw in 1/4 random colors\n        done()\n\n\n\nTesting", "System Req\n\n\n\n\nSystem Analysis\n\n\n\n\nSystem Des    the pattern module will have several function\n        setup() -\nign will make turtle draw quickly\n                    make turtle have a window of 1000 * 800\n        reset() - turtle will erase everything\n        drawRectenglePattern() - will call draw rectangle\n        drawRectangle() - draw a single rectangle\n        drawCirclePatten() -\n        drawSuperPattern() - randomly draw rectangle and circle patterns based on random values\n        drawRandomColor()- do not use any perameters and make turtle draw in 1/4 random colors\n        done()-\n\n\n\nTesting", "System Req\n\n\n\n\nSystem Analysis\n\n\n\n\nSystem Des    the pattern module will have several function\n        setup() -\nign will make turtle draw quickly\n                    make turtle have a window of 1000 * 800\n        reset() - turtle will erase everything\n        drawRectenglePattern() - will call draw rectangle\n        drawRectangle() - draw a single rectangle\n        drawCirclePatten() -\n        drawSuperPattern() - randomly draw rectangle and circle patterns based on random values\n        drawRandomColor()- do not use any perameters and make turtle draw in 1/4 random colors\n        done()-c\n\n\n\nTesting", "System Req\n\n\n\n\nSystem Analysis\n\n\n\n\nSystem Des    the pattern module will have several function\n        setup() -\nign will make turtle draw quickly\n                    make turtle have a window of 1000 * 800\n        reset() - turtle will erase everything\n        drawRectenglePattern() - will call draw rectangle\n        drawRectangle() - draw a single rectangle\n        drawCirclePatten() -\n        drawSuperPattern() - randomly draw rectangle and circle patterns based on random values\n        drawRandomColor()- do not use any perameters and make turtle draw in 1/4 random colors\n        done()-ca\n\n\n\nTesting", "System Req\n\n\n\n\nSystem Analysis\n\n\n\n\nSystem Des    the pattern module will have several function\n        setup() -\nign will make turtle draw quickly\n                    make turtle have a window of 1000 * 800\n        reset() - turtle will erase everything\n        drawRectenglePattern() - will call draw rectangle\n        drawRectangle() - draw a single rectangle\n        drawCirclePatten() -\n        drawSuperPattern() - randomly draw rectangle and circle patterns based on random values\n        drawRandomColor()- do not use any perameters and make turtle draw in 1/4 random colors\n        done()-cal\n\n\n\nTesting", "System Req\n\n\n\n\nSystem Analysis\n\n\n\n\nSystem Des    the pattern module will have several function\n        setup() -\nign will make turtle draw quickly\n                    make turtle have a window of 1000 * 800\n        reset() - turtle will erase everything\n        drawRectenglePattern() - will call draw rectangle\n        drawRectangle() - draw a single rectangle\n        drawCirclePatten() -\n        drawSuperPattern() - randomly draw rectangle and circle patterns based on random values\n        drawRandomColor()- do not use any perameters and make turtle draw in 1/4 random colors\n        done()-call\n\n\n\nTesting", "System Req\n\n\n\n\nSystem Analysis\n\n\n\n\nSystem Des    the pattern module will have several function\n        setup() -\nign will make turtle draw quickly\n                    make turtle have a window of 1000 * 800\n        reset() - turtle will erase everything\n        drawRectenglePattern() - will call draw rectangle\n        drawRectangle() - draw a single rectangle\n        drawCirclePatten() -\n        drawSuperPattern() - randomly draw rectangle and circle patterns based on random values\n        drawRandomColor()- do not use any perameters and make turtle draw in 1/4 random colors\n        done()-calle\n\n\n\nTesting", "System Req\n\n\n\n\nSystem Analysis\n\n\n\n\nSystem Des    the pattern module will have several function\n        setup() -\nign will make turtle draw quickly\n                    make turtle have a window of 1000 * 800\n        reset() - turtle will erase everything\n        drawRectenglePattern() - will call draw rectangle\n        drawRectangle() - draw a single rectangle\n        drawCirclePatten() -\n        drawSuperPattern() - randomly draw rectangle and circle patterns based on random values\n        drawRandomColor()- do not use any perameters and make turtle draw in 1/4 random colors\n        done()-called\n\n\n\nTesting", "System Req\n\n\n\n\nSystem Analysis\n\n\n\n\nSystem Des    the pattern module will have several function\n        setup() -\nign will make turtle draw quickly\n                    make turtle have a window of 1000 * 800\n        reset() - turtle will erase everything\n        drawRectenglePattern() - will call draw rectangle\n        drawRectangle() - draw a single rectangle\n        drawCirclePatten() -\n        drawSuperPattern() - randomly draw rectangle and circle patterns based on random values\n        drawRandomColor()- do not use any perameters and make turtle draw in 1/4 random colors\n        done()-called w\n\n\n\nTesting", "System Req\n\n\n\n\nSystem Analysis\n\n\n\n\nSystem Des    the pattern module will have several function\n        setup() -\nign will make turtle draw quickly\n                    make turtle have a window of 1000 * 800\n        reset() - turtle will erase everything\n        drawRectenglePattern() - will call draw rectangle\n        drawRectangle() - draw a single rectangle\n        drawCirclePatten() -\n        drawSuperPattern() - randomly draw rectangle and circle patterns based on random values\n        drawRandomColor()- do not use any perameters and make turtle draw in 1/4 random colors\n        done()-called wh\n\n\n\nTesting", "System Req\n\n\n\n\nSystem Analysis\n\n\n\n\nSystem Des    the pattern module will have several function\n        setup() -\nign will make turtle draw quickly\n                    make turtle have a window of 1000 * 800\n        reset() - turtle will erase everything\n        drawRectenglePattern() - will call draw rectangle\n        drawRectangle() - draw a single rectangle\n        drawCirclePatten() -\n        drawSuperPattern() - randomly draw rectangle and circle patterns based on random values\n        drawRandomColor()- do not use any perameters and make turtle draw in 1/4 random colors\n        done()-called whe\n\n\n\nTesting", "System Req\n\n\n\n\nSystem Analysis\n\n\n\n\nSystem Des    the pattern module will have several function\n        setup() -\nign will make turtle draw quickly\n                    make turtle have a window of 1000 * 800\n        reset() - turtle will erase everything\n        drawRectenglePattern() - will call draw rectangle\n        drawRectangle() - draw a single rectangle\n        drawCirclePatten() -\n        drawSuperPattern() - randomly draw rectangle and circle patterns based on random values\n        drawRandomColor()- do not use any perameters and make turtle draw in 1/4 random colors\n        done()-called when\n\n\n\nTesting", "System Req\n\n\n\n\nSystem Analysis\n\n\n\n\nSystem Des    the pattern module will have several function\n        setup() -\nign will make turtle draw quickly\n                    make turtle have a window of 1000 * 800\n        reset() - turtle will erase everything\n        drawRectenglePattern() - will call draw rectangle\n        drawRectangle() - draw a single rectangle\n        drawCirclePatten() -\n        drawSuperPattern() - randomly draw rectangle and circle patterns based on random values\n        drawRandomColor()- do not use any perameters and make turtle draw in 1/4 random colors\n        done()-called when u\n\n\n\nTesting", "System Req\n\n\n\n\nSystem Analysis\n\n\n\n\nSystem Des    the pattern module will have several function\n        setup() -\nign will make turtle draw quickly\n                    make turtle have a window of 1000 * 800\n        reset() - turtle will erase everything\n        drawRectenglePattern() - will call draw rectangle\n        drawRectangle() - draw a single rectangle\n        drawCirclePatten() -\n        drawSuperPattern() - randomly draw rectangle and circle patterns based on random values\n        drawRandomColor()- do not use any perameters and make turtle draw in 1/4 random colors\n        done()-called when us\n\n\n\nTesting", "System Req\n\n\n\n\nSystem Analysis\n\n\n\n\nSystem Des    the pattern module will have several function\n        setup() -\nign will make turtle draw quickly\n                    make turtle have a window of 1000 * 800\n        reset() - turtle will erase everything\n        drawRectenglePattern() - will call draw rectangle\n        drawRectangle() - draw a single rectangle\n        drawCirclePatten() -\n        drawSuperPattern() - randomly draw rectangle and circle patterns based on random values\n        drawRandomColor()- do not use any perameters and make turtle draw in 1/4 random colors\n        done()-called when use\n\n\n\nTesting", "System Req\n\n\n\n\nSystem Analysis\n\n\n\n\nSystem Des    the pattern module will have several function\n        setup() -\nign will make turtle draw quickly\n                    make turtle have a window of 1000 * 800\n        reset() - turtle will erase everything\n        drawRectenglePattern() - will call draw rectangle\n        drawRectangle() - draw a single rectangle\n        drawCirclePatten() -\n        drawSuperPattern() - randomly draw rectangle and circle patterns based on random values\n        drawRandomColor()- do not use any perameters and make turtle draw in 1/4 random colors\n        done()-called when user\n\n\n\nTesting", "System Req\n\n\n\n\nSystem Analysis\n\n\n\n\nSystem Des    the pattern module will have several function\n        setup() -\nign will make turtle draw quickly\n                    make turtle have a window of 1000 * 800\n        reset() - turtle will erase everything\n        drawRectenglePattern() - will call draw rectangle\n        drawRectangle() - draw a single rectangle\n        drawCirclePatten() -\n        drawSuperPattern() - randomly draw rectangle and circle patterns based on random values\n        drawRandomColor()- do not use any perameters and make turtle draw in 1/4 random colors\n        done()-called when user q\n\n\n\nTesting", "System Req\n\n\n\n\nSystem Analysis\n\n\n\n\nSystem Des    the pattern module will have several function\n        setup() -\nign will make turtle draw quickly\n                    make turtle have a window of 1000 * 800\n        reset() - turtle will erase everything\n        drawRectenglePattern() - will call draw rectangle\n        drawRectangle() - draw a single rectangle\n        drawCirclePatten() -\n        drawSuperPattern() - randomly draw rectangle and circle patterns based on random values\n        drawRandomColor()- do not use any perameters and make turtle draw in 1/4 random colors\n        done()-called when user qu\n\n\n\nTesting", "System Req\n\n\n\n\nSystem Analysis\n\n\n\n\nSystem Des    the pattern module will have several function\n        setup() -\nign will make turtle draw quickly\n                    make turtle have a window of 1000 * 800\n        reset() - turtle will erase everything\n        drawRectenglePattern() - will call draw rectangle\n        drawRectangle() - draw a single rectangle\n        drawCirclePatten() -\n        drawSuperPattern() - randomly draw rectangle and circle patterns based on random values\n        drawRandomColor()- do not use any perameters and make turtle draw in 1/4 random colors\n        done()-called when user qui\n\n\n\nTesting", "System Req\n\n\n\n\nSystem Analysis\n\n\n\n\nSystem Des    the pattern module will have several function\n        setup() -\nign will make turtle draw quickly\n                    make turtle have a window of 1000 * 800\n        reset() - turtle will erase everything\n        drawRectenglePattern() - will call draw rectangle\n        drawRectangle() - draw a single rectangle\n        drawCirclePatten() -\n        drawSuperPattern() - randomly draw rectangle and circle patterns based on random values\n        drawRandomColor()- do not use any perameters and make turtle draw in 1/4 random colors\n        done()-called when user quic\n\n\n\nTesting", "System Req\n\n\n\n\nSystem Analysis\n\n\n\n\nSystem Des    the pattern module will have several function\n        setup() -\nign will make turtle draw quickly\n                    make turtle have a window of 1000 * 800\n        reset() - turtle will erase everything\n        drawRectenglePattern() - will call draw rectangle\n        drawRectangle() - draw a single rectangle\n        drawCirclePatten() -\n        drawSuperPattern() - randomly draw rectangle and circle patterns based on random values\n        drawRandomColor()- do not use any perameters and make turtle draw in 1/4 random colors\n        done()-called when user quick\n\n\n\nTesting", "System Req\n\n\n\n\nSystem Analysis\n\n\n\n\nSystem Des    the pattern module will have several function\n        setup() -\nign will make turtle draw quickly\n                    make turtle have a window of 1000 * 800\n        reset() - turtle will erase everything\n        drawRectenglePattern() - will call draw rectangle\n        drawRectangle() - draw a single rectangle\n        drawCirclePatten() -\n        drawSuperPattern() - randomly draw rectangle and circle patterns based on random values\n        drawRandomColor()- do not use any perameters and make turtle draw in 1/4 random colors\n        done()-called when user quic\n\n\n\nTesting", "System Req\n\n\n\n\nSystem Analysis\n\n\n\n\nSystem Des    the pattern module will have several function\n        setup() -\nign will make turtle draw quickly\n                    make turtle have a window of 1000 * 800\n        reset() - turtle will erase everything\n        drawRectenglePattern() - will call draw rectangle\n        drawRectangle() - draw a single rectangle\n        drawCirclePatten() -\n        drawSuperPattern() - randomly draw rectangle and circle patterns based on random values\n        drawRandomColor()- do not use any perameters and make turtle draw in 1/4 random colors\n        done()-called when user qui\n\n\n\nTesting", "System Req\n\n\n\n\nSystem Analysis\n\n\n\n\nSystem Des    the pattern module will have several function\n        setup() -\nign will make turtle draw quickly\n                    make turtle have a window of 1000 * 800\n        reset() - turtle will erase everything\n        drawRectenglePattern() - will call draw rectangle\n        drawRectangle() - draw a single rectangle\n        drawCirclePatten() -\n        drawSuperPattern() - randomly draw rectangle and circle patterns based on random values\n        drawRandomColor()- do not use any perameters and make turtle draw in 1/4 random colors\n        done()-called when user quit\n\n\n\nTesting", "System Req\n\n\n\n\nSystem Analysis\n\n\n\n\nSystem Des    the pattern module will have several function\n        setup() -\nign will make turtle draw quickly\n                    make turtle have a window of 1000 * 800\n        reset() - turtle will erase everything\n        drawRectenglePattern() - will call draw rectangle\n        drawRectangle() - draw a single rectangle\n        drawCirclePatten() -\n        drawSuperPattern() - randomly draw rectangle and circle patterns based on random values\n        drawRandomColor()- do not use any perameters and make turtle draw in 1/4 random colors\n        done()-called when user quits\n\n\n\nTesting", "System Req\n\n\n\n\nSystem Analysis\n\n\n\n\nSystem Des    the pattern module will have several function\n        setup() -\nign will make turtle draw quickly\n                    make turtle have a window of 1000 * 800\n        reset() - turtle will erase everything\n        drawRectenglePattern() - will call draw rectangle\n        drawRectangle() - draw a single rectangle\n        drawCirclePatten() -\n        drawSuperPattern() - randomly draw rectangle and circle patterns based on random values\n        drawRandomColor()- do not use any perameters and make turtle draw in 1/4 random colors\n        done()-called when user quits \n\n\n\nTesting", "System Req\n\n\n\n\nSystem Analysis\n\n\n\n\nSystem Des    the pattern module will have several function\n        setup() -\nign will make turtle draw quickly\n                    make turtle have a window of 1000 * 800\n        reset() - turtle will erase everything\n        drawRectenglePattern() - will call draw rectangle\n        drawRectangle() - draw a single rectangle\n        drawCirclePatten() -\n        drawSuperPattern() - randomly draw rectangle and circle patterns based on random values\n        drawRandomColor()- do not use any perameters and make turtle draw in 1/4 random colors\n        done()-called when user quits\n\n\n\nTesting", "System Req\n\n\n\n\nSystem Analysis\n\n\n\n\nSystem Des    the pattern module will have several function\n        setup() -\nign will make turtle draw quickly\n                    make turtle have a window of 1000 * 800\n        reset() - turtle will erase everything\n        drawRectenglePattern() - will call draw rectangle\n        drawRectangle() - draw a single rectangle\n        drawCirclePatten() -\n        drawSuperPattern() - randomly draw rectangle and circle patterns based on random values\n        drawRandomColor()- do not use any perameters and make turtle draw in 1/4 random colors\n        done()-called when user quits,\n\n\n\nTesting", "System Req\n\n\n\n\nSystem Analysis\n\n\n\n\nSystem Des    the pattern module will have several function\n        setup() -\nign will make turtle draw quickly\n                    make turtle have a window of 1000 * 800\n        reset() - turtle will erase everything\n        drawRectenglePattern() - will call draw rectangle\n        drawRectangle() - draw a single rectangle\n        drawCirclePatten() -\n        drawSuperPattern() - randomly draw rectangle and circle patterns based on random values\n        drawRandomColor()- do not use any perameters and make turtle draw in 1/4 random colors\n        done()-called when user quits, k\n\n\n\nTesting", "System Req\n\n\n\n\nSystem Analysis\n\n\n\n\nSystem Des    the pattern module will have several function\n        setup() -\nign will make turtle draw quickly\n                    make turtle have a window of 1000 * 800\n        reset() - turtle will erase everything\n        drawRectenglePattern() - will call draw rectangle\n        drawRectangle() - draw a single rectangle\n        drawCirclePatten() -\n        drawSuperPattern() - randomly draw rectangle and circle patterns based on random values\n        drawRandomColor()- do not use any perameters and make turtle draw in 1/4 random colors\n        done()-called when user quits, ke\n\n\n\nTesting", "System Req\n\n\n\n\nSystem Analysis\n\n\n\n\nSystem Des    the pattern module will have several function\n        setup() -\nign will make turtle draw quickly\n                    make turtle have a window of 1000 * 800\n        reset() - turtle will erase everything\n        drawRectenglePattern() - will call draw rectangle\n        drawRectangle() - draw a single rectangle\n        drawCirclePatten() -\n        drawSuperPattern() - randomly draw rectangle and circle patterns based on random values\n        drawRandomColor()- do not use any perameters and make turtle draw in 1/4 random colors\n        done()-called when user quits, kee\n\n\n\nTesting", "System Req\n\n\n\n\nSystem Analysis\n\n\n\n\nSystem Des    the pattern module will have several function\n        setup() -\nign will make turtle draw quickly\n                    make turtle have a window of 1000 * 800\n        reset() - turtle will erase everything\n        drawRectenglePattern() - will call draw rectangle\n        drawRectangle() - draw a single rectangle\n        drawCirclePatten() -\n        drawSuperPattern() - randomly draw rectangle and circle patterns based on random values\n        drawRandomColor()- do not use any perameters and make turtle draw in 1/4 random colors\n        done()-called when user quits, keep\n\n\n\nTesting", "System Req\n\n\n\n\nSystem Analysis\n\n\n\n\nSystem Des    the pattern module will have several function\n        setup() -\nign will make turtle draw quickly\n                    make turtle have a window of 1000 * 800\n        reset() - turtle will erase everything\n        drawRectenglePattern() - will call draw rectangle\n        drawRectangle() - draw a single rectangle\n        drawCirclePatten() -\n        drawSuperPattern() - randomly draw rectangle and circle patterns based on random values\n        drawRandomColor()- do not use any perameters and make turtle draw in 1/4 random colors\n        done()-called when user quits, keeps\n\n\n\nTesting", "System Req\n\n\n\n\nSystem Analysis\n\n\n\n\nSystem Des    the pattern module will have several function\n        setup() -\nign will make turtle draw quickly\n                    make turtle have a window of 1000 * 800\n        reset() - turtle will erase everything\n        drawRectenglePattern() - will call draw rectangle\n        drawRectangle() - draw a single rectangle\n        drawCirclePatten() -\n        drawSuperPattern() - randomly draw rectangle and circle patterns based on random values\n        drawRandomColor()- do not use any perameters and make turtle draw in 1/4 random colors\n        done()-called when user quits, keeps w\n\n\n\nTesting", "System Req\n\n\n\n\nSystem Analysis\n\n\n\n\nSystem Des    the pattern module will have several function\n        setup() -\nign will make turtle draw quickly\n                    make turtle have a window of 1000 * 800\n        reset() - turtle will erase everything\n        drawRectenglePattern() - will call draw rectangle\n        drawRectangle() - draw a single rectangle\n        drawCirclePatten() -\n        drawSuperPattern() - randomly draw rectangle and circle patterns based on random values\n        drawRandomColor()- do not use any perameters and make turtle draw in 1/4 random colors\n        done()-called when user quits, keeps wi\n\n\n\nTesting", "System Req\n\n\n\n\nSystem Analysis\n\n\n\n\nSystem Des    the pattern module will have several function\n        setup() -\nign will make turtle draw quickly\n                    make turtle have a window of 1000 * 800\n        reset() - turtle will erase everything\n        drawRectenglePattern() - will call draw rectangle\n        drawRectangle() - draw a single rectangle\n        drawCirclePatten() -\n        drawSuperPattern() - randomly draw rectangle and circle patterns based on random values\n        drawRandomColor()- do not use any perameters and make turtle draw in 1/4 random colors\n        done()-called when user quits, keeps win\n\n\n\nTesting", "System Req\n\n\n\n\nSystem Analysis\n\n\n\n\nSystem Des    the pattern module will have several function\n        setup() -\nign will make turtle draw quickly\n                    make turtle have a window of 1000 * 800\n        reset() - turtle will erase everything\n        drawRectenglePattern() - will call draw rectangle\n        drawRectangle() - draw a single rectangle\n        drawCirclePatten() -\n        drawSuperPattern() - randomly draw rectangle and circle patterns based on random values\n        drawRandomColor()- do not use any perameters and make turtle draw in 1/4 random colors\n        done()-called when user quits, keeps wind\n\n\n\nTesting", "System Req\n\n\n\n\nSystem Analysis\n\n\n\n\nSystem Des    the pattern module will have several function\n        setup() -\nign will make turtle draw quickly\n                    make turtle have a window of 1000 * 800\n        reset() - turtle will erase everything\n        drawRectenglePattern() - will call draw rectangle\n        drawRectangle() - draw a single rectangle\n        drawCirclePatten() -\n        drawSuperPattern() - randomly draw rectangle and circle patterns based on random values\n        drawRandomColor()- do not use any perameters and make turtle draw in 1/4 random colors\n        done()-called when user quits, keeps windo\n\n\n\nTesting", "System Req\n\n\n\n\nSystem Analysis\n\n\n\n\nSystem Des    the pattern module will have several function\n        setup() -\nign will make turtle draw quickly\n                    make turtle have a window of 1000 * 800\n        reset() - turtle will erase everything\n        drawRectenglePattern() - will call draw rectangle\n        drawRectangle() - draw a single rectangle\n        drawCirclePatten() -\n        drawSuperPattern() - randomly draw rectangle and circle patterns based on random values\n        drawRandomColor()- do not use any perameters and make turtle draw in 1/4 random colors\n        done()-called when user quits, keeps window\n\n\n\nTesting", "System Req\n\n\n\n\nSystem Analysis\n\n\n\n\nSystem Des    the pattern module will have several function\n        setup() -\nign will make turtle draw quickly\n                    make turtle have a window of 1000 * 800\n        reset() - turtle will erase everything\n        drawRectenglePattern() - will call draw rectangle\n        drawRectangle() - draw a single rectangle\n        drawCirclePatten() -\n        drawSuperPattern() - randomly draw rectangle and circle patterns based on random values\n        drawRandomColor()- do not use any perameters and make turtle draw in 1/4 random colors\n        done()-called when user quits, keeps window o\n\n\n\nTesting", "System Req\n\n\n\n\nSystem Analysis\n\n\n\n\nSystem Des    the pattern module will have several function\n        setup() -\nign will make turtle draw quickly\n                    make turtle have a window of 1000 * 800\n        reset() - turtle will erase everything\n        drawRectenglePattern() - will call draw rectangle\n        drawRectangle() - draw a single rectangle\n        drawCirclePatten() -\n        drawSuperPattern() - randomly draw rectangle and circle patterns based on random values\n        drawRandomColor()- do not use any perameters and make turtle draw in 1/4 random colors\n        done()-called when user quits, keeps window op\n\n\n\nTesting", "System Req\n\n\n\n\nSystem Analysis\n\n\n\n\nSystem Des    the pattern module will have several function\n        setup() -\nign will make turtle draw quickly\n                    make turtle have a window of 1000 * 800\n        reset() - turtle will erase everything\n        drawRectenglePattern() - will call draw rectangle\n        drawRectangle() - draw a single rectangle\n        drawCirclePatten() -\n        drawSuperPattern() - randomly draw rectangle and circle patterns based on random values\n        drawRandomColor()- do not use any perameters and make turtle draw in 1/4 random colors\n        done()-called when user quits, keeps window ope\n\n\n\nTesting", "System Req\n\n\n\n\nSystem Analysis\n\n\n\n\nSystem Des    the pattern module will have several function\n        setup() -\nign will make turtle draw quickly\n                    make turtle have a window of 1000 * 800\n        reset() - turtle will erase everything\n        drawRectenglePattern() - will call draw rectangle\n        drawRectangle() - draw a single rectangle\n        drawCirclePatten() -\n        drawSuperPattern() - randomly draw rectangle and circle patterns based on random values\n        drawRandomColor()- do not use any perameters and make turtle draw in 1/4 random colors\n        done()-called when user quits, keeps window open\n\n\n\nTesting", "System Req\n\n\n\n\nSystem Analysis\n\n\n\n\nSystem Des    the pattern module will have several function\n        setup() -\nign will make turtle draw quickly\n                    make turtle have a window of 1000 * 800\n        reset() - turtle will erase everything\n        drawRectenglePattern() - will call draw rectangle\n                                \n        drawRectangle() - draw a single rectangle\n        drawCirclePatten() -\n        drawSuperPattern() - randomly draw rectangle and circle patterns based on random values\n        drawRandomColor()- do not use any perameters and make turtle draw in 1/4 random colors\n        done()-called when user quits, keeps window open\n\n\n\nTesting", "System Req\n\n\n\n\nSystem Analysis\n\n\n\n\nSystem Des    the pattern module will have several function\n        setup() -\nign will make turtle draw quickly\n                    make turtle have a window of 1000 * 800\n        reset() - turtle will erase everything\n        drawRectenglePattern() - will call draw rectangle\n                                c\n        drawRectangle() - draw a single rectangle\n        drawCirclePatten() -\n        drawSuperPattern() - randomly draw rectangle and circle patterns based on random values\n        drawRandomColor()- do not use any perameters and make turtle draw in 1/4 random colors\n        done()-called when user quits, keeps window open\n\n\n\nTesting", "System Req\n\n\n\n\nSystem Analysis\n\n\n\n\nSystem Des    the pattern module will have several function\n        setup() -\nign will make turtle draw quickly\n                    make turtle have a window of 1000 * 800\n        reset() - turtle will erase everything\n        drawRectenglePattern() - will call draw rectangle\n                                ce\n        drawRectangle() - draw a single rectangle\n        drawCirclePatten() -\n        drawSuperPattern() - randomly draw rectangle and circle patterns based on random values\n        drawRandomColor()- do not use any perameters and make turtle draw in 1/4 random colors\n        done()-called when user quits, keeps window open\n\n\n\nTesting", "System Req\n\n\n\n\nSystem Analysis\n\n\n\n\nSystem Des    the pattern module will have several function\n        setup() -\nign will make turtle draw quickly\n                    make turtle have a window of 1000 * 800\n        reset() - turtle will erase everything\n        drawRectenglePattern() - will call draw rectangle\n                                cen\n        drawRectangle() - draw a single rectangle\n        drawCirclePatten() -\n        drawSuperPattern() - randomly draw rectangle and circle patterns based on random values\n        drawRandomColor()- do not use any perameters and make turtle draw in 1/4 random colors\n        done()-called when user quits, keeps window open\n\n\n\nTesting", "System Req\n\n\n\n\nSystem Analysis\n\n\n\n\nSystem Des    the pattern module will have several function\n        setup() -\nign will make turtle draw quickly\n                    make turtle have a window of 1000 * 800\n        reset() - turtle will erase everything\n        drawRectenglePattern() - will call draw rectangle\n                                cent\n        drawRectangle() - draw a single rectangle\n        drawCirclePatten() -\n        drawSuperPattern() - randomly draw rectangle and circle patterns based on random values\n        drawRandomColor()- do not use any perameters and make turtle draw in 1/4 random colors\n        done()-called when user quits, keeps window open\n\n\n\nTesting", "System Req\n\n\n\n\nSystem Analysis\n\n\n\n\nSystem Des    the pattern module will have several function\n        setup() -\nign will make turtle draw quickly\n                    make turtle have a window of 1000 * 800\n        reset() - turtle will erase everything\n        drawRectenglePattern() - will call draw rectangle\n                                cente\n        drawRectangle() - draw a single rectangle\n        drawCirclePatten() -\n        drawSuperPattern() - randomly draw rectangle and circle patterns based on random values\n        drawRandomColor()- do not use any perameters and make turtle draw in 1/4 random colors\n        done()-called when user quits, keeps window open\n\n\n\nTesting", "System Req\n\n\n\n\nSystem Analysis\n\n\n\n\nSystem Des    the pattern module will have several function\n        setup() -\nign will make turtle draw quickly\n                    make turtle have a window of 1000 * 800\n        reset() - turtle will erase everything\n        drawRectenglePattern() - will call draw rectangle\n                                center\n        drawRectangle() - draw a single rectangle\n        drawCirclePatten() -\n        drawSuperPattern() - randomly draw rectangle and circle patterns based on random values\n        drawRandomColor()- do not use any perameters and make turtle draw in 1/4 random colors\n        done()-called when user quits, keeps window open\n\n\n\nTesting", "System Req\n\n\n\n\nSystem Analysis\n\n\n\n\nSystem Des    the pattern module will have several function\n        setup() -\nign will make turtle draw quickly\n                    make turtle have a window of 1000 * 800\n        reset() - turtle will erase everything\n        drawRectenglePattern() - will call draw rectangle\n                                center p\n        drawRectangle() - draw a single rectangle\n        drawCirclePatten() -\n        drawSuperPattern() - randomly draw rectangle and circle patterns based on random values\n        drawRandomColor()- do not use any perameters and make turtle draw in 1/4 random colors\n        done()-called when user quits, keeps window open\n\n\n\nTesting", "System Req\n\n\n\n\nSystem Analysis\n\n\n\n\nSystem Des    the pattern module will have several function\n        setup() -\nign will make turtle draw quickly\n                    make turtle have a window of 1000 * 800\n        reset() - turtle will erase everything\n        drawRectenglePattern() - will call draw rectangle\n                                center po\n        drawRectangle() - draw a single rectangle\n        drawCirclePatten() -\n        drawSuperPattern() - randomly draw rectangle and circle patterns based on random values\n        drawRandomColor()- do not use any perameters and make turtle draw in 1/4 random colors\n        done()-called when user quits, keeps window open\n\n\n\nTesting", "System Req\n\n\n\n\nSystem Analysis\n\n\n\n\nSystem Des    the pattern module will have several function\n        setup() -\nign will make turtle draw quickly\n                    make turtle have a window of 1000 * 800\n        reset() - turtle will erase everything\n        drawRectenglePattern() - will call draw rectangle\n                                center pos\n        drawRectangle() - draw a single rectangle\n        drawCirclePatten() -\n        drawSuperPattern() - randomly draw rectangle and circle patterns based on random values\n        drawRandomColor()- do not use any perameters and make turtle draw in 1/4 random colors\n        done()-called when user quits, keeps window open\n\n\n\nTesting", "System Req\n\n\n\n\nSystem Analysis\n\n\n\n\nSystem Des    the pattern module will have several function\n        setup() -\nign will make turtle draw quickly\n                    make turtle have a window of 1000 * 800\n        reset() - turtle will erase everything\n        drawRectenglePattern() - will call draw rectangle\n                                center posi\n        drawRectangle() - draw a single rectangle\n        drawCirclePatten() -\n        drawSuperPattern() - randomly draw rectangle and circle patterns based on random values\n        drawRandomColor()- do not use any perameters and make turtle draw in 1/4 random colors\n        done()-called when user quits, keeps window open\n\n\n\nTesting", "System Req\n\n\n\n\nSystem Analysis\n\n\n\n\nSystem Des    the pattern module will have several function\n        setup() -\nign will make turtle draw quickly\n                    make turtle have a window of 1000 * 800\n        reset() - turtle will erase everything\n        drawRectenglePattern() - will call draw rectangle\n                                center posit\n        drawRectangle() - draw a single rectangle\n        drawCirclePatten() -\n        drawSuperPattern() - randomly draw rectangle and circle patterns based on random values\n        drawRandomColor()- do not use any perameters and make turtle draw in 1/4 random colors\n        done()-called when user quits, keeps window open\n\n\n\nTesting", "System Req\n\n\n\n\nSystem Analysis\n\n\n\n\nSystem Des    the pattern module will have several function\n        setup() -\nign will make turtle draw quickly\n                    make turtle have a window of 1000 * 800\n        reset() - turtle will erase everything\n        drawRectenglePattern() - will call draw rectangle\n                                center positi\n        drawRectangle() - draw a single rectangle\n        drawCirclePatten() -\n        drawSuperPattern() - randomly draw rectangle and circle patterns based on random values\n        drawRandomColor()- do not use any perameters and make turtle draw in 1/4 random colors\n        done()-called when user quits, keeps window open\n\n\n\nTesting", "System Req\n\n\n\n\nSystem Analysis\n\n\n\n\nSystem Des    the pattern module will have several function\n        setup() -\nign will make turtle draw quickly\n                    make turtle have a window of 1000 * 800\n        reset() - turtle will erase everything\n        drawRectenglePattern() - will call draw rectangle\n                                center positio\n        drawRectangle() - draw a single rectangle\n        drawCirclePatten() -\n        drawSuperPattern() - randomly draw rectangle and circle patterns based on random values\n        drawRandomColor()- do not use any perameters and make turtle draw in 1/4 random colors\n        done()-called when user quits, keeps window open\n\n\n\nTesting", "System Req\n\n\n\n\nSystem Analysis\n\n\n\n\nSystem Des    the pattern module will have several function\n        setup() -\nign will make turtle draw quickly\n                    make turtle have a window of 1000 * 800\n        reset() - turtle will erase everything\n        drawRectenglePattern() - will call draw rectangle\n                                center position\n        drawRectangle() - draw a single rectangle\n        drawCirclePatten() -\n        drawSuperPattern() - randomly draw rectangle and circle patterns based on random values\n        drawRandomColor()- do not use any perameters and make turtle draw in 1/4 random colors\n        done()-called when user quits, keeps window open\n\n\n\nTesting", "System Req\n\n\n\n\nSystem Analysis\n\n\n\n\nSystem Des    the pattern module will have several function\n        setup() -\nign will make turtle draw quickly\n                    make turtle have a window of 1000 * 800\n        reset() - turtle will erase everything\n        drawRectenglePattern() - will call draw rectangle\n                                center position i\n        drawRectangle() - draw a single rectangle\n        drawCirclePatten() -\n        drawSuperPattern() - randomly draw rectangle and circle patterns based on random values\n        drawRandomColor()- do not use any perameters and make turtle draw in 1/4 random colors\n        done()-called when user quits, keeps window open\n\n\n\nTesting", "System Req\n\n\n\n\nSystem Analysis\n\n\n\n\nSystem Des    the pattern module will have several function\n        setup() -\nign will make turtle draw quickly\n                    make turtle have a window of 1000 * 800\n        reset() - turtle will erase everything\n        drawRectenglePattern() - will call draw rectangle\n                                center position is\n        drawRectangle() - draw a single rectangle\n        drawCirclePatten() -\n        drawSuperPattern() - randomly draw rectangle and circle patterns based on random values\n        drawRandomColor()- do not use any perameters and make turtle draw in 1/4 random colors\n        done()-called when user quits, keeps window open\n\n\n\nTesting", "System Req\n\n\n\n\nSystem Analysis\n\n\n\n\nSystem Des    the pattern module will have several function\n        setup() -\nign will make turtle draw quickly\n                    make turtle have a window of 1000 * 800\n        reset() - turtle will erase everything\n        drawRectenglePattern() - will call draw rectangle\n                                center position is x\n        drawRectangle() - draw a single rectangle\n        drawCirclePatten() -\n        drawSuperPattern() - randomly draw rectangle and circle patterns based on random values\n        drawRandomColor()- do not use any perameters and make turtle draw in 1/4 random colors\n        done()-called when user quits, keeps window open\n\n\n\nTesting", "System Req\n\n\n\n\nSystem Analysis\n\n\n\n\nSystem Des    the pattern module will have several function\n        setup() -\nign will make turtle draw quickly\n                    make turtle have a window of 1000 * 800\n        reset() - turtle will erase everything\n        drawRectenglePattern() - will call draw rectangle\n                                center position is x,\n        drawRectangle() - draw a single rectangle\n        drawCirclePatten() -\n        drawSuperPattern() - randomly draw rectangle and circle patterns based on random values\n        drawRandomColor()- do not use any perameters and make turtle draw in 1/4 random colors\n        done()-called when user quits, keeps window open\n\n\n\nTesting", "System Req\n\n\n\n\nSystem Analysis\n\n\n\n\nSystem Des    the pattern module will have several function\n        setup() -\nign will make turtle draw quickly\n                    make turtle have a window of 1000 * 800\n        reset() - turtle will erase everything\n        drawRectenglePattern() - will call draw rectangle\n                                center position is x, y\n        drawRectangle() - draw a single rectangle\n        drawCirclePatten() -\n        drawSuperPattern() - randomly draw rectangle and circle patterns based on random values\n        drawRandomColor()- do not use any perameters and make turtle draw in 1/4 random colors\n        done()-called when user quits, keeps window open\n\n\n\nTesting", "System Req\n\n\n\n\nSystem Analysis\n\n\n\n\nSystem Des    the pattern module will have several function\n        setup() -\nign will make turtle draw quickly\n                    make turtle have a window of 1000 * 800\n        reset() - turtle will erase everything\n        drawRectenglePattern() - will call draw rectangle\n                                center position is x, y o\n        drawRectangle() - draw a single rectangle\n        drawCirclePatten() -\n        drawSuperPattern() - randomly draw rectangle and circle patterns based on random values\n        drawRandomColor()- do not use any perameters and make turtle draw in 1/4 random colors\n        done()-called when user quits, keeps window open\n\n\n\nTesting", "System Req\n\n\n\n\nSystem Analysis\n\n\n\n\nSystem Des    the pattern module will have several function\n        setup() -\nign will make turtle draw quickly\n                    make turtle have a window of 1000 * 800\n        reset() - turtle will erase everything\n        drawRectenglePattern() - will call draw rectangle\n                                center position is x, y of\n        drawRectangle() - draw a single rectangle\n        drawCirclePatten() -\n        drawSuperPattern() - randomly draw rectangle and circle patterns based on random values\n        drawRandomColor()- do not use any perameters and make turtle draw in 1/4 random colors\n        done()-called when user quits, keeps window open\n\n\n\nTesting", "System Req\n\n\n\n\nSystem Analysis\n\n\n\n\nSystem Des    the pattern module will have several function\n        setup() -\nign will make turtle draw quickly\n                    make turtle have a window of 1000 * 800\n        reset() - turtle will erase everything\n        drawRectenglePattern() - will call draw rectangle\n                                center position is x, y of c\n        drawRectangle() - draw a single rectangle\n        drawCirclePatten() -\n        drawSuperPattern() - randomly draw rectangle and circle patterns based on random values\n        drawRandomColor()- do not use any perameters and make turtle draw in 1/4 random colors\n        done()-called when user quits, keeps window open\n\n\n\nTesting", "System Req\n\n\n\n\nSystem Analysis\n\n\n\n\nSystem Des    the pattern module will have several function\n        setup() -\nign will make turtle draw quickly\n                    make turtle have a window of 1000 * 800\n        reset() - turtle will erase everything\n        drawRectenglePattern() - will call draw rectangle\n                                center position is x, y of ci\n        drawRectangle() - draw a single rectangle\n        drawCirclePatten() -\n        drawSuperPattern() - randomly draw rectangle and circle patterns based on random values\n        drawRandomColor()- do not use any perameters and make turtle draw in 1/4 random colors\n        done()-called when user quits, keeps window open\n\n\n\nTesting", "System Req\n\n\n\n\nSystem Analysis\n\n\n\n\nSystem Des    the pattern module will have several function\n        setup() -\nign will make turtle draw quickly\n                    make turtle have a window of 1000 * 800\n        reset() - turtle will erase everything\n        drawRectenglePattern() - will call draw rectangle\n                                center position is x, y of cir\n        drawRectangle() - draw a single rectangle\n        drawCirclePatten() -\n        drawSuperPattern() - randomly draw rectangle and circle patterns based on random values\n        drawRandomColor()- do not use any perameters and make turtle draw in 1/4 random colors\n        done()-called when user quits, keeps window open\n\n\n\nTesting", "System Req\n\n\n\n\nSystem Analysis\n\n\n\n\nSystem Des    the pattern module will have several function\n        setup() -\nign will make turtle draw quickly\n                    make turtle have a window of 1000 * 800\n        reset() - turtle will erase everything\n        drawRectenglePattern() - will call draw rectangle\n                                center position is x, y of circ\n        drawRectangle() - draw a single rectangle\n        drawCirclePatten() -\n        drawSuperPattern() - randomly draw rectangle and circle patterns based on random values\n        drawRandomColor()- do not use any perameters and make turtle draw in 1/4 random colors\n        done()-called when user quits, keeps window open\n\n\n\nTesting", "System Req\n\n\n\n\nSystem Analysis\n\n\n\n\nSystem Des    the pattern module will have several function\n        setup() -\nign will make turtle draw quickly\n                    make turtle have a window of 1000 * 800\n        reset() - turtle will erase everything\n        drawRectenglePattern() - will call draw rectangle\n                                center position is x, y of circl\n        drawRectangle() - draw a single rectangle\n        drawCirclePatten() -\n        drawSuperPattern() - randomly draw rectangle and circle patterns based on random values\n        drawRandomColor()- do not use any perameters and make turtle draw in 1/4 random colors\n        done()-called when user quits, keeps window open\n\n\n\nTesting", "System Req\n\n\n\n\nSystem Analysis\n\n\n\n\nSystem Des    the pattern module will have several function\n        setup() -\nign will make turtle draw quickly\n                    make turtle have a window of 1000 * 800\n        reset() - turtle will erase everything\n        drawRectenglePattern() - will call draw rectangle\n                                center position is x, y of circlu\n        drawRectangle() - draw a single rectangle\n        drawCirclePatten() -\n        drawSuperPattern() - randomly draw rectangle and circle patterns based on random values\n        drawRandomColor()- do not use any perameters and make turtle draw in 1/4 random colors\n        done()-called when user quits, keeps window open\n\n\n\nTesting", "System Req\n\n\n\n\nSystem Analysis\n\n\n\n\nSystem Des    the pattern module will have several function\n        setup() -\nign will make turtle draw quickly\n                    make turtle have a window of 1000 * 800\n        reset() - turtle will erase everything\n        drawRectenglePattern() - will call draw rectangle\n                                center position is x, y of circlua\n        drawRectangle() - draw a single rectangle\n        drawCirclePatten() -\n        drawSuperPattern() - randomly draw rectangle and circle patterns based on random values\n        drawRandomColor()- do not use any perameters and make turtle draw in 1/4 random colors\n        done()-called when user quits, keeps window open\n\n\n\nTesting", "System Req\n\n\n\n\nSystem Analysis\n\n\n\n\nSystem Des    the pattern module will have several function\n        setup() -\nign will make turtle draw quickly\n                    make turtle have a window of 1000 * 800\n        reset() - turtle will erase everything\n        drawRectenglePattern() - will call draw rectangle\n                                center position is x, y of circlu\n        drawRectangle() - draw a single rectangle\n        drawCirclePatten() -\n        drawSuperPattern() - randomly draw rectangle and circle patterns based on random values\n        drawRandomColor()- do not use any perameters and make turtle draw in 1/4 random colors\n        done()-called when user quits, keeps window open\n\n\n\nTesting", "System Req\n\n\n\n\nSystem Analysis\n\n\n\n\nSystem Des    the pattern module will have several function\n        setup() -\nign will make turtle draw quickly\n                    make turtle have a window of 1000 * 800\n        reset() - turtle will erase everything\n        drawRectenglePattern() - will call draw rectangle\n                                center position is x, y of circl\n        drawRectangle() - draw a single rectangle\n        drawCirclePatten() -\n        drawSuperPattern() - randomly draw rectangle and circle patterns based on random values\n        drawRandomColor()- do not use any perameters and make turtle draw in 1/4 random colors\n        done()-called when user quits, keeps window open\n\n\n\nTesting", "System Req\n\n\n\n\nSystem Analysis\n\n\n\n\nSystem Des    the pattern module will have several function\n        setup() -\nign will make turtle draw quickly\n                    make turtle have a window of 1000 * 800\n        reset() - turtle will erase everything\n        drawRectenglePattern() - will call draw rectangle\n                                center position is x, y of circ\n        drawRectangle() - draw a single rectangle\n        drawCirclePatten() -\n        drawSuperPattern() - randomly draw rectangle and circle patterns based on random values\n        drawRandomColor()- do not use any perameters and make turtle draw in 1/4 random colors\n        done()-called when user quits, keeps window open\n\n\n\nTesting", "System Req\n\n\n\n\nSystem Analysis\n\n\n\n\nSystem Des    the pattern module will have several function\n        setup() -\nign will make turtle draw quickly\n                    make turtle have a window of 1000 * 800\n        reset() - turtle will erase everything\n        drawRectenglePattern() - will call draw rectangle\n                                center position is x, y of circu\n        drawRectangle() - draw a single rectangle\n        drawCirclePatten() -\n        drawSuperPattern() - randomly draw rectangle and circle patterns based on random values\n        drawRandomColor()- do not use any perameters and make turtle draw in 1/4 random colors\n        done()-called when user quits, keeps window open\n\n\n\nTesting", "System Req\n\n\n\n\nSystem Analysis\n\n\n\n\nSystem Des    the pattern module will have several function\n        setup() -\nign will make turtle draw quickly\n                    make turtle have a window of 1000 * 800\n        reset() - turtle will erase everything\n        drawRectenglePattern() - will call draw rectangle\n                                center position is x, y of circul\n        drawRectangle() - draw a single rectangle\n        drawCirclePatten() -\n        drawSuperPattern() - randomly draw rectangle and circle patterns based on random values\n        drawRandomColor()- do not use any perameters and make turtle draw in 1/4 random colors\n        done()-called when user quits, keeps window open\n\n\n\nTesting", "System Req\n\n\n\n\nSystem Analysis\n\n\n\n\nSystem Des    the pattern module will have several function\n        setup() -\nign will make turtle draw quickly\n                    make turtle have a window of 1000 * 800\n        reset() - turtle will erase everything\n        drawRectenglePattern() - will call draw rectangle\n                                center position is x, y of circula\n        drawRectangle() - draw a single rectangle\n        drawCirclePatten() -\n        drawSuperPattern() - randomly draw rectangle and circle patterns based on random values\n        drawRandomColor()- do not use any perameters and make turtle draw in 1/4 random colors\n        done()-called when user quits, keeps window open\n\n\n\nTesting", "System Req\n\n\n\n\nSystem Analysis\n\n\n\n\nSystem Des    the pattern module will have several function\n        setup() -\nign will make turtle draw quickly\n                    make turtle have a window of 1000 * 800\n        reset() - turtle will erase everything\n        drawRectenglePattern() - will call draw rectangle\n                                center position is x, y of circular\n        drawRectangle() - draw a single rectangle\n        drawCirclePatten() -\n        drawSuperPattern() - randomly draw rectangle and circle patterns based on random values\n        drawRandomColor()- do not use any perameters and make turtle draw in 1/4 random colors\n        done()-called when user quits, keeps window open\n\n\n\nTesting", "System Req\n\n\n\n\nSystem Analysis\n\n\n\n\nSystem Des    the pattern module will have several function\n        setup() -\nign will make turtle draw quickly\n                    make turtle have a window of 1000 * 800\n        reset() - turtle will erase everything\n        drawRectenglePattern() - will call draw rectangle\n                                center position is x, y of circular p\n        drawRectangle() - draw a single rectangle\n        drawCirclePatten() -\n        drawSuperPattern() - randomly draw rectangle and circle patterns based on random values\n        drawRandomColor()- do not use any perameters and make turtle draw in 1/4 random colors\n        done()-called when user quits, keeps window open\n\n\n\nTesting", "System Req\n\n\n\n\nSystem Analysis\n\n\n\n\nSystem Des    the pattern module will have several function\n        setup() -\nign will make turtle draw quickly\n                    make turtle have a window of 1000 * 800\n        reset() - turtle will erase everything\n        drawRectenglePattern() - will call draw rectangle\n                                center position is x, y of circular pa\n        drawRectangle() - draw a single rectangle\n        drawCirclePatten() -\n        drawSuperPattern() - randomly draw rectangle and circle patterns based on random values\n        drawRandomColor()- do not use any perameters and make turtle draw in 1/4 random colors\n        done()-called when user quits, keeps window open\n\n\n\nTesting", "System Req\n\n\n\n\nSystem Analysis\n\n\n\n\nSystem Des    the pattern module will have several function\n        setup() -\nign will make turtle draw quickly\n                    make turtle have a window of 1000 * 800\n        reset() - turtle will erase everything\n        drawRectenglePattern() - will call draw rectangle\n                                center position is x, y of circular pat\n        drawRectangle() - draw a single rectangle\n        drawCirclePatten() -\n        drawSuperPattern() - randomly draw rectangle and circle patterns based on random values\n        drawRandomColor()- do not use any perameters and make turtle draw in 1/4 random colors\n        done()-called when user quits, keeps window open\n\n\n\nTesting", "System Req\n\n\n\n\nSystem Analysis\n\n\n\n\nSystem Des    the pattern module will have several function\n        setup() -\nign will make turtle draw quickly\n                    make turtle have a window of 1000 * 800\n        reset() - turtle will erase everything\n        drawRectenglePattern() - will call draw rectangle\n                                center position is x, y of circular patt\n        drawRectangle() - draw a single rectangle\n        drawCirclePatten() -\n        drawSuperPattern() - randomly draw rectangle and circle patterns based on random values\n        drawRandomColor()- do not use any perameters and make turtle draw in 1/4 random colors\n        done()-called when user quits, keeps window open\n\n\n\nTesting", "System Req\n\n\n\n\nSystem Analysis\n\n\n\n\nSystem Des    the pattern module will have several function\n        setup() -\nign will make turtle draw quickly\n                    make turtle have a window of 1000 * 800\n        reset() - turtle will erase everything\n        drawRectenglePattern() - will call draw rectangle\n                                center position is x, y of circular patte\n        drawRectangle() - draw a single rectangle\n        drawCirclePatten() -\n        drawSuperPattern() - randomly draw rectangle and circle patterns based on random values\n        drawRandomColor()- do not use any perameters and make turtle draw in 1/4 random colors\n        done()-called when user quits, keeps window open\n\n\n\nTesting", "System Req\n\n\n\n\nSystem Analysis\n\n\n\n\nSystem Des    the pattern module will have several function\n        setup() -\nign will make turtle draw quickly\n                    make turtle have a window of 1000 * 800\n        reset() - turtle will erase everything\n        drawRectenglePattern() - will call draw rectangle\n                                center position is x, y of circular patter\n        drawRectangle() - draw a single rectangle\n        drawCirclePatten() -\n        drawSuperPattern() - randomly draw rectangle and circle patterns based on random values\n        drawRandomColor()- do not use any perameters and make turtle draw in 1/4 random colors\n        done()-called when user quits, keeps window open\n\n\n\nTesting", "System Req\n\n\n\n\nSystem Analysis\n\n\n\n\nSystem Des    the pattern module will have several function\n        setup() -\nign will make turtle draw quickly\n                    make turtle have a window of 1000 * 800\n        reset() - turtle will erase everything\n        drawRectenglePattern() - will call draw rectangle\n                                center position is x, y of circular pattern\n        drawRectangle() - draw a single rectangle\n        drawCirclePatten() -\n        drawSuperPattern() - randomly draw rectangle and circle patterns based on random values\n        drawRandomColor()- do not use any perameters and make turtle draw in 1/4 random colors\n        done()-called when user quits, keeps window open\n\n\n\nTesting", "System Req\n\n\n\n\nSystem Analysis\n\n\n\n\nSystem Des    the pattern module will have several function\n        setup() -\nign will make turtle draw quickly\n                    make turtle have a window of 1000 * 800\n        reset() - turtle will erase everything\n        drawRectenglePattern() - will call draw rectangle\n                                center position is x, y of circular pattern d\n        drawRectangle() - draw a single rectangle\n        drawCirclePatten() -\n        drawSuperPattern() - randomly draw rectangle and circle patterns based on random values\n        drawRandomColor()- do not use any perameters and make turtle draw in 1/4 random colors\n        done()-called when user quits, keeps window open\n\n\n\nTesting", "System Req\n\n\n\n\nSystem Analysis\n\n\n\n\nSystem Des    the pattern module will have several function\n        setup() -\nign will make turtle draw quickly\n                    make turtle have a window of 1000 * 800\n        reset() - turtle will erase everything\n        drawRectenglePattern() - will call draw rectangle\n                                center position is x, y of circular pattern dr\n        drawRectangle() - draw a single rectangle\n        drawCirclePatten() -\n        drawSuperPattern() - randomly draw rectangle and circle patterns based on random values\n        drawRandomColor()- do not use any perameters and make turtle draw in 1/4 random colors\n        done()-called when user quits, keeps window open\n\n\n\nTesting", "System Req\n\n\n\n\nSystem Analysis\n\n\n\n\nSystem Des    the pattern module will have several function\n        setup() -\nign will make turtle draw quickly\n                    make turtle have a window of 1000 * 800\n        reset() - turtle will erase everything\n        drawRectenglePattern() - will call draw rectangle\n                                center position is x, y of circular pattern dra\n        drawRectangle() - draw a single rectangle\n        drawCirclePatten() -\n        drawSuperPattern() - randomly draw rectangle and circle patterns based on random values\n        drawRandomColor()- do not use any perameters and make turtle draw in 1/4 random colors\n        done()-called when user quits, keeps window open\n\n\n\nTesting", "System Req\n\n\n\n\nSystem Analysis\n\n\n\n\nSystem Des    the pattern module will have several function\n        setup() -\nign will make turtle draw quickly\n                    make turtle have a window of 1000 * 800\n        reset() - turtle will erase everything\n        drawRectenglePattern() - will call draw rectangle\n                                center position is x, y of circular pattern draw\n        drawRectangle() - draw a single rectangle\n        drawCirclePatten() -\n        drawSuperPattern() - randomly draw rectangle and circle patterns based on random values\n        drawRandomColor()- do not use any perameters and make turtle draw in 1/4 random colors\n        done()-called when user quits, keeps window open\n\n\n\nTesting", "System Req\n\n\n\n\nSystem Analysis\n\n\n\n\nSystem Des    the pattern module will have several function\n        setup() -\nign will make turtle draw quickly\n                    make turtle have a window of 1000 * 800\n        reset() - turtle will erase everything\n        drawRectenglePattern() - will call draw rectangle\n                                center position is x, y of circular pattern drawn\n        drawRectangle() - draw a single rectangle\n        drawCirclePatten() -\n        drawSuperPattern() - randomly draw rectangle and circle patterns based on random values\n        drawRandomColor()- do not use any perameters and make turtle draw in 1/4 random colors\n        done()-called when user quits, keeps window open\n\n\n\nTesting", "System Req\n\n\n\n\nSystem Analysis\n\n\n\n\nSystem Des    the pattern module will have several function\n        setup() -\nign will make turtle draw quickly\n                    make turtle have a window of 1000 * 800\n        reset() - turtle will erase everything\n        drawRectenglePattern() - will call draw rectangle\n                                center position is x, y of circular pattern drawn\n                                d\n        drawRectangle() - draw a single rectangle\n        drawCirclePatten() -\n        drawSuperPattern() - randomly draw rectangle and circle patterns based on random values\n        drawRandomColor()- do not use any perameters and make turtle draw in 1/4 random colors\n        done()-called when user quits, keeps window open\n\n\n\nTesting", "System Req\n\n\n\n\nSystem Analysis\n\n\n\n\nSystem Des    the pattern module will have several function\n        setup() -\nign will make turtle draw quickly\n                    make turtle have a window of 1000 * 800\n        reset() - turtle will erase everything\n        drawRectenglePattern() - will call draw rectangle\n                                center position is x, y of circular pattern drawn\n                                di\n        drawRectangle() - draw a single rectangle\n        drawCirclePatten() -\n        drawSuperPattern() - randomly draw rectangle and circle patterns based on random values\n        drawRandomColor()- do not use any perameters and make turtle draw in 1/4 random colors\n        done()-called when user quits, keeps window open\n\n\n\nTesting", "System Req\n\n\n\n\nSystem Analysis\n\n\n\n\nSystem Des    the pattern module will have several function\n        setup() -\nign will make turtle draw quickly\n                    make turtle have a window of 1000 * 800\n        reset() - turtle will erase everything\n        drawRectenglePattern() - will call draw rectangle\n                                center position is x, y of circular pattern drawn\n                                dis\n        drawRectangle() - draw a single rectangle\n        drawCirclePatten() -\n        drawSuperPattern() - randomly draw rectangle and circle patterns based on random values\n        drawRandomColor()- do not use any perameters and make turtle draw in 1/4 random colors\n        done()-called when user quits, keeps window open\n\n\n\nTesting", "System Req\n\n\n\n\nSystem Analysis\n\n\n\n\nSystem Des    the pattern module will have several function\n        setup() -\nign will make turtle draw quickly\n                    make turtle have a window of 1000 * 800\n        reset() - turtle will erase everything\n        drawRectenglePattern() - will call draw rectangle\n                                center position is x, y of circular pattern drawn\n                                dist\n        drawRectangle() - draw a single rectangle\n        drawCirclePatten() -\n        drawSuperPattern() - randomly draw rectangle and circle patterns based on random values\n        drawRandomColor()- do not use any perameters and make turtle draw in 1/4 random colors\n        done()-called when user quits, keeps window open\n\n\n\nTesting", "System Req\n\n\n\n\nSystem Analysis\n\n\n\n\nSystem Des    the pattern module will have several function\n        setup() -\nign will make turtle draw quickly\n                    make turtle have a window of 1000 * 800\n        reset() - turtle will erase everything\n        drawRectenglePattern() - will call draw rectangle\n                                center position is x, y of circular pattern drawn\n                                dista\n        drawRectangle() - draw a single rectangle\n        drawCirclePatten() -\n        drawSuperPattern() - randomly draw rectangle and circle patterns based on random values\n        drawRandomColor()- do not use any perameters and make turtle draw in 1/4 random colors\n        done()-called when user quits, keeps window open\n\n\n\nTesting", "System Req\n\n\n\n\nSystem Analysis\n\n\n\n\nSystem Des    the pattern module will have several function\n        setup() -\nign will make turtle draw quickly\n                    make turtle have a window of 1000 * 800\n        reset() - turtle will erase everything\n        drawRectenglePattern() - will call draw rectangle\n                                center position is x, y of circular pattern drawn\n                                distan\n        drawRectangle() - draw a single rectangle\n        drawCirclePatten() -\n        drawSuperPattern() - randomly draw rectangle and circle patterns based on random values\n        drawRandomColor()- do not use any perameters and make turtle draw in 1/4 random colors\n        done()-called when user quits, keeps window open\n\n\n\nTesting", "System Req\n\n\n\n\nSystem Analysis\n\n\n\n\nSystem Des    the pattern module will have several function\n        setup() -\nign will make turtle draw quickly\n                    make turtle have a window of 1000 * 800\n        reset() - turtle will erase everything\n        drawRectenglePattern() - will call draw rectangle\n                                center position is x, y of circular pattern drawn\n                                distanc\n        drawRectangle() - draw a single rectangle\n        drawCirclePatten() -\n        drawSuperPattern() - randomly draw rectangle and circle patterns based on random values\n        drawRandomColor()- do not use any perameters and make turtle draw in 1/4 random colors\n        done()-called when user quits, keeps window open\n\n\n\nTesting", "System Req\n\n\n\n\nSystem Analysis\n\n\n\n\nSystem Des    the pattern module will have several function\n        setup() -\nign will make turtle draw quickly\n                    make turtle have a window of 1000 * 800\n        reset() - turtle will erase everything\n        drawRectenglePattern() - will call draw rectangle\n                                center position is x, y of circular pattern drawn\n                                distance\n        drawRectangle() - draw a single rectangle\n        drawCirclePatten() -\n        drawSuperPattern() - randomly draw rectangle and circle patterns based on random values\n        drawRandomColor()- do not use any perameters and make turtle draw in 1/4 random colors\n        done()-called when user quits, keeps window open\n\n\n\nTesting", "System Req\n\n\n\n\nSystem Analysis\n\n\n\n\nSystem Des    the pattern module will have several function\n        setup() -\nign will make turtle draw quickly\n                    make turtle have a window of 1000 * 800\n        reset() - turtle will erase everything\n        drawRectenglePattern() - will call draw rectangle\n                                center position is x, y of circular pattern drawn\n                                distance f\n        drawRectangle() - draw a single rectangle\n        drawCirclePatten() -\n        drawSuperPattern() - randomly draw rectangle and circle patterns based on random values\n        drawRandomColor()- do not use any perameters and make turtle draw in 1/4 random colors\n        done()-called when user quits, keeps window open\n\n\n\nTesting", "System Req\n\n\n\n\nSystem Analysis\n\n\n\n\nSystem Des    the pattern module will have several function\n        setup() -\nign will make turtle draw quickly\n                    make turtle have a window of 1000 * 800\n        reset() - turtle will erase everything\n        drawRectenglePattern() - will call draw rectangle\n                                center position is x, y of circular pattern drawn\n                                distance fo\n        drawRectangle() - draw a single rectangle\n        drawCirclePatten() -\n        drawSuperPattern() - randomly draw rectangle and circle patterns based on random values\n        drawRandomColor()- do not use any perameters and make turtle draw in 1/4 random colors\n        done()-called when user quits, keeps window open\n\n\n\nTesting", "System Req\n\n\n\n\nSystem Analysis\n\n\n\n\nSystem Des    the pattern module will have several function\n        setup() -\nign will make turtle draw quickly\n                    make turtle have a window of 1000 * 800\n        reset() - turtle will erase everything\n        drawRectenglePattern() - will call draw rectangle\n                                center position is x, y of circular pattern drawn\n                                distance for\n        drawRectangle() - draw a single rectangle\n        drawCirclePatten() -\n        drawSuperPattern() - randomly draw rectangle and circle patterns based on random values\n        drawRandomColor()- do not use any perameters and make turtle draw in 1/4 random colors\n        done()-called when user quits, keeps window open\n\n\n\nTesting", "System Req\n\n\n\n\nSystem Analysis\n\n\n\n\nSystem Des    the pattern module will have several function\n        setup() -\nign will make turtle draw quickly\n                    make turtle have a window of 1000 * 800\n        reset() - turtle will erase everything\n        drawRectenglePattern() - will call draw rectangle\n                                center position is x, y of circular pattern drawn\n                                distance fo\n        drawRectangle() - draw a single rectangle\n        drawCirclePatten() -\n        drawSuperPattern() - randomly draw rectangle and circle patterns based on random values\n        drawRandomColor()- do not use any perameters and make turtle draw in 1/4 random colors\n        done()-called when user quits, keeps window open\n\n\n\nTesting", "System Req\n\n\n\n\nSystem Analysis\n\n\n\n\nSystem Des    the pattern module will have several function\n        setup() -\nign will make turtle draw quickly\n                    make turtle have a window of 1000 * 800\n        reset() - turtle will erase everything\n        drawRectenglePattern() - will call draw rectangle\n                                center position is x, y of circular pattern drawn\n                                distance f\n        drawRectangle() - draw a single rectangle\n        drawCirclePatten() -\n        drawSuperPattern() - randomly draw rectangle and circle patterns based on random values\n        drawRandomColor()- do not use any perameters and make turtle draw in 1/4 random colors\n        done()-called when user quits, keeps window open\n\n\n\nTesting", "System Req\n\n\n\n\nSystem Analysis\n\n\n\n\nSystem Des    the pattern module will have several function\n        setup() -\nign will make turtle draw quickly\n                    make turtle have a window of 1000 * 800\n        reset() - turtle will erase everything\n        drawRectenglePattern() - will call draw rectangle\n                                center position is x, y of circular pattern drawn\n                                distance fr\n        drawRectangle() - draw a single rectangle\n        drawCirclePatten() -\n        drawSuperPattern() - randomly draw rectangle and circle patterns based on random values\n        drawRandomColor()- do not use any perameters and make turtle draw in 1/4 random colors\n        done()-called when user quits, keeps window open\n\n\n\nTesting", "System Req\n\n\n\n\nSystem Analysis\n\n\n\n\nSystem Des    the pattern module will have several function\n        setup() -\nign will make turtle draw quickly\n                    make turtle have a window of 1000 * 800\n        reset() - turtle will erase everything\n        drawRectenglePattern() - will call draw rectangle\n                                center position is x, y of circular pattern drawn\n                                distance fro\n        drawRectangle() - draw a single rectangle\n        drawCirclePatten() -\n        drawSuperPattern() - randomly draw rectangle and circle patterns based on random values\n        drawRandomColor()- do not use any perameters and make turtle draw in 1/4 random colors\n        done()-called when user quits, keeps window open\n\n\n\nTesting", "System Req\n\n\n\n\nSystem Analysis\n\n\n\n\nSystem Des    the pattern module will have several function\n        setup() -\nign will make turtle draw quickly\n                    make turtle have a window of 1000 * 800\n        reset() - turtle will erase everything\n        drawRectenglePattern() - will call draw rectangle\n                                center position is x, y of circular pattern drawn\n                                distance from\n        drawRectangle() - draw a single rectangle\n        drawCirclePatten() -\n        drawSuperPattern() - randomly draw rectangle and circle patterns based on random values\n        drawRandomColor()- do not use any perameters and make turtle draw in 1/4 random colors\n        done()-called when user quits, keeps window open\n\n\n\nTesting", "System Req\n\n\n\n\nSystem Analysis\n\n\n\n\nSystem Des    the pattern module will have several function\n        setup() -\nign will make turtle draw quickly\n                    make turtle have a window of 1000 * 800\n        reset() - turtle will erase everything\n        drawRectenglePattern() - will call draw rectangle\n                                center position is x, y of circular pattern drawn\n                                distance from c\n        drawRectangle() - draw a single rectangle\n        drawCirclePatten() -\n        drawSuperPattern() - randomly draw rectangle and circle patterns based on random values\n        drawRandomColor()- do not use any perameters and make turtle draw in 1/4 random colors\n        done()-called when user quits, keeps window open\n\n\n\nTesting", "System Req\n\n\n\n\nSystem Analysis\n\n\n\n\nSystem Des    the pattern module will have several function\n        setup() -\nign will make turtle draw quickly\n                    make turtle have a window of 1000 * 800\n        reset() - turtle will erase everything\n        drawRectenglePattern() - will call draw rectangle\n                                center position is x, y of circular pattern drawn\n                                distance from ce\n        drawRectangle() - draw a single rectangle\n        drawCirclePatten() -\n        drawSuperPattern() - randomly draw rectangle and circle patterns based on random values\n        drawRandomColor()- do not use any perameters and make turtle draw in 1/4 random colors\n        done()-called when user quits, keeps window open\n\n\n\nTesting", "System Req\n\n\n\n\nSystem Analysis\n\n\n\n\nSystem Des    the pattern module will have several function\n        setup() -\nign will make turtle draw quickly\n                    make turtle have a window of 1000 * 800\n        reset() - turtle will erase everything\n        drawRectenglePattern() - will call draw rectangle\n                                center position is x, y of circular pattern drawn\n                                distance from cen\n        drawRectangle() - draw a single rectangle\n        drawCirclePatten() -\n        drawSuperPattern() - randomly draw rectangle and circle patterns based on random values\n        drawRandomColor()- do not use any perameters and make turtle draw in 1/4 random colors\n        done()-called when user quits, keeps window open\n\n\n\nTesting", "System Req\n\n\n\n\nSystem Analysis\n\n\n\n\nSystem Des    the pattern module will have several function\n        setup() -\nign will make turtle draw quickly\n                    make turtle have a window of 1000 * 800\n        reset() - turtle will erase everything\n        drawRectenglePattern() - will call draw rectangle\n                                center position is x, y of circular pattern drawn\n                                distance from cent\n        drawRectangle() - draw a single rectangle\n        drawCirclePatten() -\n        drawSuperPattern() - randomly draw rectangle and circle patterns based on random values\n        drawRandomColor()- do not use any perameters and make turtle draw in 1/4 random colors\n        done()-called when user quits, keeps window open\n\n\n\nTesting", "System Req\n\n\n\n\nSystem Analysis\n\n\n\n\nSystem Des    the pattern module will have several function\n        setup() -\nign will make turtle draw quickly\n                    make turtle have a window of 1000 * 800\n        reset() - turtle will erase everything\n        drawRectenglePattern() - will call draw rectangle\n                                center position is x, y of circular pattern drawn\n                                distance from cente\n        drawRectangle() - draw a single rectangle\n        drawCirclePatten() -\n        drawSuperPattern() - randomly draw rectangle and circle patterns based on random values\n        drawRandomColor()- do not use any perameters and make turtle draw in 1/4 random colors\n        done()-called when user quits, keeps window open\n\n\n\nTesting", "System Req\n\n\n\n\nSystem Analysis\n\n\n\n\nSystem Des    the pattern module will have several function\n        setup() -\nign will make turtle draw quickly\n                    make turtle have a window of 1000 * 800\n        reset() - turtle will erase everything\n        drawRectenglePattern() - will call draw rectangle\n                                center position is x, y of circular pattern drawn\n                                distance from center\n        drawRectangle() - draw a single rectangle\n        drawCirclePatten() -\n        drawSuperPattern() - randomly draw rectangle and circle patterns based on random values\n        drawRandomColor()- do not use any perameters and make turtle draw in 1/4 random colors\n        done()-called when user quits, keeps window open\n\n\n\nTesting", "System Req\n\n\n\n\nSystem Analysis\n\n\n\n\nSystem Des    the pattern module will have several function\n        setup() -\nign will make turtle draw quickly\n                    make turtle have a window of 1000 * 800\n        reset() - turtle will erase everything\n        drawRectenglePattern() - will call draw rectangle\n                                center position is x, y of circular pattern drawn\n                                distance from center t\n        drawRectangle() - draw a single rectangle\n        drawCirclePatten() -\n        drawSuperPattern() - randomly draw rectangle and circle patterns based on random values\n        drawRandomColor()- do not use any perameters and make turtle draw in 1/4 random colors\n        done()-called when user quits, keeps window open\n\n\n\nTesting", "System Req\n\n\n\n\nSystem Analysis\n\n\n\n\nSystem Des    the pattern module will have several function\n        setup() -\nign will make turtle draw quickly\n                    make turtle have a window of 1000 * 800\n        reset() - turtle will erase everything\n        drawRectenglePattern() - will call draw rectangle\n                                center position is x, y of circular pattern drawn\n                                distance from center to\n        drawRectangle() - draw a single rectangle\n        drawCirclePatten() -\n        drawSuperPattern() - randomly draw rectangle and circle patterns based on random values\n        drawRandomColor()- do not use any perameters and make turtle draw in 1/4 random colors\n        done()-called when user quits, keeps window open\n\n\n\nTesting", "System Req\n\n\n\n\nSystem Analysis\n\n\n\n\nSystem Des    the pattern module will have several function\n        setup() -\nign will make turtle draw quickly\n                    make turtle have a window of 1000 * 800\n        reset() - turtle will erase everything\n        drawRectenglePattern() - will call draw rectangle\n                                center position is x, y of circular pattern drawn\n                                distance from center t\n        drawRectangle() - draw a single rectangle\n        drawCirclePatten() -\n        drawSuperPattern() - randomly draw rectangle and circle patterns based on random values\n        drawRandomColor()- do not use any perameters and make turtle draw in 1/4 random colors\n        done()-called when user quits, keeps window open\n\n\n\nTesting", "System Req\n\n\n\n\nSystem Analysis\n\n\n\n\nSystem Des    the pattern module will have several function\n        setup() -\nign will make turtle draw quickly\n                    make turtle have a window of 1000 * 800\n        reset() - turtle will erase everything\n        drawRectenglePattern() - will call draw rectangle\n                                center position is x, y of circular pattern drawn\n                                distance from center \n        drawRectangle() - draw a single rectangle\n        drawCirclePatten() -\n        drawSuperPattern() - randomly draw rectangle and circle patterns based on random values\n        drawRandomColor()- do not use any perameters and make turtle draw in 1/4 random colors\n        done()-called when user quits, keeps window open\n\n\n\nTesting", "System Req\n\n\n\n\nSystem Analysis\n\n\n\n\nSystem Des    the pattern module will have several function\n        setup() -\nign will make turtle draw quickly\n                    make turtle have a window of 1000 * 800\n        reset() - turtle will erase everything\n        drawRectenglePattern() - will call draw rectangle\n                                center position is x, y of circular pattern drawn\n                                distance from center\n        drawRectangle() - draw a single rectangle\n        drawCirclePatten() -\n        drawSuperPattern() - randomly draw rectangle and circle patterns based on random values\n        drawRandomColor()- do not use any perameters and make turtle draw in 1/4 random colors\n        done()-called when user quits, keeps window open\n\n\n\nTesting", "System Req\n\n\n\n\nSystem Analysis\n\n\n\n\nSystem Des    the pattern module will have several function\n        setup() -\nign will make turtle draw quickly\n                    make turtle have a window of 1000 * 800\n        reset() - turtle will erase everything\n        drawRectenglePattern() - will call draw rectangle\n                                center position is x, y of circular pattern drawn\n                                distance from cente\n        drawRectangle() - draw a single rectangle\n        drawCirclePatten() -\n        drawSuperPattern() - randomly draw rectangle and circle patterns based on random values\n        drawRandomColor()- do not use any perameters and make turtle draw in 1/4 random colors\n        done()-called when user quits, keeps window open\n\n\n\nTesting", "System Req\n\n\n\n\nSystem Analysis\n\n\n\n\nSystem Des    the pattern module will have several function\n        setup() -\nign will make turtle draw quickly\n                    make turtle have a window of 1000 * 800\n        reset() - turtle will erase everything\n        drawRectenglePattern() - will call draw rectangle\n                                center position is x, y of circular pattern drawn\n                                distance from cent\n        drawRectangle() - draw a single rectangle\n        drawCirclePatten() -\n        drawSuperPattern() - randomly draw rectangle and circle patterns based on random values\n        drawRandomColor()- do not use any perameters and make turtle draw in 1/4 random colors\n        done()-called when user quits, keeps window open\n\n\n\nTesting", "System Req\n\n\n\n\nSystem Analysis\n\n\n\n\nSystem Des    the pattern module will have several function\n        setup() -\nign will make turtle draw quickly\n                    make turtle have a window of 1000 * 800\n        reset() - turtle will erase everything\n        drawRectenglePattern() - will call draw rectangle\n                                center position is x, y of circular pattern drawn\n                                distance from cen\n        drawRectangle() - draw a single rectangle\n        drawCirclePatten() -\n        drawSuperPattern() - randomly draw rectangle and circle patterns based on random values\n        drawRandomColor()- do not use any perameters and make turtle draw in 1/4 random colors\n        done()-called when user quits, keeps window open\n\n\n\nTesting", "System Req\n\n\n\n\nSystem Analysis\n\n\n\n\nSystem Des    the pattern module will have several function\n        setup() -\nign will make turtle draw quickly\n                    make turtle have a window of 1000 * 800\n        reset() - turtle will erase everything\n        drawRectenglePattern() - will call draw rectangle\n                                center position is x, y of circular pattern drawn\n                                distance from ce\n        drawRectangle() - draw a single rectangle\n        drawCirclePatten() -\n        drawSuperPattern() - randomly draw rectangle and circle patterns based on random values\n        drawRandomColor()- do not use any perameters and make turtle draw in 1/4 random colors\n        done()-called when user quits, keeps window open\n\n\n\nTesting", "System Req\n\n\n\n\nSystem Analysis\n\n\n\n\nSystem Des    the pattern module will have several function\n        setup() -\nign will make turtle draw quickly\n                    make turtle have a window of 1000 * 800\n        reset() - turtle will erase everything\n        drawRectenglePattern() - will call draw rectangle\n                                center position is x, y of circular pattern drawn\n                                distance from c\n        drawRectangle() - draw a single rectangle\n        drawCirclePatten() -\n        drawSuperPattern() - randomly draw rectangle and circle patterns based on random values\n        drawRandomColor()- do not use any perameters and make turtle draw in 1/4 random colors\n        done()-called when user quits, keeps window open\n\n\n\nTesting", "System Req\n\n\n\n\nSystem Analysis\n\n\n\n\nSystem Des    the pattern module will have several function\n        setup() -\nign will make turtle draw quickly\n                    make turtle have a window of 1000 * 800\n        reset() - turtle will erase everything\n        drawRectenglePattern() - will call draw rectangle\n                                center position is x, y of circular pattern drawn\n                                distance from \n        drawRectangle() - draw a single rectangle\n        drawCirclePatten() -\n        drawSuperPattern() - randomly draw rectangle and circle patterns based on random values\n        drawRandomColor()- do not use any perameters and make turtle draw in 1/4 random colors\n        done()-called when user quits, keeps window open\n\n\n\nTesting", "System Req\n\n\n\n\nSystem Analysis\n\n\n\n\nSystem Des    the pattern module will have several function\n        setup() -\nign will make turtle draw quickly\n                    make turtle have a window of 1000 * 800\n        reset() - turtle will erase everything\n        drawRectenglePattern() - will call draw rectangle\n                                center position is x, y of circular pattern drawn\n                                distance from\n        drawRectangle() - draw a single rectangle\n        drawCirclePatten() -\n        drawSuperPattern() - randomly draw rectangle and circle patterns based on random values\n        drawRandomColor()- do not use any perameters and make turtle draw in 1/4 random colors\n        done()-called when user quits, keeps window open\n\n\n\nTesting", "System Req\n\n\n\n\nSystem Analysis\n\n\n\n\nSystem Des    the pattern module will have several function\n        setup() -\nign will make turtle draw quickly\n                    make turtle have a window of 1000 * 800\n        reset() - turtle will erase everything\n        drawRectenglePattern() - will call draw rectangle\n                                center position is x, y of circular pattern drawn\n                                distance fro\n        drawRectangle() - draw a single rectangle\n        drawCirclePatten() -\n        drawSuperPattern() - randomly draw rectangle and circle patterns based on random values\n        drawRandomColor()- do not use any perameters and make turtle draw in 1/4 random colors\n        done()-called when user quits, keeps window open\n\n\n\nTesting", "System Req\n\n\n\n\nSystem Analysis\n\n\n\n\nSystem Des    the pattern module will have several function\n        setup() -\nign will make turtle draw quickly\n                    make turtle have a window of 1000 * 800\n        reset() - turtle will erase everything\n        drawRectenglePattern() - will call draw rectangle\n                                center position is x, y of circular pattern drawn\n                                distance fr\n        drawRectangle() - draw a single rectangle\n        drawCirclePatten() -\n        drawSuperPattern() - randomly draw rectangle and circle patterns based on random values\n        drawRandomColor()- do not use any perameters and make turtle draw in 1/4 random colors\n        done()-called when user quits, keeps window open\n\n\n\nTesting", "System Req\n\n\n\n\nSystem Analysis\n\n\n\n\nSystem Des    the pattern module will have several function\n        setup() -\nign will make turtle draw quickly\n                    make turtle have a window of 1000 * 800\n        reset() - turtle will erase everything\n        drawRectenglePattern() - will call draw rectangle\n                                center position is x, y of circular pattern drawn\n                                distance f\n        drawRectangle() - draw a single rectangle\n        drawCirclePatten() -\n        drawSuperPattern() - randomly draw rectangle and circle patterns based on random values\n        drawRandomColor()- do not use any perameters and make turtle draw in 1/4 random colors\n        done()-called when user quits, keeps window open\n\n\n\nTesting", "System Req\n\n\n\n\nSystem Analysis\n\n\n\n\nSystem Des    the pattern module will have several function\n        setup() -\nign will make turtle draw quickly\n                    make turtle have a window of 1000 * 800\n        reset() - turtle will erase everything\n        drawRectenglePattern() - will call draw rectangle\n                                center position is x, y of circular pattern drawn\n                                distance \n        drawRectangle() - draw a single rectangle\n        drawCirclePatten() -\n        drawSuperPattern() - randomly draw rectangle and circle patterns based on random values\n        drawRandomColor()- do not use any perameters and make turtle draw in 1/4 random colors\n        done()-called when user quits, keeps window open\n\n\n\nTesting", "System Req\n\n\n\n\nSystem Analysis\n\n\n\n\nSystem Des    the pattern module will have several function\n        setup() -\nign will make turtle draw quickly\n                    make turtle have a window of 1000 * 800\n        reset() - turtle will erase everything\n        drawRectenglePattern() - will call draw rectangle\n                                center position is x, y of circular pattern drawn\n                                distance\n        drawRectangle() - draw a single rectangle\n        drawCirclePatten() -\n        drawSuperPattern() - randomly draw rectangle and circle patterns based on random values\n        drawRandomColor()- do not use any perameters and make turtle draw in 1/4 random colors\n        done()-called when user quits, keeps window open\n\n\n\nTesting", "System Req\n\n\n\n\nSystem Analysis\n\n\n\n\nSystem Des    the pattern module will have several function\n        setup() -\nign will make turtle draw quickly\n                    make turtle have a window of 1000 * 800\n        reset() - turtle will erase everything\n        drawRectenglePattern() - will call draw rectangle\n                                center position is x, y of circular pattern drawn\n                                distanc\n        drawRectangle() - draw a single rectangle\n        drawCirclePatten() -\n        drawSuperPattern() - randomly draw rectangle and circle patterns based on random values\n        drawRandomColor()- do not use any perameters and make turtle draw in 1/4 random colors\n        done()-called when user quits, keeps window open\n\n\n\nTesting", "System Req\n\n\n\n\nSystem Analysis\n\n\n\n\nSystem Des    the pattern module will have several function\n        setup() -\nign will make turtle draw quickly\n                    make turtle have a window of 1000 * 800\n        reset() - turtle will erase everything\n        drawRectenglePattern() - will call draw rectangle\n                                center position is x, y of circular pattern drawn\n                                distan\n        drawRectangle() - draw a single rectangle\n        drawCirclePatten() -\n        drawSuperPattern() - randomly draw rectangle and circle patterns based on random values\n        drawRandomColor()- do not use any perameters and make turtle draw in 1/4 random colors\n        done()-called when user quits, keeps window open\n\n\n\nTesting", "System Req\n\n\n\n\nSystem Analysis\n\n\n\n\nSystem Des    the pattern module will have several function\n        setup() -\nign will make turtle draw quickly\n                    make turtle have a window of 1000 * 800\n        reset() - turtle will erase everything\n        drawRectenglePattern() - will call draw rectangle\n                                center position is x, y of circular pattern drawn\n                                dista\n        drawRectangle() - draw a single rectangle\n        drawCirclePatten() -\n        drawSuperPattern() - randomly draw rectangle and circle patterns based on random values\n        drawRandomColor()- do not use any perameters and make turtle draw in 1/4 random colors\n        done()-called when user quits, keeps window open\n\n\n\nTesting", "System Req\n\n\n\n\nSystem Analysis\n\n\n\n\nSystem Des    the pattern module will have several function\n        setup() -\nign will make turtle draw quickly\n                    make turtle have a window of 1000 * 800\n        reset() - turtle will erase everything\n        drawRectenglePattern() - will call draw rectangle\n                                center position is x, y of circular pattern drawn\n                                dist\n        drawRectangle() - draw a single rectangle\n        drawCirclePatten() -\n        drawSuperPattern() - randomly draw rectangle and circle patterns based on random values\n        drawRandomColor()- do not use any perameters and make turtle draw in 1/4 random colors\n        done()-called when user quits, keeps window open\n\n\n\nTesting", "System Req\n\n\n\n\nSystem Analysis\n\n\n\n\nSystem Des    the pattern module will have several function\n        setup() -\nign will make turtle draw quickly\n                    make turtle have a window of 1000 * 800\n        reset() - turtle will erase everything\n        drawRectenglePattern() - will call draw rectangle\n                                center position is x, y of circular pattern drawn\n                                dis\n        drawRectangle() - draw a single rectangle\n        drawCirclePatten() -\n        drawSuperPattern() - randomly draw rectangle and circle patterns based on random values\n        drawRandomColor()- do not use any perameters and make turtle draw in 1/4 random colors\n        done()-called when user quits, keeps window open\n\n\n\nTesting", "System Req\n\n\n\n\nSystem Analysis\n\n\n\n\nSystem Des    the pattern module will have several function\n        setup() -\nign will make turtle draw quickly\n                    make turtle have a window of 1000 * 800\n        reset() - turtle will erase everything\n        drawRectenglePattern() - will call draw rectangle\n                                center position is x, y of circular pattern drawn\n                                di\n        drawRectangle() - draw a single rectangle\n        drawCirclePatten() -\n        drawSuperPattern() - randomly draw rectangle and circle patterns based on random values\n        drawRandomColor()- do not use any perameters and make turtle draw in 1/4 random colors\n        done()-called when user quits, keeps window open\n\n\n\nTesting", "System Req\n\n\n\n\nSystem Analysis\n\n\n\n\nSystem Des    the pattern module will have several function\n        setup() -\nign will make turtle draw quickly\n                    make turtle have a window of 1000 * 800\n        reset() - turtle will erase everything\n        drawRectenglePattern() - will call draw rectangle\n                                center position is x, y of circular pattern drawn\n                                d\n        drawRectangle() - draw a single rectangle\n        drawCirclePatten() -\n        drawSuperPattern() - randomly draw rectangle and circle patterns based on random values\n        drawRandomColor()- do not use any perameters and make turtle draw in 1/4 random colors\n        done()-called when user quits, keeps window open\n\n\n\nTesting", "System Req\n\n\n\n\nSystem Analysis\n\n\n\n\nSystem Des    the pattern module will have several function\n        setup() -\nign will make turtle draw quickly\n                    make turtle have a window of 1000 * 800\n        reset() - turtle will erase everything\n        drawRectenglePattern() - will call draw rectangle\n                                center position is x, y of circular pattern drawn\n                                \n        drawRectangle() - draw a single rectangle\n        drawCirclePatten() -\n        drawSuperPattern() - randomly draw rectangle and circle patterns based on random values\n        drawRandomColor()- do not use any perameters and make turtle draw in 1/4 random colors\n        done()-called when user quits, keeps window open\n\n\n\nTesting", "System Req\n\n\n\n\nSystem Analysis\n\n\n\n\nSystem Des    the pattern module will have several function\n        setup() -\nign will make turtle draw quickly\n                    make turtle have a window of 1000 * 800\n        reset() - turtle will erase everything\n        drawRectenglePattern() - will call draw rectangle\n                                center position is x, y of circular pattern drawn\n                                O\n        drawRectangle() - draw a single rectangle\n        drawCirclePatten() -\n        drawSuperPattern() - randomly draw rectangle and circle patterns based on random values\n        drawRandomColor()- do not use any perameters and make turtle draw in 1/4 random colors\n        done()-called when user quits, keeps window open\n\n\n\nTesting", "System Req\n\n\n\n\nSystem Analysis\n\n\n\n\nSystem Des    the pattern module will have several function\n        setup() -\nign will make turtle draw quickly\n                    make turtle have a window of 1000 * 800\n        reset() - turtle will erase everything\n        drawRectenglePattern() - will call draw rectangle\n                                center position is x, y of circular pattern drawn\n                                Of\n        drawRectangle() - draw a single rectangle\n        drawCirclePatten() -\n        drawSuperPattern() - randomly draw rectangle and circle patterns based on random values\n        drawRandomColor()- do not use any perameters and make turtle draw in 1/4 random colors\n        done()-called when user quits, keeps window open\n\n\n\nTesting", "System Req\n\n\n\n\nSystem Analysis\n\n\n\n\nSystem Des    the pattern module will have several function\n        setup() -\nign will make turtle draw quickly\n                    make turtle have a window of 1000 * 800\n        reset() - turtle will erase everything\n        drawRectenglePattern() - will call draw rectangle\n                                center position is x, y of circular pattern drawn\n                                Off\n        drawRectangle() - draw a single rectangle\n        drawCirclePatten() -\n        drawSuperPattern() - randomly draw rectangle and circle patterns based on random values\n        drawRandomColor()- do not use any perameters and make turtle draw in 1/4 random colors\n        done()-called when user quits, keeps window open\n\n\n\nTesting", "System Req\n\n\n\n\nSystem Analysis\n\n\n\n\nSystem Des    the pattern module will have several function\n        setup() -\nign will make turtle draw quickly\n                    make turtle have a window of 1000 * 800\n        reset() - turtle will erase everything\n        drawRectenglePattern() - will call draw rectangle\n                                center position is x, y of circular pattern drawn\n                                Offe\n        drawRectangle() - draw a single rectangle\n        drawCirclePatten() -\n        drawSuperPattern() - randomly draw rectangle and circle patterns based on random values\n        drawRandomColor()- do not use any perameters and make turtle draw in 1/4 random colors\n        done()-called when user quits, keeps window open\n\n\n\nTesting", "System Req\n\n\n\n\nSystem Analysis\n\n\n\n\nSystem Des    the pattern module will have several function\n        setup() -\nign will make turtle draw quickly\n                    make turtle have a window of 1000 * 800\n        reset() - turtle will erase everything\n        drawRectenglePattern() - will call draw rectangle\n                                center position is x, y of circular pattern drawn\n                                Off\n        drawRectangle() - draw a single rectangle\n        drawCirclePatten() -\n        drawSuperPattern() - randomly draw rectangle and circle patterns based on random values\n        drawRandomColor()- do not use any perameters and make turtle draw in 1/4 random colors\n        done()-called when user quits, keeps window open\n\n\n\nTesting", "System Req\n\n\n\n\nSystem Analysis\n\n\n\n\nSystem Des    the pattern module will have several function\n        setup() -\nign will make turtle draw quickly\n                    make turtle have a window of 1000 * 800\n        reset() - turtle will erase everything\n        drawRectenglePattern() - will call draw rectangle\n                                center position is x, y of circular pattern drawn\n                                Offs\n        drawRectangle() - draw a single rectangle\n        drawCirclePatten() -\n        drawSuperPattern() - randomly draw rectangle and circle patterns based on random values\n        drawRandomColor()- do not use any perameters and make turtle draw in 1/4 random colors\n        done()-called when user quits, keeps window open\n\n\n\nTesting", "System Req\n\n\n\n\nSystem Analysis\n\n\n\n\nSystem Des    the pattern module will have several function\n        setup() -\nign will make turtle draw quickly\n                    make turtle have a window of 1000 * 800\n        reset() - turtle will erase everything\n        drawRectenglePattern() - will call draw rectangle\n                                center position is x, y of circular pattern drawn\n                                Offst\n        drawRectangle() - draw a single rectangle\n        drawCirclePatten() -\n        drawSuperPattern() - randomly draw rectangle and circle patterns based on random values\n        drawRandomColor()- do not use any perameters and make turtle draw in 1/4 random colors\n        done()-called when user quits, keeps window open\n\n\n\nTesting", "System Req\n\n\n\n\nSystem Analysis\n\n\n\n\nSystem Des    the pattern module will have several function\n        setup() -\nign will make turtle draw quickly\n                    make turtle have a window of 1000 * 800\n        reset() - turtle will erase everything\n        drawRectenglePattern() - will call draw rectangle\n                                center position is x, y of circular pattern drawn\n                                Offste\n        drawRectangle() - draw a single rectangle\n        drawCirclePatten() -\n        drawSuperPattern() - randomly draw rectangle and circle patterns based on random values\n        drawRandomColor()- do not use any perameters and make turtle draw in 1/4 random colors\n        done()-called when user quits, keeps window open\n\n\n\nTesting", "System Req\n\n\n\n\nSystem Analysis\n\n\n\n\nSystem Des    the pattern module will have several function\n        setup() -\nign will make turtle draw quickly\n                    make turtle have a window of 1000 * 800\n        reset() - turtle will erase everything\n        drawRectenglePattern() - will call draw rectangle\n                                center position is x, y of circular pattern drawn\n                                Offsten\n        drawRectangle() - draw a single rectangle\n        drawCirclePatten() -\n        drawSuperPattern() - randomly draw rectangle and circle patterns based on random values\n        drawRandomColor()- do not use any perameters and make turtle draw in 1/4 random colors\n        done()-called when user quits, keeps window open\n\n\n\nTesting", "System Req\n\n\n\n\nSystem Analysis\n\n\n\n\nSystem Des    the pattern module will have several function\n        setup() -\nign will make turtle draw quickly\n                    make turtle have a window of 1000 * 800\n        reset() - turtle will erase everything\n        drawRectenglePattern() - will call draw rectangle\n                                center position is x, y of circular pattern drawn\n                                Offste\n        drawRectangle() - draw a single rectangle\n        drawCirclePatten() -\n        drawSuperPattern() - randomly draw rectangle and circle patterns based on random values\n        drawRandomColor()- do not use any perameters and make turtle draw in 1/4 random colors\n        done()-called when user quits, keeps window open\n\n\n\nTesting", "System Req\n\n\n\n\nSystem Analysis\n\n\n\n\nSystem Des    the pattern module will have several function\n        setup() -\nign will make turtle draw quickly\n                    make turtle have a window of 1000 * 800\n        reset() - turtle will erase everything\n        drawRectenglePattern() - will call draw rectangle\n                                center position is x, y of circular pattern drawn\n                                Offstet\n        drawRectangle() - draw a single rectangle\n        drawCirclePatten() -\n        drawSuperPattern() - randomly draw rectangle and circle patterns based on random values\n        drawRandomColor()- do not use any perameters and make turtle draw in 1/4 random colors\n        done()-called when user quits, keeps window open\n\n\n\nTesting", "System Req\n\n\n\n\nSystem Analysis\n\n\n\n\nSystem Des    the pattern module will have several function\n        setup() -\nign will make turtle draw quickly\n                    make turtle have a window of 1000 * 800\n        reset() - turtle will erase everything\n        drawRectenglePattern() - will call draw rectangle\n                                center position is x, y of circular pattern drawn\n                                Offste\n        drawRectangle() - draw a single rectangle\n        drawCirclePatten() -\n        drawSuperPattern() - randomly draw rectangle and circle patterns based on random values\n        drawRandomColor()- do not use any perameters and make turtle draw in 1/4 random colors\n        done()-called when user quits, keeps window open\n\n\n\nTesting", "System Req\n\n\n\n\nSystem Analysis\n\n\n\n\nSystem Des    the pattern module will have several function\n        setup() -\nign will make turtle draw quickly\n                    make turtle have a window of 1000 * 800\n        reset() - turtle will erase everything\n        drawRectenglePattern() - will call draw rectangle\n                                center position is x, y of circular pattern drawn\n                                Offst\n        drawRectangle() - draw a single rectangle\n        drawCirclePatten() -\n        drawSuperPattern() - randomly draw rectangle and circle patterns based on random values\n        drawRandomColor()- do not use any perameters and make turtle draw in 1/4 random colors\n        done()-called when user quits, keeps window open\n\n\n\nTesting", "System Req\n\n\n\n\nSystem Analysis\n\n\n\n\nSystem Des    the pattern module will have several function\n        setup() -\nign will make turtle draw quickly\n                    make turtle have a window of 1000 * 800\n        reset() - turtle will erase everything\n        drawRectenglePattern() - will call draw rectangle\n                                center position is x, y of circular pattern drawn\n                                Offs\n        drawRectangle() - draw a single rectangle\n        drawCirclePatten() -\n        drawSuperPattern() - randomly draw rectangle and circle patterns based on random values\n        drawRandomColor()- do not use any perameters and make turtle draw in 1/4 random colors\n        done()-called when user quits, keeps window open\n\n\n\nTesting", "System Req\n\n\n\n\nSystem Analysis\n\n\n\n\nSystem Des    the pattern module will have several function\n        setup() -\nign will make turtle draw quickly\n                    make turtle have a window of 1000 * 800\n        reset() - turtle will erase everything\n        drawRectenglePattern() - will call draw rectangle\n                                center position is x, y of circular pattern drawn\n                                Offse\n        drawRectangle() - draw a single rectangle\n        drawCirclePatten() -\n        drawSuperPattern() - randomly draw rectangle and circle patterns based on random values\n        drawRandomColor()- do not use any perameters and make turtle draw in 1/4 random colors\n        done()-called when user quits, keeps window open\n\n\n\nTesting", "System Req\n\n\n\n\nSystem Analysis\n\n\n\n\nSystem Des    the pattern module will have several function\n        setup() -\nign will make turtle draw quickly\n                    make turtle have a window of 1000 * 800\n        reset() - turtle will erase everything\n        drawRectenglePattern() - will call draw rectangle\n                                center position is x, y of circular pattern drawn\n                                Offset\n        drawRectangle() - draw a single rectangle\n        drawCirclePatten() -\n        drawSuperPattern() - randomly draw rectangle and circle patterns based on random values\n        drawRandomColor()- do not use any perameters and make turtle draw in 1/4 random colors\n        done()-called when user quits, keeps window open\n\n\n\nTesting", "System Req\n\n\n\n\nSystem Analysis\n\n\n\n\nSystem Des    the pattern module will have several function\n        setup() -\nign will make turtle draw quickly\n                    make turtle have a window of 1000 * 800\n        reset() - turtle will erase everything\n        drawRectenglePattern() - will call draw rectangle\n                                center position is x, y of circular pattern drawn\n                                Offset-\n        drawRectangle() - draw a single rectangle\n        drawCirclePatten() -\n        drawSuperPattern() - randomly draw rectangle and circle patterns based on random values\n        drawRandomColor()- do not use any perameters and make turtle draw in 1/4 random colors\n        done()-called when user quits, keeps window open\n\n\n\nTesting", "System Req\n\n\n\n\nSystem Analysis\n\n\n\n\nSystem Des    the pattern module will have several function\n        setup() -\nign will make turtle draw quickly\n                    make turtle have a window of 1000 * 800\n        reset() - turtle will erase everything\n        drawRectenglePattern() - will call draw rectangle\n                                center position is x, y of circular pattern drawn\n                                Offset- d\n        drawRectangle() - draw a single rectangle\n        drawCirclePatten() -\n        drawSuperPattern() - randomly draw rectangle and circle patterns based on random values\n        drawRandomColor()- do not use any perameters and make turtle draw in 1/4 random colors\n        done()-called when user quits, keeps window open\n\n\n\nTesting", "System Req\n\n\n\n\nSystem Analysis\n\n\n\n\nSystem Des    the pattern module will have several function\n        setup() -\nign will make turtle draw quickly\n                    make turtle have a window of 1000 * 800\n        reset() - turtle will erase everything\n        drawRectenglePattern() - will call draw rectangle\n                                center position is x, y of circular pattern drawn\n                                Offset- di\n        drawRectangle() - draw a single rectangle\n        drawCirclePatten() -\n        drawSuperPattern() - randomly draw rectangle and circle patterns based on random values\n        drawRandomColor()- do not use any perameters and make turtle draw in 1/4 random colors\n        done()-called when user quits, keeps window open\n\n\n\nTesting", "System Req\n\n\n\n\nSystem Analysis\n\n\n\n\nSystem Des    the pattern module will have several function\n        setup() -\nign will make turtle draw quickly\n                    make turtle have a window of 1000 * 800\n        reset() - turtle will erase everything\n        drawRectenglePattern() - will call draw rectangle\n                                center position is x, y of circular pattern drawn\n                                Offset- dis\n        drawRectangle() - draw a single rectangle\n        drawCirclePatten() -\n        drawSuperPattern() - randomly draw rectangle and circle patterns based on random values\n        drawRandomColor()- do not use any perameters and make turtle draw in 1/4 random colors\n        done()-called when user quits, keeps window open\n\n\n\nTesting", "System Req\n\n\n\n\nSystem Analysis\n\n\n\n\nSystem Des    the pattern module will have several function\n        setup() -\nign will make turtle draw quickly\n                    make turtle have a window of 1000 * 800\n        reset() - turtle will erase everything\n        drawRectenglePattern() - will call draw rectangle\n                                center position is x, y of circular pattern drawn\n                                Offset- dist\n        drawRectangle() - draw a single rectangle\n        drawCirclePatten() -\n        drawSuperPattern() - randomly draw rectangle and circle patterns based on random values\n        drawRandomColor()- do not use any perameters and make turtle draw in 1/4 random colors\n        done()-called when user quits, keeps window open\n\n\n\nTesting", "System Req\n\n\n\n\nSystem Analysis\n\n\n\n\nSystem Des    the pattern module will have several function\n        setup() -\nign will make turtle draw quickly\n                    make turtle have a window of 1000 * 800\n        reset() - turtle will erase everything\n        drawRectenglePattern() - will call draw rectangle\n                                center position is x, y of circular pattern drawn\n                                Offset- dista\n        drawRectangle() - draw a single rectangle\n        drawCirclePatten() -\n        drawSuperPattern() - randomly draw rectangle and circle patterns based on random values\n        drawRandomColor()- do not use any perameters and make turtle draw in 1/4 random colors\n        done()-called when user quits, keeps window open\n\n\n\nTesting", "System Req\n\n\n\n\nSystem Analysis\n\n\n\n\nSystem Des    the pattern module will have several function\n        setup() -\nign will make turtle draw quickly\n                    make turtle have a window of 1000 * 800\n        reset() - turtle will erase everything\n        drawRectenglePattern() - will call draw rectangle\n                                center position is x, y of circular pattern drawn\n                                Offset- distan\n        drawRectangle() - draw a single rectangle\n        drawCirclePatten() -\n        drawSuperPattern() - randomly draw rectangle and circle patterns based on random values\n        drawRandomColor()- do not use any perameters and make turtle draw in 1/4 random colors\n        done()-called when user quits, keeps window open\n\n\n\nTesting", "System Req\n\n\n\n\nSystem Analysis\n\n\n\n\nSystem Des    the pattern module will have several function\n        setup() -\nign will make turtle draw quickly\n                    make turtle have a window of 1000 * 800\n        reset() - turtle will erase everything\n        drawRectenglePattern() - will call draw rectangle\n                                center position is x, y of circular pattern drawn\n                                Offset- distanc\n        drawRectangle() - draw a single rectangle\n        drawCirclePatten() -\n        drawSuperPattern() - randomly draw rectangle and circle patterns based on random values\n        drawRandomColor()- do not use any perameters and make turtle draw in 1/4 random colors\n        done()-called when user quits, keeps window open\n\n\n\nTesting", "System Req\n\n\n\n\nSystem Analysis\n\n\n\n\nSystem Des    the pattern module will have several function\n        setup() -\nign will make turtle draw quickly\n                    make turtle have a window of 1000 * 800\n        reset() - turtle will erase everything\n        drawRectenglePattern() - will call draw rectangle\n                                center position is x, y of circular pattern drawn\n                                Offset- distance\n        drawRectangle() - draw a single rectangle\n        drawCirclePatten() -\n        drawSuperPattern() - randomly draw rectangle and circle patterns based on random values\n        drawRandomColor()- do not use any perameters and make turtle draw in 1/4 random colors\n        done()-called when user quits, keeps window open\n\n\n\nTesting", "System Req\n\n\n\n\nSystem Analysis\n\n\n\n\nSystem Des    the pattern module will have several function\n        setup() -\nign will make turtle draw quickly\n                    make turtle have a window of 1000 * 800\n        reset() - turtle will erase everything\n        drawRectenglePattern() - will call draw rectangle\n                                center position is x, y of circular pattern drawn\n                                Offset- distance f\n        drawRectangle() - draw a single rectangle\n        drawCirclePatten() -\n        drawSuperPattern() - randomly draw rectangle and circle patterns based on random values\n        drawRandomColor()- do not use any perameters and make turtle draw in 1/4 random colors\n        done()-called when user quits, keeps window open\n\n\n\nTesting", "System Req\n\n\n\n\nSystem Analysis\n\n\n\n\nSystem Des    the pattern module will have several function\n        setup() -\nign will make turtle draw quickly\n                    make turtle have a window of 1000 * 800\n        reset() - turtle will erase everything\n        drawRectenglePattern() - will call draw rectangle\n                                center position is x, y of circular pattern drawn\n                                Offset- distance fr\n        drawRectangle() - draw a single rectangle\n        drawCirclePatten() -\n        drawSuperPattern() - randomly draw rectangle and circle patterns based on random values\n        drawRandomColor()- do not use any perameters and make turtle draw in 1/4 random colors\n        done()-called when user quits, keeps window open\n\n\n\nTesting", "System Req\n\n\n\n\nSystem Analysis\n\n\n\n\nSystem Des    the pattern module will have several function\n        setup() -\nign will make turtle draw quickly\n                    make turtle have a window of 1000 * 800\n        reset() - turtle will erase everything\n        drawRectenglePattern() - will call draw rectangle\n                                center position is x, y of circular pattern drawn\n                                Offset- distance fro\n        drawRectangle() - draw a single rectangle\n        drawCirclePatten() -\n        drawSuperPattern() - randomly draw rectangle and circle patterns based on random values\n        drawRandomColor()- do not use any perameters and make turtle draw in 1/4 random colors\n        done()-called when user quits, keeps window open\n\n\n\nTesting", "System Req\n\n\n\n\nSystem Analysis\n\n\n\n\nSystem Des    the pattern module will have several function\n        setup() -\nign will make turtle draw quickly\n                    make turtle have a window of 1000 * 800\n        reset() - turtle will erase everything\n        drawRectenglePattern() - will call draw rectangle\n                                center position is x, y of circular pattern drawn\n                                Offset- distance from\n        drawRectangle() - draw a single rectangle\n        drawCirclePatten() -\n        drawSuperPattern() - randomly draw rectangle and circle patterns based on random values\n        drawRandomColor()- do not use any perameters and make turtle draw in 1/4 random colors\n        done()-called when user quits, keeps window open\n\n\n\nTesting", "System Req\n\n\n\n\nSystem Analysis\n\n\n\n\nSystem Des    the pattern module will have several function\n        setup() -\nign will make turtle draw quickly\n                    make turtle have a window of 1000 * 800\n        reset() - turtle will erase everything\n        drawRectenglePattern() - will call draw rectangle\n                                center position is x, y of circular pattern drawn\n                                Offset- distance from c\n        drawRectangle() - draw a single rectangle\n        drawCirclePatten() -\n        drawSuperPattern() - randomly draw rectangle and circle patterns based on random values\n        drawRandomColor()- do not use any perameters and make turtle draw in 1/4 random colors\n        done()-called when user quits, keeps window open\n\n\n\nTesting", "System Req\n\n\n\n\nSystem Analysis\n\n\n\n\nSystem Des    the pattern module will have several function\n        setup() -\nign will make turtle draw quickly\n                    make turtle have a window of 1000 * 800\n        reset() - turtle will erase everything\n        drawRectenglePattern() - will call draw rectangle\n                                center position is x, y of circular pattern drawn\n                                Offset- distance from ce\n        drawRectangle() - draw a single rectangle\n        drawCirclePatten() -\n        drawSuperPattern() - randomly draw rectangle and circle patterns based on random values\n        drawRandomColor()- do not use any perameters and make turtle draw in 1/4 random colors\n        done()-called when user quits, keeps window open\n\n\n\nTesting", "System Req\n\n\n\n\nSystem Analysis\n\n\n\n\nSystem Des    the pattern module will have several function\n        setup() -\nign will make turtle draw quickly\n                    make turtle have a window of 1000 * 800\n        reset() - turtle will erase everything\n        drawRectenglePattern() - will call draw rectangle\n                                center position is x, y of circular pattern drawn\n                                Offset- distance from cen\n        drawRectangle() - draw a single rectangle\n        drawCirclePatten() -\n        drawSuperPattern() - randomly draw rectangle and circle patterns based on random values\n        drawRandomColor()- do not use any perameters and make turtle draw in 1/4 random colors\n        done()-called when user quits, keeps window open\n\n\n\nTesting", "System Req\n\n\n\n\nSystem Analysis\n\n\n\n\nSystem Des    the pattern module will have several function\n        setup() -\nign will make turtle draw quickly\n                    make turtle have a window of 1000 * 800\n        reset() - turtle will erase everything\n        drawRectenglePattern() - will call draw rectangle\n                                center position is x, y of circular pattern drawn\n                                Offset- distance from cent\n        drawRectangle() - draw a single rectangle\n        drawCirclePatten() -\n        drawSuperPattern() - randomly draw rectangle and circle patterns based on random values\n        drawRandomColor()- do not use any perameters and make turtle draw in 1/4 random colors\n        done()-called when user quits, keeps window open\n\n\n\nTesting", "System Req\n\n\n\n\nSystem Analysis\n\n\n\n\nSystem Des    the pattern module will have several function\n        setup() -\nign will make turtle draw quickly\n                    make turtle have a window of 1000 * 800\n        reset() - turtle will erase everything\n        drawRectenglePattern() - will call draw rectangle\n                                center position is x, y of circular pattern drawn\n                                Offset- distance from cente\n        drawRectangle() - draw a single rectangle\n        drawCirclePatten() -\n        drawSuperPattern() - randomly draw rectangle and circle patterns based on random values\n        drawRandomColor()- do not use any perameters and make turtle draw in 1/4 random colors\n        done()-called when user quits, keeps window open\n\n\n\nTesting", "System Req\n\n\n\n\nSystem Analysis\n\n\n\n\nSystem Des    the pattern module will have several function\n        setup() -\nign will make turtle draw quickly\n                    make turtle have a window of 1000 * 800\n        reset() - turtle will erase everything\n        drawRectenglePattern() - will call draw rectangle\n                                center position is x, y of circular pattern drawn\n                                Offset- distance from center\n        drawRectangle() - draw a single rectangle\n        drawCirclePatten() -\n        drawSuperPattern() - randomly draw rectangle and circle patterns based on random values\n        drawRandomColor()- do not use any perameters and make turtle draw in 1/4 random colors\n        done()-called when user quits, keeps window open\n\n\n\nTesting", "System Req\n\n\n\n\nSystem Analysis\n\n\n\n\nSystem Des    the pattern module will have several function\n        setup() -\nign will make turtle draw quickly\n                    make turtle have a window of 1000 * 800\n        reset() - turtle will erase everything\n        drawRectenglePattern() - will call draw rectangle\n                                center position is x, y of circular pattern drawn\n                                Offset- distance from center t\n        drawRectangle() - draw a single rectangle\n        drawCirclePatten() -\n        drawSuperPattern() - randomly draw rectangle and circle patterns based on random values\n        drawRandomColor()- do not use any perameters and make turtle draw in 1/4 random colors\n        done()-called when user quits, keeps window open\n\n\n\nTesting", "System Req\n\n\n\n\nSystem Analysis\n\n\n\n\nSystem Des    the pattern module will have several function\n        setup() -\nign will make turtle draw quickly\n                    make turtle have a window of 1000 * 800\n        reset() - turtle will erase everything\n        drawRectenglePattern() - will call draw rectangle\n                                center position is x, y of circular pattern drawn\n                                Offset- distance from center to\n        drawRectangle() - draw a single rectangle\n        drawCirclePatten() -\n        drawSuperPattern() - randomly draw rectangle and circle patterns based on random values\n        drawRandomColor()- do not use any perameters and make turtle draw in 1/4 random colors\n        done()-called when user quits, keeps window open\n\n\n\nTesting", "System Req\n\n\n\n\nSystem Analysis\n\n\n\n\nSystem Des    the pattern module will have several function\n        setup() -\nign will make turtle draw quickly\n                    make turtle have a window of 1000 * 800\n        reset() - turtle will erase everything\n        drawRectenglePattern() - will call draw rectangle\n                                center position is x, y of circular pattern drawn\n                                Offset- distance from center to s\n        drawRectangle() - draw a single rectangle\n        drawCirclePatten() -\n        drawSuperPattern() - randomly draw rectangle and circle patterns based on random values\n        drawRandomColor()- do not use any perameters and make turtle draw in 1/4 random colors\n        done()-called when user quits, keeps window open\n\n\n\nTesting", "System Req\n\n\n\n\nSystem Analysis\n\n\n\n\nSystem Des    the pattern module will have several function\n        setup() -\nign will make turtle draw quickly\n                    make turtle have a window of 1000 * 800\n        reset() - turtle will erase everything\n        drawRectenglePattern() - will call draw rectangle\n                                center position is x, y of circular pattern drawn\n                                Offset- distance from center to st\n        drawRectangle() - draw a single rectangle\n        drawCirclePatten() -\n        drawSuperPattern() - randomly draw rectangle and circle patterns based on random values\n        drawRandomColor()- do not use any perameters and make turtle draw in 1/4 random colors\n        done()-called when user quits, keeps window open\n\n\n\nTesting", "System Req\n\n\n\n\nSystem Analysis\n\n\n\n\nSystem Des    the pattern module will have several function\n        setup() -\nign will make turtle draw quickly\n                    make turtle have a window of 1000 * 800\n        reset() - turtle will erase everything\n        drawRectenglePattern() - will call draw rectangle\n                                center position is x, y of circular pattern drawn\n                                Offset- distance from center to sta\n        drawRectangle() - draw a single rectangle\n        drawCirclePatten() -\n        drawSuperPattern() - randomly draw rectangle and circle patterns based on random values\n        drawRandomColor()- do not use any perameters and make turtle draw in 1/4 random colors\n        done()-called when user quits, keeps window open\n\n\n\nTesting", "System Req\n\n\n\n\nSystem Analysis\n\n\n\n\nSystem Des    the pattern module will have several function\n        setup() -\nign will make turtle draw quickly\n                    make turtle have a window of 1000 * 800\n        reset() - turtle will erase everything\n        drawRectenglePattern() - will call draw rectangle\n                                center position is x, y of circular pattern drawn\n                                Offset- distance from center to star\n        drawRectangle() - draw a single rectangle\n        drawCirclePatten() -\n        drawSuperPattern() - randomly draw rectangle and circle patterns based on random values\n        drawRandomColor()- do not use any perameters and make turtle draw in 1/4 random colors\n        done()-called when user quits, keeps window open\n\n\n\nTesting", "System Req\n\n\n\n\nSystem Analysis\n\n\n\n\nSystem Des    the pattern module will have several function\n        setup() -\nign will make turtle draw quickly\n                    make turtle have a window of 1000 * 800\n        reset() - turtle will erase everything\n        drawRectenglePattern() - will call draw rectangle\n                                center position is x, y of circular pattern drawn\n                                Offset- distance from center to start\n        drawRectangle() - draw a single rectangle\n        drawCirclePatten() -\n        drawSuperPattern() - randomly draw rectangle and circle patterns based on random values\n        drawRandomColor()- do not use any perameters and make turtle draw in 1/4 random colors\n        done()-called when user quits, keeps window open\n\n\n\nTesting", "System Req\n\n\n\n\nSystem Analysis\n\n\n\n\nSystem Des    the pattern module will have several function\n        setup() -\nign will make turtle draw quickly\n                    make turtle have a window of 1000 * 800\n        reset() - turtle will erase everything\n        drawRectenglePattern() - will call draw rectangle\n                                center position is x, y of circular pattern drawn\n                                Offset- distance from center to starti\n        drawRectangle() - draw a single rectangle\n        drawCirclePatten() -\n        drawSuperPattern() - randomly draw rectangle and circle patterns based on random values\n        drawRandomColor()- do not use any perameters and make turtle draw in 1/4 random colors\n        done()-called when user quits, keeps window open\n\n\n\nTesting", "System Req\n\n\n\n\nSystem Analysis\n\n\n\n\nSystem Des    the pattern module will have several function\n        setup() -\nign will make turtle draw quickly\n                    make turtle have a window of 1000 * 800\n        reset() - turtle will erase everything\n        drawRectenglePattern() - will call draw rectangle\n                                center position is x, y of circular pattern drawn\n                                Offset- distance from center to startin\n        drawRectangle() - draw a single rectangle\n        drawCirclePatten() -\n        drawSuperPattern() - randomly draw rectangle and circle patterns based on random values\n        drawRandomColor()- do not use any perameters and make turtle draw in 1/4 random colors\n        done()-called when user quits, keeps window open\n\n\n\nTesting", "System Req\n\n\n\n\nSystem Analysis\n\n\n\n\nSystem Des    the pattern module will have several function\n        setup() -\nign will make turtle draw quickly\n                    make turtle have a window of 1000 * 800\n        reset() - turtle will erase everything\n        drawRectenglePattern() - will call draw rectangle\n                                center position is x, y of circular pattern drawn\n                                Offset- distance from center to starting\n        drawRectangle() - draw a single rectangle\n        drawCirclePatten() -\n        drawSuperPattern() - randomly draw rectangle and circle patterns based on random values\n        drawRandomColor()- do not use any perameters and make turtle draw in 1/4 random colors\n        done()-called when user quits, keeps window open\n\n\n\nTesting", "System Req\n\n\n\n\nSystem Analysis\n\n\n\n\nSystem Des    the pattern module will have several function\n        setup() -\nign will make turtle draw quickly\n                    make turtle have a window of 1000 * 800\n        reset() - turtle will erase everything\n        drawRectenglePattern() - will call draw rectangle\n                                center position is x, y of circular pattern drawn\n                                Offset- distance from center to starting c\n        drawRectangle() - draw a single rectangle\n        drawCirclePatten() -\n        drawSuperPattern() - randomly draw rectangle and circle patterns based on random values\n        drawRandomColor()- do not use any perameters and make turtle draw in 1/4 random colors\n        done()-called when user quits, keeps window open\n\n\n\nTesting", "System Req\n\n\n\n\nSystem Analysis\n\n\n\n\nSystem Des    the pattern module will have several function\n        setup() -\nign will make turtle draw quickly\n                    make turtle have a window of 1000 * 800\n        reset() - turtle will erase everything\n        drawRectenglePattern() - will call draw rectangle\n                                center position is x, y of circular pattern drawn\n                                Offset- distance from center to starting co\n        drawRectangle() - draw a single rectangle\n        drawCirclePatten() -\n        drawSuperPattern() - randomly draw rectangle and circle patterns based on random values\n        drawRandomColor()- do not use any perameters and make turtle draw in 1/4 random colors\n        done()-called when user quits, keeps window open\n\n\n\nTesting", "System Req\n\n\n\n\nSystem Analysis\n\n\n\n\nSystem Des    the pattern module will have several function\n        setup() -\nign will make turtle draw quickly\n                    make turtle have a window of 1000 * 800\n        reset() - turtle will erase everything\n        drawRectenglePattern() - will call draw rectangle\n                                center position is x, y of circular pattern drawn\n                                Offset- distance from center to starting cor\n        drawRectangle() - draw a single rectangle\n        drawCirclePatten() -\n        drawSuperPattern() - randomly draw rectangle and circle patterns based on random values\n        drawRandomColor()- do not use any perameters and make turtle draw in 1/4 random colors\n        done()-called when user quits, keeps window open\n\n\n\nTesting", "System Req\n\n\n\n\nSystem Analysis\n\n\n\n\nSystem Des    the pattern module will have several function\n        setup() -\nign will make turtle draw quickly\n                    make turtle have a window of 1000 * 800\n        reset() - turtle will erase everything\n        drawRectenglePattern() - will call draw rectangle\n                                center position is x, y of circular pattern drawn\n                                Offset- distance from center to starting corn\n        drawRectangle() - draw a single rectangle\n        drawCirclePatten() -\n        drawSuperPattern() - randomly draw rectangle and circle patterns based on random values\n        drawRandomColor()- do not use any perameters and make turtle draw in 1/4 random colors\n        done()-called when user quits, keeps window open\n\n\n\nTesting", "System Req\n\n\n\n\nSystem Analysis\n\n\n\n\nSystem Des    the pattern module will have several function\n        setup() -\nign will make turtle draw quickly\n                    make turtle have a window of 1000 * 800\n        reset() - turtle will erase everything\n        drawRectenglePattern() - will call draw rectangle\n                                center position is x, y of circular pattern drawn\n                                Offset- distance from center to starting corne\n        drawRectangle() - draw a single rectangle\n        drawCirclePatten() -\n        drawSuperPattern() - randomly draw rectangle and circle patterns based on random values\n        drawRandomColor()- do not use any perameters and make turtle draw in 1/4 random colors\n        done()-called when user quits, keeps window open\n\n\n\nTesting", "System Req\n\n\n\n\nSystem Analysis\n\n\n\n\nSystem Des    the pattern module will have several function\n        setup() -\nign will make turtle draw quickly\n                    make turtle have a window of 1000 * 800\n        reset() - turtle will erase everything\n        drawRectenglePattern() - will call draw rectangle\n                                center position is x, y of circular pattern drawn\n                                Offset- distance from center to starting corner\n        drawRectangle() - draw a single rectangle\n        drawCirclePatten() -\n        drawSuperPattern() - randomly draw rectangle and circle patterns based on random values\n        drawRandomColor()- do not use any perameters and make turtle draw in 1/4 random colors\n        done()-called when user quits, keeps window open\n\n\n\nTesting", "System Req\n\n\n\n\nSystem Analysis\n\n\n\n\nSystem Des   \n\nuser input the pattern module will have several function\n        setup() -\nign will make turtle draw quickly\n                    make turtle have a window of 1000 * 800\n        reset() - turtle will erase everything\n        drawRectenglePattern() - will call draw rectangle\n                                center position is x, y of circular pattern drawn\n                                Offset- distance from center to starting corner\n        drawRectangle() - draw a single rectangle\n        drawCirclePatten() -\n        drawSuperPattern() - randomly draw rectangle and circle patterns based on random values\n        drawRandomColor()- do not use any perameters and make turtle draw in 1/4 random colors\n        done()-called when user quits, keeps window open\n\n\n\nTesting", "System Req\n\n\n\n\nSystem Analysis\n\n\n\n\nSystem Des   \n\nuser input the pattern module will have several function\n        setup() -\nign will make turtle draw quickly\n                    make turtle have a window of 1000 * 800\n        reset() - turtle will erase everything\n        drawRectenglePattern() - will call draw rectangle\n                                center position is x, y of circular pattern drawn\n                                Offset- distance from center to starting corner\n\n        drawRectangle() - draw a single rectangle\n        drawCirclePatten() -\n        drawSuperPattern() - randomly draw rectangle and circle patterns based on random values\n        drawRandomColor()- do not use any perameters and make turtle draw in 1/4 random colors\n        done()-called when user quits, keeps window open\n\n\n\nTesting", "System Req\n\n\n\n\nSystem Analysis\n\n\n\n\nSystem Des   \n\nuser inpu the pattern module will have several function\n        setup() -\nign will make turtle draw quickly\n                    make turtle have a window of 1000 * 800\n        reset() - turtle will erase everything\n        drawRectenglePattern() - will call draw rectangle\n                                center position is x, y of circular pattern drawn\n                                Offset- distance from center to starting corner\n\n        drawRectangle() - draw a single rectangle\n        drawCirclePatten() -\n        drawSuperPattern() - randomly draw rectangle and circle patterns based on random values\n        drawRandomColor()- do not use any perameters and make turtle draw in 1/4 random colors\n        done()-called when user quits, keeps window open\n\n\n\nTesting", "System Req\n\n\n\n\nSystem Analysis\n\n\n\n\nSystem Des   \n\nuser inp the pattern module will have several function\n        setup() -\nign will make turtle draw quickly\n                    make turtle have a window of 1000 * 800\n        reset() - turtle will erase everything\n        drawRectenglePattern() - will call draw rectangle\n                                center position is x, y of circular pattern drawn\n                                Offset- distance from center to starting corner\n\n        drawRectangle() - draw a single rectangle\n        drawCirclePatten() -\n        drawSuperPattern() - randomly draw rectangle and circle patterns based on random values\n        drawRandomColor()- do not use any perameters and make turtle draw in 1/4 random colors\n        done()-called when user quits, keeps window open\n\n\n\nTesting", "System Req\n\n\n\n\nSystem Analysis\n\n\n\n\nSystem Des   \n\nuser in the pattern module will have several function\n        setup() -\nign will make turtle draw quickly\n                    make turtle have a window of 1000 * 800\n        reset() - turtle will erase everything\n        drawRectenglePattern() - will call draw rectangle\n                                center position is x, y of circular pattern drawn\n                                Offset- distance from center to starting corner\n\n        drawRectangle() - draw a single rectangle\n        drawCirclePatten() -\n        drawSuperPattern() - randomly draw rectangle and circle patterns based on random values\n        drawRandomColor()- do not use any perameters and make turtle draw in 1/4 random colors\n        done()-called when user quits, keeps window open\n\n\n\nTesting", "System Req\n\n\n\n\nSystem Analysis\n\n\n\n\nSystem Des   \n\nuser i the pattern module will have several function\n        setup() -\nign will make turtle draw quickly\n                    make turtle have a window of 1000 * 800\n        reset() - turtle will erase everything\n        drawRectenglePattern() - will call draw rectangle\n                                center position is x, y of circular pattern drawn\n                                Offset- distance from center to starting corner\n\n        drawRectangle() - draw a single rectangle\n        drawCirclePatten() -\n        drawSuperPattern() - randomly draw rectangle and circle patterns based on random values\n        drawRandomColor()- do not use any perameters and make turtle draw in 1/4 random colors\n        done()-called when user quits, keeps window open\n\n\n\nTesting", "System Req\n\n\n\n\nSystem Analysis\n\n\n\n\nSystem Des   \n\nuser  the pattern module will have several function\n        setup() -\nign will make turtle draw quickly\n                    make turtle have a window of 1000 * 800\n        reset() - turtle will erase everything\n        drawRectenglePattern() - will call draw rectangle\n                                center position is x, y of circular pattern drawn\n                                Offset- distance from center to starting corner\n\n        drawRectangle() - draw a single rectangle\n        drawCirclePatten() -\n        drawSuperPattern() - randomly draw rectangle and circle patterns based on random values\n        drawRandomColor()- do not use any perameters and make turtle draw in 1/4 random colors\n        done()-called when user quits, keeps window open\n\n\n\nTesting", "System Req\n\n\n\n\nSystem Analysis\n\n\n\n\nSystem Des   \n\nuser the pattern module will have several function\n        setup() -\nign will make turtle draw quickly\n                    make turtle have a window of 1000 * 800\n        reset() - turtle will erase everything\n        drawRectenglePattern() - will call draw rectangle\n                                center position is x, y of circular pattern drawn\n                                Offset- distance from center to starting corner\n\n        drawRectangle() - draw a single rectangle\n        drawCirclePatten() -\n        drawSuperPattern() - randomly draw rectangle and circle patterns based on random values\n        drawRandomColor()- do not use any perameters and make turtle draw in 1/4 random colors\n        done()-called when user quits, keeps window open\n\n\n\nTesting", "System Req\n\n\n\n\nSystem Analysis\n\n\n\n\nSystem Des   \n\nuse the pattern module will have several function\n        setup() -\nign will make turtle draw quickly\n                    make turtle have a window of 1000 * 800\n        reset() - turtle will erase everything\n        drawRectenglePattern() - will call draw rectangle\n                                center position is x, y of circular pattern drawn\n                                Offset- distance from center to starting corner\n\n        drawRectangle() - draw a single rectangle\n        drawCirclePatten() -\n        drawSuperPattern() - randomly draw rectangle and circle patterns based on random values\n        drawRandomColor()- do not use any perameters and make turtle draw in 1/4 random colors\n        done()-called when user quits, keeps window open\n\n\n\nTesting", "System Req\n\n\n\n\nSystem Analysis\n\n\n\n\nSystem Des   \n\nus the pattern module will have several function\n        setup() -\nign will make turtle draw quickly\n                    make turtle have a window of 1000 * 800\n        reset() - turtle will erase everything\n        drawRectenglePattern() - will call draw rectangle\n                                center position is x, y of circular pattern drawn\n                                Offset- distance from center to starting corner\n\n        drawRectangle() - draw a single rectangle\n        drawCirclePatten() -\n        drawSuperPattern() - randomly draw rectangle and circle patterns based on random values\n        drawRandomColor()- do not use any perameters and make turtle draw in 1/4 random colors\n        done()-called when user quits, keeps window open\n\n\n\nTesting", "System Req\n\n\n\n\nSystem Analysis\n\n\n\n\nSystem Des   \n\nu the pattern module will have several function\n        setup() -\nign will make turtle draw quickly\n                    make turtle have a window of 1000 * 800\n        reset() - turtle will erase everything\n        drawRectenglePattern() - will call draw rectangle\n                                center position is x, y of circular pattern drawn\n                                Offset- distance from center to starting corner\n\n        drawRectangle() - draw a single rectangle\n        drawCirclePatten() -\n        drawSuperPattern() - randomly draw rectangle and circle patterns based on random values\n        drawRandomColor()- do not use any perameters and make turtle draw in 1/4 random colors\n        done()-called when user quits, keeps window open\n\n\n\nTesting", "System Req\n\n\n\n\nSystem Analysis\n\n\n\n\nSystem Des   \n\n the pattern module will have several function\n        setup() -\nign will make turtle draw quickly\n                    make turtle have a window of 1000 * 800\n        reset() - turtle will erase everything\n        drawRectenglePattern() - will call draw rectangle\n                                center position is x, y of circular pattern drawn\n                                Offset- distance from center to starting corner\n\n        drawRectangle() - draw a single rectangle\n        drawCirclePatten() -\n        drawSuperPattern() - randomly draw rectangle and circle patterns based on random values\n        drawRandomColor()- do not use any perameters and make turtle draw in 1/4 random colors\n        done()-called when user quits, keeps window open\n\n\n\nTesting", "System Req\n\n\n\n\nSystem Analysis\n\n\n\n\nSystem Des   \n\n     the pattern module will have several function\n        setup() -\nign will make turtle draw quickly\n                    make turtle have a window of 1000 * 800\n        reset() - turtle will erase everything\n        drawRectenglePattern() - will call draw rectangle\n                                center position is x, y of circular pattern drawn\n                                Offset- distance from center to starting corner\n\n        drawRectangle() - draw a single rectangle\n        drawCirclePatten() -\n        drawSuperPattern() - randomly draw rectangle and circle patterns based on random values\n        drawRandomColor()- do not use any perameters and make turtle draw in 1/4 random colors\n        done()-called when user quits, keeps window open\n\n\n\nTesting", "System Req\n\n\n\n\nSystem Analysis\n\n\n\n\nSystem Des   \n\n    u the pattern module will have several function\n        setup() -\nign will make turtle draw quickly\n                    make turtle have a window of 1000 * 800\n        reset() - turtle will erase everything\n        drawRectenglePattern() - will call draw rectangle\n                                center position is x, y of circular pattern drawn\n                                Offset- distance from center to starting corner\n\n        drawRectangle() - draw a single rectangle\n        drawCirclePatten() -\n        drawSuperPattern() - randomly draw rectangle and circle patterns based on random values\n        drawRandomColor()- do not use any perameters and make turtle draw in 1/4 random colors\n        done()-called when user quits, keeps window open\n\n\n\nTesting", "System Req\n\n\n\n\nSystem Analysis\n\n\n\n\nSystem Des   \n\n    us the pattern module will have several function\n        setup() -\nign will make turtle draw quickly\n                    make turtle have a window of 1000 * 800\n        reset() - turtle will erase everything\n        drawRectenglePattern() - will call draw rectangle\n                                center position is x, y of circular pattern drawn\n                                Offset- distance from center to starting corner\n\n        drawRectangle() - draw a single rectangle\n        drawCirclePatten() -\n        drawSuperPattern() - randomly draw rectangle and circle patterns based on random values\n        drawRandomColor()- do not use any perameters and make turtle draw in 1/4 random colors\n        done()-called when user quits, keeps window open\n\n\n\nTesting", "System Req\n\n\n\n\nSystem Analysis\n\n\n\n\nSystem Des   \n\n    use the pattern module will have several function\n        setup() -\nign will make turtle draw quickly\n                    make turtle have a window of 1000 * 800\n        reset() - turtle will erase everything\n        drawRectenglePattern() - will call draw rectangle\n                                center position is x, y of circular pattern drawn\n                                Offset- distance from center to starting corner\n\n        drawRectangle() - draw a single rectangle\n        drawCirclePatten() -\n        drawSuperPattern() - randomly draw rectangle and circle patterns based on random values\n        drawRandomColor()- do not use any perameters and make turtle draw in 1/4 random colors\n        done()-called when user quits, keeps window open\n\n\n\nTesting", "System Req\n\n\n\n\nSystem Analysis\n\n\n\n\nSystem Des   \n\n    user the pattern module will have several function\n        setup() -\nign will make turtle draw quickly\n                    make turtle have a window of 1000 * 800\n        reset() - turtle will erase everything\n        drawRectenglePattern() - will call draw rectangle\n                                center position is x, y of circular pattern drawn\n                                Offset- distance from center to starting corner\n\n        drawRectangle() - draw a single rectangle\n        drawCirclePatten() -\n        drawSuperPattern() - randomly draw rectangle and circle patterns based on random values\n        drawRandomColor()- do not use any perameters and make turtle draw in 1/4 random colors\n        done()-called when user quits, keeps window open\n\n\n\nTesting", "System Req\n\n\n\n\nSystem Analysis\n\n\n\n\nSystem Des   \n\n    user w the pattern module will have several function\n        setup() -\nign will make turtle draw quickly\n                    make turtle have a window of 1000 * 800\n        reset() - turtle will erase everything\n        drawRectenglePattern() - will call draw rectangle\n                                center position is x, y of circular pattern drawn\n                                Offset- distance from center to starting corner\n\n        drawRectangle() - draw a single rectangle\n        drawCirclePatten() -\n        drawSuperPattern() - randomly draw rectangle and circle patterns based on random values\n        drawRandomColor()- do not use any perameters and make turtle draw in 1/4 random colors\n        done()-called when user quits, keeps window open\n\n\n\nTesting", "System Req\n\n\n\n\nSystem Analysis\n\n\n\n\nSystem Des   \n\n    user wi the pattern module will have several function\n        setup() -\nign will make turtle draw quickly\n                    make turtle have a window of 1000 * 800\n        reset() - turtle will erase everything\n        drawRectenglePattern() - will call draw rectangle\n                                center position is x, y of circular pattern drawn\n                                Offset- distance from center to starting corner\n\n        drawRectangle() - draw a single rectangle\n        drawCirclePatten() -\n        drawSuperPattern() - randomly draw rectangle and circle patterns based on random values\n        drawRandomColor()- do not use any perameters and make turtle draw in 1/4 random colors\n        done()-called when user quits, keeps window open\n\n\n\nTesting", "System Req\n\n\n\n\nSystem Analysis\n\n\n\n\nSystem Des   \n\n    user wil the pattern module will have several function\n        setup() -\nign will make turtle draw quickly\n                    make turtle have a window of 1000 * 800\n        reset() - turtle will erase everything\n        drawRectenglePattern() - will call draw rectangle\n                                center position is x, y of circular pattern drawn\n                                Offset- distance from center to starting corner\n\n        drawRectangle() - draw a single rectangle\n        drawCirclePatten() -\n        drawSuperPattern() - randomly draw rectangle and circle patterns based on random values\n        drawRandomColor()- do not use any perameters and make turtle draw in 1/4 random colors\n        done()-called when user quits, keeps window open\n\n\n\nTesting", "System Req\n\n\n\n\nSystem Analysis\n\n\n\n\nSystem Des   \n\n    user will the pattern module will have several function\n        setup() -\nign will make turtle draw quickly\n                    make turtle have a window of 1000 * 800\n        reset() - turtle will erase everything\n        drawRectenglePattern() - will call draw rectangle\n                                center position is x, y of circular pattern drawn\n                                Offset- distance from center to starting corner\n\n        drawRectangle() - draw a single rectangle\n        drawCirclePatten() -\n        drawSuperPattern() - randomly draw rectangle and circle patterns based on random values\n        drawRandomColor()- do not use any perameters and make turtle draw in 1/4 random colors\n        done()-called when user quits, keeps window open\n\n\n\nTesting", "System Req\n\n\n\n\nSystem Analysis\n\n\n\n\nSystem Des   \n\n    user will i the pattern module will have several function\n        setup() -\nign will make turtle draw quickly\n                    make turtle have a window of 1000 * 800\n        reset() - turtle will erase everything\n        drawRectenglePattern() - will call draw rectangle\n                                center position is x, y of circular pattern drawn\n                                Offset- distance from center to starting corner\n\n        drawRectangle() - draw a single rectangle\n        drawCirclePatten() -\n        drawSuperPattern() - randomly draw rectangle and circle patterns based on random values\n        drawRandomColor()- do not use any perameters and make turtle draw in 1/4 random colors\n        done()-called when user quits, keeps window open\n\n\n\nTesting", "System Req\n\n\n\n\nSystem Analysis\n\n\n\n\nSystem Des   \n\n    user will in the pattern module will have several function\n        setup() -\nign will make turtle draw quickly\n                    make turtle have a window of 1000 * 800\n        reset() - turtle will erase everything\n        drawRectenglePattern() - will call draw rectangle\n                                center position is x, y of circular pattern drawn\n                                Offset- distance from center to starting corner\n\n        drawRectangle() - draw a single rectangle\n        drawCirclePatten() -\n        drawSuperPattern() - randomly draw rectangle and circle patterns based on random values\n        drawRandomColor()- do not use any perameters and make turtle draw in 1/4 random colors\n        done()-called when user quits, keeps window open\n\n\n\nTesting", "System Req\n\n\n\n\nSystem Analysis\n\n\n\n\nSystem Des   \n\n    user will inp the pattern module will have several function\n        setup() -\nign will make turtle draw quickly\n                    make turtle have a window of 1000 * 800\n        reset() - turtle will erase everything\n        drawRectenglePattern() - will call draw rectangle\n                                center position is x, y of circular pattern drawn\n                                Offset- distance from center to starting corner\n\n        drawRectangle() - draw a single rectangle\n        drawCirclePatten() -\n        drawSuperPattern() - randomly draw rectangle and circle patterns based on random values\n        drawRandomColor()- do not use any perameters and make turtle draw in 1/4 random colors\n        done()-called when user quits, keeps window open\n\n\n\nTesting", "System Req\n\n\n\n\nSystem Analysis\n\n\n\n\nSystem Des   \n\n    user will inpu the pattern module will have several function\n        setup() -\nign will make turtle draw quickly\n                    make turtle have a window of 1000 * 800\n        reset() - turtle will erase everything\n        drawRectenglePattern() - will call draw rectangle\n                                center position is x, y of circular pattern drawn\n                                Offset- distance from center to starting corner\n\n        drawRectangle() - draw a single rectangle\n        drawCirclePatten() -\n        drawSuperPattern() - randomly draw rectangle and circle patterns based on random values\n        drawRandomColor()- do not use any perameters and make turtle draw in 1/4 random colors\n        done()-called when user quits, keeps window open\n\n\n\nTesting", "System Req\n\n\n\n\nSystem Analysis\n\n\n\n\nSystem Des   \n\n    user will input the pattern module will have several function\n        setup() -\nign will make turtle draw quickly\n                    make turtle have a window of 1000 * 800\n        reset() - turtle will erase everything\n        drawRectenglePattern() - will call draw rectangle\n                                center position is x, y of circular pattern drawn\n                                Offset- distance from center to starting corner\n\n        drawRectangle() - draw a single rectangle\n        drawCirclePatten() -\n        drawSuperPattern() - randomly draw rectangle and circle patterns based on random values\n        drawRandomColor()- do not use any perameters and make turtle draw in 1/4 random colors\n        done()-called when user quits, keeps window open\n\n\n\nTesting", "System Req\n\n\n\n\nSystem Analysis\n\n\n\n\nSystem Des   \n\n    user will input i the pattern module will have several function\n        setup() -\nign will make turtle draw quickly\n                    make turtle have a window of 1000 * 800\n        reset() - turtle will erase everything\n        drawRectenglePattern() - will call draw rectangle\n                                center position is x, y of circular pattern drawn\n                                Offset- distance from center to starting corner\n\n        drawRectangle() - draw a single rectangle\n        drawCirclePatten() -\n        drawSuperPattern() - randomly draw rectangle and circle patterns based on random values\n        drawRandomColor()- do not use any perameters and make turtle draw in 1/4 random colors\n        done()-called when user quits, keeps window open\n\n\n\nTesting", "System Req\n\n\n\n\nSystem Analysis\n\n\n\n\nSystem Des   \n\n    user will input in the pattern module will have several function\n        setup() -\nign will make turtle draw quickly\n                    make turtle have a window of 1000 * 800\n        reset() - turtle will erase everything\n        drawRectenglePattern() - will call draw rectangle\n                                center position is x, y of circular pattern drawn\n                                Offset- distance from center to starting corner\n\n        drawRectangle() - draw a single rectangle\n        drawCirclePatten() -\n        drawSuperPattern() - randomly draw rectangle and circle patterns based on random values\n        drawRandomColor()- do not use any perameters and make turtle draw in 1/4 random colors\n        done()-called when user quits, keeps window open\n\n\n\nTesting", "System Req\n\n\n\n\nSystem Analysis\n\n\n\n\nSystem Des   \n\n    user will input inf the pattern module will have several function\n        setup() -\nign will make turtle draw quickly\n                    make turtle have a window of 1000 * 800\n        reset() - turtle will erase everything\n        drawRectenglePattern() - will call draw rectangle\n                                center position is x, y of circular pattern drawn\n                                Offset- distance from center to starting corner\n\n        drawRectangle() - draw a single rectangle\n        drawCirclePatten() -\n        drawSuperPattern() - randomly draw rectangle and circle patterns based on random values\n        drawRandomColor()- do not use any perameters and make turtle draw in 1/4 random colors\n        done()-called when user quits, keeps window open\n\n\n\nTesting", "System Req\n\n\n\n\nSystem Analysis\n\n\n\n\nSystem Des   \n\n    user will input info the pattern module will have several function\n        setup() -\nign will make turtle draw quickly\n                    make turtle have a window of 1000 * 800\n        reset() - turtle will erase everything\n        drawRectenglePattern() - will call draw rectangle\n                                center position is x, y of circular pattern drawn\n                                Offset- distance from center to starting corner\n\n        drawRectangle() - draw a single rectangle\n        drawCirclePatten() -\n        drawSuperPattern() - randomly draw rectangle and circle patterns based on random values\n        drawRandomColor()- do not use any perameters and make turtle draw in 1/4 random colors\n        done()-called when user quits, keeps window open\n\n\n\nTesting", "System Req\n\n\n\n\nSystem Analysis\n\n\n\n\nSystem Des   \n\n    user will input infor the pattern module will have several function\n        setup() -\nign will make turtle draw quickly\n                    make turtle have a window of 1000 * 800\n        reset() - turtle will erase everything\n        drawRectenglePattern() - will call draw rectangle\n                                center position is x, y of circular pattern drawn\n                                Offset- distance from center to starting corner\n\n        drawRectangle() - draw a single rectangle\n        drawCirclePatten() -\n        drawSuperPattern() - randomly draw rectangle and circle patterns based on random values\n        drawRandomColor()- do not use any perameters and make turtle draw in 1/4 random colors\n        done()-called when user quits, keeps window open\n\n\n\nTesting", "System Req\n\n\n\n\nSystem Analysis\n\n\n\n\nSystem Des   \n\n    user will input inform the pattern module will have several function\n        setup() -\nign will make turtle draw quickly\n                    make turtle have a window of 1000 * 800\n        reset() - turtle will erase everything\n        drawRectenglePattern() - will call draw rectangle\n                                center position is x, y of circular pattern drawn\n                                Offset- distance from center to starting corner\n\n        drawRectangle() - draw a single rectangle\n        drawCirclePatten() -\n        drawSuperPattern() - randomly draw rectangle and circle patterns based on random values\n        drawRandomColor()- do not use any perameters and make turtle draw in 1/4 random colors\n        done()-called when user quits, keeps window open\n\n\n\nTesting", "System Req\n\n\n\n\nSystem Analysis\n\n\n\n\nSystem Des   \n\n    user will input informa the pattern module will have several function\n        setup() -\nign will make turtle draw quickly\n                    make turtle have a window of 1000 * 800\n        reset() - turtle will erase everything\n        drawRectenglePattern() - will call draw rectangle\n                                center position is x, y of circular pattern drawn\n                                Offset- distance from center to starting corner\n\n        drawRectangle() - draw a single rectangle\n        drawCirclePatten() -\n        drawSuperPattern() - randomly draw rectangle and circle patterns based on random values\n        drawRandomColor()- do not use any perameters and make turtle draw in 1/4 random colors\n        done()-called when user quits, keeps window open\n\n\n\nTesting", "System Req\n\n\n\n\nSystem Analysis\n\n\n\n\nSystem Des   \n\n    user will input informat the pattern module will have several function\n        setup() -\nign will make turtle draw quickly\n                    make turtle have a window of 1000 * 800\n        reset() - turtle will erase everything\n        drawRectenglePattern() - will call draw rectangle\n                                center position is x, y of circular pattern drawn\n                                Offset- distance from center to starting corner\n\n        drawRectangle() - draw a single rectangle\n        drawCirclePatten() -\n        drawSuperPattern() - randomly draw rectangle and circle patterns based on random values\n        drawRandomColor()- do not use any perameters and make turtle draw in 1/4 random colors\n        done()-called when user quits, keeps window open\n\n\n\nTesting", "System Req\n\n\n\n\nSystem Analysis\n\n\n\n\nSystem Des   \n\n    user will input informati the pattern module will have several function\n        setup() -\nign will make turtle draw quickly\n                    make turtle have a window of 1000 * 800\n        reset() - turtle will erase everything\n        drawRectenglePattern() - will call draw rectangle\n                                center position is x, y of circular pattern drawn\n                                Offset- distance from center to starting corner\n\n        drawRectangle() - draw a single rectangle\n        drawCirclePatten() -\n        drawSuperPattern() - randomly draw rectangle and circle patterns based on random values\n        drawRandomColor()- do not use any perameters and make turtle draw in 1/4 random colors\n        done()-called when user quits, keeps window open\n\n\n\nTesting", "System Req\n\n\n\n\nSystem Analysis\n\n\n\n\nSystem Des   \n\n    user will input informatio the pattern module will have several function\n        setup() -\nign will make turtle draw quickly\n                    make turtle have a window of 1000 * 800\n        reset() - turtle will erase everything\n        drawRectenglePattern() - will call draw rectangle\n                                center position is x, y of circular pattern drawn\n                                Offset- distance from center to starting corner\n\n        drawRectangle() - draw a single rectangle\n        drawCirclePatten() -\n        drawSuperPattern() - randomly draw rectangle and circle patterns based on random values\n        drawRandomColor()- do not use any perameters and make turtle draw in 1/4 random colors\n        done()-called when user quits, keeps window open\n\n\n\nTesting", "System Req\n\n\n\n\nSystem Analysis\n\n\n\n\nSystem Des   \n\n    user will input information the pattern module will have several function\n        setup() -\nign will make turtle draw quickly\n                    make turtle have a window of 1000 * 800\n        reset() - turtle will erase everything\n        drawRectenglePattern() - will call draw rectangle\n                                center position is x, y of circular pattern drawn\n                                Offset- distance from center to starting corner\n\n        drawRectangle() - draw a single rectangle\n        drawCirclePatten() -\n        drawSuperPattern() - randomly draw rectangle and circle patterns based on random values\n        drawRandomColor()- do not use any perameters and make turtle draw in 1/4 random colors\n        done()-called when user quits, keeps window open\n\n\n\nTesting", "System Req\n\n\n\n\nSystem Analysis\n\n\n\n\nSystem Des   \n\n    user will input information \nthe pattern module will have several function\n        setup() -\nign will make turtle draw quickly\n                    make turtle have a window of 1000 * 800\n        reset() - turtle will erase everything\n        drawRectenglePattern() - will call draw rectangle\n                                center position is x, y of circular pattern drawn\n                                Offset- distance from center to starting corner\n\n        drawRectangle() - draw a single rectangle\n        drawCirclePatten() -\n        drawSuperPattern() - randomly draw rectangle and circle patterns based on random values\n        drawRandomColor()- do not use any perameters and make turtle draw in 1/4 random colors\n        done()-called when user quits, keeps window open\n\n\n\nTesting", "System Req\n\n\n\n\nSystem Analysis\n\n\n\n\nSystem Des   \n\n    user will input information \nthe pattern module will have several function\n        setup() -\nign will make turtle draw quickly\n                    make turtle have a window of 1000 * 800\n        reset() - turtle will erase everything\n        drawRectenglePattern() - will call draw rectangle\n                                center position is x, y of circular pattern drawn\n                                Offset- distance from center to starting corner\n\n        drawRectangle() - draw a single rectangle\n        drawCirclePatten() -\n        drawSuperPattern() - randomly draw rectangle and circle patterns based on random values\n        drawRandomColor()- do not use any perameters and make turtle draw in 1/4 random colors\n        done()-called when user quits, keeps window open\n\n    drawRectanglePattern()\n        \n\n\nTesting", "System Req\n\n\n\n\nSystem Analysis\n\n\n\n\nSystem Des   \n\n    user will input information \nthe pattern module will have several function\n        setup() -\nign will make turtle draw quickly\n                    make turtle have a window of 1000 * 800\n        reset() - turtle will erase everything\n        drawRectenglePattern() - will call draw rectangle\n                                center position is x, y of circular pattern drawn\n                                Offset- distance from center to starting corner\n\n        drawRectangle() - draw a single rectangle\n        drawCirclePatten() -\n        drawSuperPattern() - randomly draw rectangle and circle patterns based on random values\n        drawRandomColor()- do not use any perameters and make turtle draw in 1/4 random colors\n        done()-called when user quits, keeps window open\n\n    drawRectanglePattern()\n        w\n\n\nTesting", "System Req\n\n\n\n\nSystem Analysis\n\n\n\n\nSystem Des   \n\n    user will input information \nthe pattern module will have several function\n        setup() -\nign will make turtle draw quickly\n                    make turtle have a window of 1000 * 800\n        reset() - turtle will erase everything\n        drawRectenglePattern() - will call draw rectangle\n                                center position is x, y of circular pattern drawn\n                                Offset- distance from center to starting corner\n\n        drawRectangle() - draw a single rectangle\n        drawCirclePatten() -\n        drawSuperPattern() - randomly draw rectangle and circle patterns based on random values\n        drawRandomColor()- do not use any perameters and make turtle draw in 1/4 random colors\n        done()-called when user quits, keeps window open\n\n    drawRectanglePattern()\n        wi\n\n\nTesting", "System Req\n\n\n\n\nSystem Analysis\n\n\n\n\nSystem Des   \n\n    user will input information \nthe pattern module will have several function\n        setup() -\nign will make turtle draw quickly\n                    make turtle have a window of 1000 * 800\n        reset() - turtle will erase everything\n        drawRectenglePattern() - will call draw rectangle\n                                center position is x, y of circular pattern drawn\n                                Offset- distance from center to starting corner\n\n        drawRectangle() - draw a single rectangle\n        drawCirclePatten() -\n        drawSuperPattern() - randomly draw rectangle and circle patterns based on random values\n        drawRandomColor()- do not use any perameters and make turtle draw in 1/4 random colors\n        done()-called when user quits, keeps window open\n\n    drawRectanglePattern()\n        wil\n\n\nTesting", "System Req\n\n\n\n\nSystem Analysis\n\n\n\n\nSystem Des   \n\n    user will input information \nthe pattern module will have several function\n        setup() -\nign will make turtle draw quickly\n                    make turtle have a window of 1000 * 800\n        reset() - turtle will erase everything\n        drawRectenglePattern() - will call draw rectangle\n                                center position is x, y of circular pattern drawn\n                                Offset- distance from center to starting corner\n\n        drawRectangle() - draw a single rectangle\n        drawCirclePatten() -\n        drawSuperPattern() - randomly draw rectangle and circle patterns based on random values\n        drawRandomColor()- do not use any perameters and make turtle draw in 1/4 random colors\n        done()-called when user quits, keeps window open\n\n    drawRectanglePattern()\n        will\n\n\nTesting", "System Req\n\n\n\n\nSystem Analysis\n\n\n\n\nSystem Des   \n\n    user will input information \nthe pattern module will have several function\n        setup() -\nign will make turtle draw quickly\n                    make turtle have a window of 1000 * 800\n        reset() - turtle will erase everything\n        drawRectenglePattern() - will call draw rectangle\n                                center position is x, y of circular pattern drawn\n                                Offset- distance from center to starting corner\n\n        drawRectangle() - draw a single rectangle\n        drawCirclePatten() -\n        drawSuperPattern() - randomly draw rectangle and circle patterns based on random values\n        drawRandomColor()- do not use any perameters and make turtle draw in 1/4 random colors\n        done()-called when user quits, keeps window open\n\n    drawRectanglePattern()\n        will g\n\n\nTesting", "System Req\n\n\n\n\nSystem Analysis\n\n\n\n\nSystem Des   \n\n    user will input information \nthe pattern module will have several function\n        setup() -\nign will make turtle draw quickly\n                    make turtle have a window of 1000 * 800\n        reset() - turtle will erase everything\n        drawRectenglePattern() - will call draw rectangle\n                                center position is x, y of circular pattern drawn\n                                Offset- distance from center to starting corner\n\n        drawRectangle() - draw a single rectangle\n        drawCirclePatten() -\n        drawSuperPattern() - randomly draw rectangle and circle patterns based on random values\n        drawRandomColor()- do not use any perameters and make turtle draw in 1/4 random colors\n        done()-called when user quits, keeps window open\n\n    drawRectanglePattern()\n        will go\n\n\nTesting", "System Req\n\n\n\n\nSystem Analysis\n\n\n\n\nSystem Des   \n\n    user will input information \nthe pattern module will have several function\n        setup() -\nign will make turtle draw quickly\n                    make turtle have a window of 1000 * 800\n        reset() - turtle will erase everything\n        drawRectenglePattern() - will call draw rectangle\n                                center position is x, y of circular pattern drawn\n                                Offset- distance from center to starting corner\n\n        drawRectangle() - draw a single rectangle\n        drawCirclePatten() -\n        drawSuperPattern() - randomly draw rectangle and circle patterns based on random values\n        drawRandomColor()- do not use any perameters and make turtle draw in 1/4 random colors\n        done()-called when user quits, keeps window open\n\n    drawRectanglePattern()\n        will go t\n\n\nTesting", "System Req\n\n\n\n\nSystem Analysis\n\n\n\n\nSystem Des   \n\n    user will input information \nthe pattern module will have several function\n        setup() -\nign will make turtle draw quickly\n                    make turtle have a window of 1000 * 800\n        reset() - turtle will erase everything\n        drawRectenglePattern() - will call draw rectangle\n                                center position is x, y of circular pattern drawn\n                                Offset- distance from center to starting corner\n\n        drawRectangle() - draw a single rectangle\n        drawCirclePatten() -\n        drawSuperPattern() - randomly draw rectangle and circle patterns based on random values\n        drawRandomColor()- do not use any perameters and make turtle draw in 1/4 random colors\n        done()-called when user quits, keeps window open\n\n    drawRectanglePattern()\n        will go to\n\n\nTesting", "System Req\n\n\n\n\nSystem Analysis\n\n\n\n\nSystem Des   \n\n    user will input information \nthe pattern module will have several function\n        setup() -\nign will make turtle draw quickly\n                    make turtle have a window of 1000 * 800\n        reset() - turtle will erase everything\n        drawRectenglePattern() - will call draw rectangle\n                                center position is x, y of circular pattern drawn\n                                Offset- distance from center to starting corner\n\n        drawRectangle() - draw a single rectangle\n        drawCirclePatten() -\n        drawSuperPattern() - randomly draw rectangle and circle patterns based on random values\n        drawRandomColor()- do not use any perameters and make turtle draw in 1/4 random colors\n        done()-called when user quits, keeps window open\n\n    drawRectanglePattern()\n        will go to c\n\n\nTesting", "System Req\n\n\n\n\nSystem Analysis\n\n\n\n\nSystem Des   \n\n    user will input information \nthe pattern module will have several function\n        setup() -\nign will make turtle draw quickly\n                    make turtle have a window of 1000 * 800\n        reset() - turtle will erase everything\n        drawRectenglePattern() - will call draw rectangle\n                                center position is x, y of circular pattern drawn\n                                Offset- distance from center to starting corner\n\n        drawRectangle() - draw a single rectangle\n        drawCirclePatten() -\n        drawSuperPattern() - randomly draw rectangle and circle patterns based on random values\n        drawRandomColor()- do not use any perameters and make turtle draw in 1/4 random colors\n        done()-called when user quits, keeps window open\n\n    drawRectanglePattern()\n        will go to ce\n\n\nTesting", "System Req\n\n\n\n\nSystem Analysis\n\n\n\n\nSystem Des   \n\n    user will input information \nthe pattern module will have several function\n        setup() -\nign will make turtle draw quickly\n                    make turtle have a window of 1000 * 800\n        reset() - turtle will erase everything\n        drawRectenglePattern() - will call draw rectangle\n                                center position is x, y of circular pattern drawn\n                                Offset- distance from center to starting corner\n\n        drawRectangle() - draw a single rectangle\n        drawCirclePatten() -\n        drawSuperPattern() - randomly draw rectangle and circle patterns based on random values\n        drawRandomColor()- do not use any perameters and make turtle draw in 1/4 random colors\n        done()-called when user quits, keeps window open\n\n    drawRectanglePattern()\n        will go to cen\n\n\nTesting", "System Req\n\n\n\n\nSystem Analysis\n\n\n\n\nSystem Des   \n\n    user will input information \nthe pattern module will have several function\n        setup() -\nign will make turtle draw quickly\n                    make turtle have a window of 1000 * 800\n        reset() - turtle will erase everything\n        drawRectenglePattern() - will call draw rectangle\n                                center position is x, y of circular pattern drawn\n                                Offset- distance from center to starting corner\n\n        drawRectangle() - draw a single rectangle\n        drawCirclePatten() -\n        drawSuperPattern() - randomly draw rectangle and circle patterns based on random values\n        drawRandomColor()- do not use any perameters and make turtle draw in 1/4 random colors\n        done()-called when user quits, keeps window open\n\n    drawRectanglePattern()\n        will go to cent\n\n\nTesting", "System Req\n\n\n\n\nSystem Analysis\n\n\n\n\nSystem Des   \n\n    user will input information \nthe pattern module will have several function\n        setup() -\nign will make turtle draw quickly\n                    make turtle have a window of 1000 * 800\n        reset() - turtle will erase everything\n        drawRectenglePattern() - will call draw rectangle\n                                center position is x, y of circular pattern drawn\n                                Offset- distance from center to starting corner\n\n        drawRectangle() - draw a single rectangle\n        drawCirclePatten() -\n        drawSuperPattern() - randomly draw rectangle and circle patterns based on random values\n        drawRandomColor()- do not use any perameters and make turtle draw in 1/4 random colors\n        done()-called when user quits, keeps window open\n\n    drawRectanglePattern()\n        will go to cente\n\n\nTesting", "System Req\n\n\n\n\nSystem Analysis\n\n\n\n\nSystem Des   \n\n    user will input information \nthe pattern module will have several function\n        setup() -\nign will make turtle draw quickly\n                    make turtle have a window of 1000 * 800\n        reset() - turtle will erase everything\n        drawRectenglePattern() - will call draw rectangle\n                                center position is x, y of circular pattern drawn\n                                Offset- distance from center to starting corner\n\n        drawRectangle() - draw a single rectangle\n        drawCirclePatten() -\n        drawSuperPattern() - randomly draw rectangle and circle patterns based on random values\n        drawRandomColor()- do not use any perameters and make turtle draw in 1/4 random colors\n        done()-called when user quits, keeps window open\n\n    drawRectanglePattern()\n        will go to center\n\n\nTesting", "System Req\n\n\n\n\nSystem Analysis\n\n\n\n\nSystem Des   \n\n    user will input information \nthe pattern module will have several function\n        setup() -\nign will make turtle draw quickly\n                    make turtle have a window of 1000 * 800\n        reset() - turtle will erase everything\n        drawRectenglePattern() - will call draw rectangle\n                                center position is x, y of circular pattern drawn\n                                Offset- distance from center to starting corner\n\n        drawRectangle() - draw a single rectangle\n        drawCirclePatten() -\n        drawSuperPattern() - randomly draw rectangle and circle patterns based on random values\n        drawRandomColor()- do not use any perameters and make turtle draw in 1/4 random colors\n        done()-called when user quits, keeps window open\n\n    drawRectanglePattern()\n        will go to cente\n\n\nTesting", "System Req\n\n\n\n\nSystem Analysis\n\n\n\n\nSystem Des   \n\n    user will input information \nthe pattern module will have several function\n        setup() -\nign will make turtle draw quickly\n                    make turtle have a window of 1000 * 800\n        reset() - turtle will erase everything\n        drawRectenglePattern() - will call draw rectangle\n                                center position is x, y of circular pattern drawn\n                                Offset- distance from center to starting corner\n\n        drawRectangle() - draw a single rectangle\n        drawCirclePatten() -\n        drawSuperPattern() - randomly draw rectangle and circle patterns based on random values\n        drawRandomColor()- do not use any perameters and make turtle draw in 1/4 random colors\n        done()-called when user quits, keeps window open\n\n    drawRectanglePattern()\n        will go to cent\n\n\nTesting", "System Req\n\n\n\n\nSystem Analysis\n\n\n\n\nSystem Des   \n\n    user will input information \nthe pattern module will have several function\n        setup() -\nign will make turtle draw quickly\n                    make turtle have a window of 1000 * 800\n        reset() - turtle will erase everything\n        drawRectenglePattern() - will call draw rectangle\n                                center position is x, y of circular pattern drawn\n                                Offset- distance from center to starting corner\n\n        drawRectangle() - draw a single rectangle\n        drawCirclePatten() -\n        drawSuperPattern() - randomly draw rectangle and circle patterns based on random values\n        drawRandomColor()- do not use any perameters and make turtle draw in 1/4 random colors\n        done()-called when user quits, keeps window open\n\n    drawRectanglePattern()\n        will go to cen\n\n\nTesting", "System Req\n\n\n\n\nSystem Analysis\n\n\n\n\nSystem Des   \n\n    user will input information \nthe pattern module will have several function\n        setup() -\nign will make turtle draw quickly\n                    make turtle have a window of 1000 * 800\n        reset() - turtle will erase everything\n        drawRectenglePattern() - will call draw rectangle\n                                center position is x, y of circular pattern drawn\n                                Offset- distance from center to starting corner\n\n        drawRectangle() - draw a single rectangle\n        drawCirclePatten() -\n        drawSuperPattern() - randomly draw rectangle and circle patterns based on random values\n        drawRandomColor()- do not use any perameters and make turtle draw in 1/4 random colors\n        done()-called when user quits, keeps window open\n\n    drawRectanglePattern()\n        will go to ce\n\n\nTesting", "System Req\n\n\n\n\nSystem Analysis\n\n\n\n\nSystem Des   \n\n    user will input information \nthe pattern module will have several function\n        setup() -\nign will make turtle draw quickly\n                    make turtle have a window of 1000 * 800\n        reset() - turtle will erase everything\n        drawRectenglePattern() - will call draw rectangle\n                                center position is x, y of circular pattern drawn\n                                Offset- distance from center to starting corner\n\n        drawRectangle() - draw a single rectangle\n        drawCirclePatten() -\n        drawSuperPattern() - randomly draw rectangle and circle patterns based on random values\n        drawRandomColor()- do not use any perameters and make turtle draw in 1/4 random colors\n        done()-called when user quits, keeps window open\n\n    drawRectanglePattern()\n        will go to c\n\n\nTesting", "System Req\n\n\n\n\nSystem Analysis\n\n\n\n\nSystem Des   \n\n    user will input information \nthe pattern module will have several function\n        setup() -\nign will make turtle draw quickly\n                    make turtle have a window of 1000 * 800\n        reset() - turtle will erase everything\n        drawRectenglePattern() - will call draw rectangle\n                                center position is x, y of circular pattern drawn\n                                Offset- distance from center to starting corner\n\n        drawRectangle() - draw a single rectangle\n        drawCirclePatten() -\n        drawSuperPattern() - randomly draw rectangle and circle patterns based on random values\n        drawRandomColor()- do not use any perameters and make turtle draw in 1/4 random colors\n        done()-called when user quits, keeps window open\n\n    drawRectanglePattern()\n        will go to \n\n\nTesting", "System Req\n\n\n\n\nSystem Analysis\n\n\n\n\nSystem Des   \n\n    user will input information \nthe pattern module will have several function\n        setup() -\nign will make turtle draw quickly\n                    make turtle have a window of 1000 * 800\n        reset() - turtle will erase everything\n        drawRectenglePattern() - will call draw rectangle\n                                center position is x, y of circular pattern drawn\n                                Offset- distance from center to starting corner\n\n        drawRectangle() - draw a single rectangle\n        drawCirclePatten() -\n        drawSuperPattern() - randomly draw rectangle and circle patterns based on random values\n        drawRandomColor()- do not use any perameters and make turtle draw in 1/4 random colors\n        done()-called when user quits, keeps window open\n\n    drawRectanglePattern()\n        will go to\n\n\nTesting", "System Req\n\n\n\n\nSystem Analysis\n\n\n\n\nSystem Des   \n\n    user will input information \nthe pattern module will have several function\n        setup() -\nign will make turtle draw quickly\n                    make turtle have a window of 1000 * 800\n        reset() - turtle will erase everything\n        drawRectenglePattern() - will call draw rectangle\n                                center position is x, y of circular pattern drawn\n                                Offset- distance from center to starting corner\n\n        drawRectangle() - draw a single rectangle\n        drawCirclePatten() -\n        drawSuperPattern() - randomly draw rectangle and circle patterns based on random values\n        drawRandomColor()- do not use any perameters and make turtle draw in 1/4 random colors\n        done()-called when user quits, keeps window open\n\n    drawRectanglePattern()\n        will go t\n\n\nTesting", "System Req\n\n\n\n\nSystem Analysis\n\n\n\n\nSystem Des   \n\n    user will input information \nthe pattern module will have several function\n        setup() -\nign will make turtle draw quickly\n                    make turtle have a window of 1000 * 800\n        reset() - turtle will erase everything\n        drawRectenglePattern() - will call draw rectangle\n                                center position is x, y of circular pattern drawn\n                                Offset- distance from center to starting corner\n\n        drawRectangle() - draw a single rectangle\n        drawCirclePatten() -\n        drawSuperPattern() - randomly draw rectangle and circle patterns based on random values\n        drawRandomColor()- do not use any perameters and make turtle draw in 1/4 random colors\n        done()-called when user quits, keeps window open\n\n    drawRectanglePattern()\n        will go \n\n\nTesting", "System Req\n\n\n\n\nSystem Analysis\n\n\n\n\nSystem Des   \n\n    user will input information \nthe pattern module will have several function\n        setup() -\nign will make turtle draw quickly\n                    make turtle have a window of 1000 * 800\n        reset() - turtle will erase everything\n        drawRectenglePattern() - will call draw rectangle\n                                center position is x, y of circular pattern drawn\n                                Offset- distance from center to starting corner\n\n        drawRectangle() - draw a single rectangle\n        drawCirclePatten() -\n        drawSuperPattern() - randomly draw rectangle and circle patterns based on random values\n        drawRandomColor()- do not use any perameters and make turtle draw in 1/4 random colors\n        done()-called when user quits, keeps window open\n\n    drawRectanglePattern()\n        will go\n\n\nTesting", "System Req\n\n\n\n\nSystem Analysis\n\n\n\n\nSystem Des   \n\n    user will input information \nthe pattern module will have several function\n        setup() -\nign will make turtle draw quickly\n                    make turtle have a window of 1000 * 800\n        reset() - turtle will erase everything\n        drawRectenglePattern() - will call draw rectangle\n                                center position is x, y of circular pattern drawn\n                                Offset- distance from center to starting corner\n\n        drawRectangle() - draw a single rectangle\n        drawCirclePatten() -\n        drawSuperPattern() - randomly draw rectangle and circle patterns based on random values\n        drawRandomColor()- do not use any perameters and make turtle draw in 1/4 random colors\n        done()-called when user quits, keeps window open\n\n    drawRectanglePattern()\n        will g\n\n\nTesting", "System Req\n\n\n\n\nSystem Analysis\n\n\n\n\nSystem Des   \n\n    user will input information \nthe pattern module will have several function\n        setup() -\nign will make turtle draw quickly\n                    make turtle have a window of 1000 * 800\n        reset() - turtle will erase everything\n        drawRectenglePattern() - will call draw rectangle\n                                center position is x, y of circular pattern drawn\n                                Offset- distance from center to starting corner\n\n        drawRectangle() - draw a single rectangle\n        drawCirclePatten() -\n        drawSuperPattern() - randomly draw rectangle and circle patterns based on random values\n        drawRandomColor()- do not use any perameters and make turtle draw in 1/4 random colors\n        done()-called when user quits, keeps window open\n\n    drawRectanglePattern()\n        will \n\n\nTesting", "System Req\n\n\n\n\nSystem Analysis\n\n\n\n\nSystem Des   \n\n    user will input information \nthe pattern module will have several function\n        setup() -\nign will make turtle draw quickly\n                    make turtle have a window of 1000 * 800\n        reset() - turtle will erase everything\n        drawRectenglePattern() - will call draw rectangle\n                                center position is x, y of circular pattern drawn\n                                Offset- distance from center to starting corner\n\n        drawRectangle() - draw a single rectangle\n        drawCirclePatten() -\n        drawSuperPattern() - randomly draw rectangle and circle patterns based on random values\n        drawRandomColor()- do not use any perameters and make turtle draw in 1/4 random colors\n        done()-called when user quits, keeps window open\n\n    drawRectanglePattern()\n        will\n\n\nTesting", "System Req\n\n\n\n\nSystem Analysis\n\n\n\n\nSystem Des   \n\n    user will input information \nthe pattern module will have several function\n        setup() -\nign will make turtle draw quickly\n                    make turtle have a window of 1000 * 800\n        reset() - turtle will erase everything\n        drawRectenglePattern() - will call draw rectangle\n                                center position is x, y of circular pattern drawn\n                                Offset- distance from center to starting corner\n\n        drawRectangle() - draw a single rectangle\n        drawCirclePatten() -\n        drawSuperPattern() - randomly draw rectangle and circle patterns based on random values\n        drawRandomColor()- do not use any perameters and make turtle draw in 1/4 random colors\n        done()-called when user quits, keeps window open\n\n    drawRectanglePattern()\n        wil\n\n\nTesting", "System Req\n\n\n\n\nSystem Analysis\n\n\n\n\nSystem Des   \n\n    user will input information \nthe pattern module will have several function\n        setup() -\nign will make turtle draw quickly\n                    make turtle have a window of 1000 * 800\n        reset() - turtle will erase everything\n        drawRectenglePattern() - will call draw rectangle\n                                center position is x, y of circular pattern drawn\n                                Offset- distance from center to starting corner\n\n        drawRectangle() - draw a single rectangle\n        drawCirclePatten() -\n        drawSuperPattern() - randomly draw rectangle and circle patterns based on random values\n        drawRandomColor()- do not use any perameters and make turtle draw in 1/4 random colors\n        done()-called when user quits, keeps window open\n\n    drawRectanglePattern()\n        wi\n\n\nTesting", "System Req\n\n\n\n\nSystem Analysis\n\n\n\n\nSystem Des   \n\n    user will input information \nthe pattern module will have several function\n        setup() -\nign will make turtle draw quickly\n                    make turtle have a window of 1000 * 800\n        reset() - turtle will erase everything\n        drawRectenglePattern() - will call draw rectangle\n                                center position is x, y of circular pattern drawn\n                                Offset- distance from center to starting corner\n\n        drawRectangle() - draw a single rectangle\n        drawCirclePatten() -\n        drawSuperPattern() - randomly draw rectangle and circle patterns based on random values\n        drawRandomColor()- do not use any perameters and make turtle draw in 1/4 random colors\n        done()-called when user quits, keeps window open\n\n    drawRectanglePattern()\n        w\n\n\nTesting", "System Req\n\n\n\n\nSystem Analysis\n\n\n\n\nSystem Des   \n\n    user will input information \nthe pattern module will have several function\n        setup() -\nign will make turtle draw quickly\n                    make turtle have a window of 1000 * 800\n        reset() - turtle will erase everything\n        drawRectenglePattern() - will call draw rectangle\n                                center position is x, y of circular pattern drawn\n                                Offset- distance from center to starting corner\n\n        drawRectangle() - draw a single rectangle\n        drawCirclePatten() -\n        drawSuperPattern() - randomly draw rectangle and circle patterns based on random values\n        drawRandomColor()- do not use any perameters and make turtle draw in 1/4 random colors\n        done()-called when user quits, keeps window open\n\n    drawRectanglePattern()\n        \n\n\nTesting", "System Req\n\n\n\n\nSystem Analysis\n\n\n\n\nSystem Des   \n\n    user will input information \nthe pattern module will have several function\n        setup() -\nign will make turtle draw quickly\n                    make turtle have a window of 1000 * 800\n        reset() - turtle will erase everything\n        drawRectenglePattern() - will call draw rectangle\n                                center position is x, y of circular pattern drawn\n                                Offset- distance from center to starting corner\n\n        drawRectangle() - draw a single rectangle\n        drawCirclePatten() -\n        drawSuperPattern() - randomly draw rectangle and circle patterns based on random values\n        drawRandomColor()- do not use any perameters and make turtle draw in 1/4 random colors\n        done()-called when user quits, keeps window open\n\n    drawRectanglePattern()\n        u\n\n\nTesting", "System Req\n\n\n\n\nSystem Analysis\n\n\n\n\nSystem Des   \n\n    user will input information \nthe pattern module will have several function\n        setup() -\nign will make turtle draw quickly\n                    make turtle have a window of 1000 * 800\n        reset() - turtle will erase everything\n        drawRectenglePattern() - will call draw rectangle\n                                center position is x, y of circular pattern drawn\n                                Offset- distance from center to starting corner\n\n        drawRectangle() - draw a single rectangle\n        drawCirclePatten() -\n        drawSuperPattern() - randomly draw rectangle and circle patterns based on random values\n        drawRandomColor()- do not use any perameters and make turtle draw in 1/4 random colors\n        done()-called when user quits, keeps window open\n\n    drawRectanglePattern()\n        us\n\n\nTesting", "System Req\n\n\n\n\nSystem Analysis\n\n\n\n\nSystem Des   \n\n    user will input information \nthe pattern module will have several function\n        setup() -\nign will make turtle draw quickly\n                    make turtle have a window of 1000 * 800\n        reset() - turtle will erase everything\n        drawRectenglePattern() - will call draw rectangle\n                                center position is x, y of circular pattern drawn\n                                Offset- distance from center to starting corner\n\n        drawRectangle() - draw a single rectangle\n        drawCirclePatten() -\n        drawSuperPattern() - randomly draw rectangle and circle patterns based on random values\n        drawRandomColor()- do not use any perameters and make turtle draw in 1/4 random colors\n        done()-called when user quits, keeps window open\n\n    drawRectanglePattern()\n        use\n\n\nTesting", "System Req\n\n\n\n\nSystem Analysis\n\n\n\n\nSystem Des   \n\n    user will input information \nthe pattern module will have several function\n        setup() -\nign will make turtle draw quickly\n                    make turtle have a window of 1000 * 800\n        reset() - turtle will erase everything\n        drawRectenglePattern() - will call draw rectangle\n                                center position is x, y of circular pattern drawn\n                                Offset- distance from center to starting corner\n\n        drawRectangle() - draw a single rectangle\n        drawCirclePatten() -\n        drawSuperPattern() - randomly draw rectangle and circle patterns based on random values\n        drawRandomColor()- do not use any perameters and make turtle draw in 1/4 random colors\n        done()-called when user quits, keeps window open\n\n    drawRectanglePattern()\n        user\n\n\nTesting", "System Req\n\n\n\n\nSystem Analysis\n\n\n\n\nSystem Des   \n\n    user will input information \nthe pattern module will have several function\n        setup() -\nign will make turtle draw quickly\n                    make turtle have a window of 1000 * 800\n        reset() - turtle will erase everything\n        drawRectenglePattern() - will call draw rectangle\n                                center position is x, y of circular pattern drawn\n                                Offset- distance from center to starting corner\n\n        drawRectangle() - draw a single rectangle\n        drawCirclePatten() -\n        drawSuperPattern() - randomly draw rectangle and circle patterns based on random values\n        drawRandomColor()- do not use any perameters and make turtle draw in 1/4 random colors\n        done()-called when user quits, keeps window open\n\n    drawRectanglePattern()\n        user w\n\n\nTesting", "System Req\n\n\n\n\nSystem Analysis\n\n\n\n\nSystem Des   \n\n    user will input information \nthe pattern module will have several function\n        setup() -\nign will make turtle draw quickly\n                    make turtle have a window of 1000 * 800\n        reset() - turtle will erase everything\n        drawRectenglePattern() - will call draw rectangle\n                                center position is x, y of circular pattern drawn\n                                Offset- distance from center to starting corner\n\n        drawRectangle() - draw a single rectangle\n        drawCirclePatten() -\n        drawSuperPattern() - randomly draw rectangle and circle patterns based on random values\n        drawRandomColor()- do not use any perameters and make turtle draw in 1/4 random colors\n        done()-called when user quits, keeps window open\n\n    drawRectanglePattern()\n        user wi\n\n\nTesting", "System Req\n\n\n\n\nSystem Analysis\n\n\n\n\nSystem Des   \n\n    user will input information \nthe pattern module will have several function\n        setup() -\nign will make turtle draw quickly\n                    make turtle have a window of 1000 * 800\n        reset() - turtle will erase everything\n        drawRectenglePattern() - will call draw rectangle\n                                center position is x, y of circular pattern drawn\n                                Offset- distance from center to starting corner\n\n        drawRectangle() - draw a single rectangle\n        drawCirclePatten() -\n        drawSuperPattern() - randomly draw rectangle and circle patterns based on random values\n        drawRandomColor()- do not use any perameters and make turtle draw in 1/4 random colors\n        done()-called when user quits, keeps window open\n\n    drawRectanglePattern()\n        user wil\n\n\nTesting", "System Req\n\n\n\n\nSystem Analysis\n\n\n\n\nSystem Des   \n\n    user will input information \nthe pattern module will have several function\n        setup() -\nign will make turtle draw quickly\n                    make turtle have a window of 1000 * 800\n        reset() - turtle will erase everything\n        drawRectenglePattern() - will call draw rectangle\n                                center position is x, y of circular pattern drawn\n                                Offset- distance from center to starting corner\n\n        drawRectangle() - draw a single rectangle\n        drawCirclePatten() -\n        drawSuperPattern() - randomly draw rectangle and circle patterns based on random values\n        drawRandomColor()- do not use any perameters and make turtle draw in 1/4 random colors\n        done()-called when user quits, keeps window open\n\n    drawRectanglePattern()\n        user will\n\n\nTesting", "System Req\n\n\n\n\nSystem Analysis\n\n\n\n\nSystem Des   \n\n    user will input information \nthe pattern module will have several function\n        setup() -\nign will make turtle draw quickly\n                    make turtle have a window of 1000 * 800\n        reset() - turtle will erase everything\n        drawRectenglePattern() - will call draw rectangle\n                                center position is x, y of circular pattern drawn\n                                Offset- distance from center to starting corner\n\n        drawRectangle() - draw a single rectangle\n        drawCirclePatten() -\n        drawSuperPattern() - randomly draw rectangle and circle patterns based on random values\n        drawRandomColor()- do not use any perameters and make turtle draw in 1/4 random colors\n        done()-called when user quits, keeps window open\n\n    drawRectanglePattern()\n        user will i\n\n\nTesting", "System Req\n\n\n\n\nSystem Analysis\n\n\n\n\nSystem Des   \n\n    user will input information \nthe pattern module will have several function\n        setup() -\nign will make turtle draw quickly\n                    make turtle have a window of 1000 * 800\n        reset() - turtle will erase everything\n        drawRectenglePattern() - will call draw rectangle\n                                center position is x, y of circular pattern drawn\n                                Offset- distance from center to starting corner\n\n        drawRectangle() - draw a single rectangle\n        drawCirclePatten() -\n        drawSuperPattern() - randomly draw rectangle and circle patterns based on random values\n        drawRandomColor()- do not use any perameters and make turtle draw in 1/4 random colors\n        done()-called when user quits, keeps window open\n\n    drawRectanglePattern()\n        user will in\n\n\nTesting", "System Req\n\n\n\n\nSystem Analysis\n\n\n\n\nSystem Des   \n\n    user will input information \nthe pattern module will have several function\n        setup() -\nign will make turtle draw quickly\n                    make turtle have a window of 1000 * 800\n        reset() - turtle will erase everything\n        drawRectenglePattern() - will call draw rectangle\n                                center position is x, y of circular pattern drawn\n                                Offset- distance from center to starting corner\n\n        drawRectangle() - draw a single rectangle\n        drawCirclePatten() -\n        drawSuperPattern() - randomly draw rectangle and circle patterns based on random values\n        drawRandomColor()- do not use any perameters and make turtle draw in 1/4 random colors\n        done()-called when user quits, keeps window open\n\n    drawRectanglePattern()\n        user will inp\n\n\nTesting", "System Req\n\n\n\n\nSystem Analysis\n\n\n\n\nSystem Des   \n\n    user will input information \nthe pattern module will have several function\n        setup() -\nign will make turtle draw quickly\n                    make turtle have a window of 1000 * 800\n        reset() - turtle will erase everything\n        drawRectenglePattern() - will call draw rectangle\n                                center position is x, y of circular pattern drawn\n                                Offset- distance from center to starting corner\n\n        drawRectangle() - draw a single rectangle\n        drawCirclePatten() -\n        drawSuperPattern() - randomly draw rectangle and circle patterns based on random values\n        drawRandomColor()- do not use any perameters and make turtle draw in 1/4 random colors\n        done()-called when user quits, keeps window open\n\n    drawRectanglePattern()\n        user will inpu\n\n\nTesting", "System Req\n\n\n\n\nSystem Analysis\n\n\n\n\nSystem Des   \n\n    user will input information \nthe pattern module will have several function\n        setup() -\nign will make turtle draw quickly\n                    make turtle have a window of 1000 * 800\n        reset() - turtle will erase everything\n        drawRectenglePattern() - will call draw rectangle\n                                center position is x, y of circular pattern drawn\n                                Offset- distance from center to starting corner\n\n        drawRectangle() - draw a single rectangle\n        drawCirclePatten() -\n        drawSuperPattern() - randomly draw rectangle and circle patterns based on random values\n        drawRandomColor()- do not use any perameters and make turtle draw in 1/4 random colors\n        done()-called when user quits, keeps window open\n\n    drawRectanglePattern()\n        user will input\n\n\nTesting", "System Req\n\n\n\n\nSystem Analysis\n\n\n\n\nSystem Des   \n\n    user will input information \nthe pattern module will have several function\n        setup() -\nign will make turtle draw quickly\n                    make turtle have a window of 1000 * 800\n        reset() - turtle will erase everything\n        drawRectenglePattern() - will call draw rectangle\n                                center position is x, y of circular pattern drawn\n                                Offset- distance from center to starting corner\n\n        drawRectangle() - draw a single rectangle\n        drawCirclePatten() -\n        drawSuperPattern() - randomly draw rectangle and circle patterns based on random values\n        drawRandomColor()- do not use any perameters and make turtle draw in 1/4 random colors\n        done()-called when user quits, keeps window open\n\n    drawRectanglePattern()\n        user will input c\n\n\nTesting", "System Req\n\n\n\n\nSystem Analysis\n\n\n\n\nSystem Des   \n\n    user will input information \nthe pattern module will have several function\n        setup() -\nign will make turtle draw quickly\n                    make turtle have a window of 1000 * 800\n        reset() - turtle will erase everything\n        drawRectenglePattern() - will call draw rectangle\n                                center position is x, y of circular pattern drawn\n                                Offset- distance from center to starting corner\n\n        drawRectangle() - draw a single rectangle\n        drawCirclePatten() -\n        drawSuperPattern() - randomly draw rectangle and circle patterns based on random values\n        drawRandomColor()- do not use any perameters and make turtle draw in 1/4 random colors\n        done()-called when user quits, keeps window open\n\n    drawRectanglePattern()\n        user will input ce\n\n\nTesting", "System Req\n\n\n\n\nSystem Analysis\n\n\n\n\nSystem Des   \n\n    user will input information \nthe pattern module will have several function\n        setup() -\nign will make turtle draw quickly\n                    make turtle have a window of 1000 * 800\n        reset() - turtle will erase everything\n        drawRectenglePattern() - will call draw rectangle\n                                center position is x, y of circular pattern drawn\n                                Offset- distance from center to starting corner\n\n        drawRectangle() - draw a single rectangle\n        drawCirclePatten() -\n        drawSuperPattern() - randomly draw rectangle and circle patterns based on random values\n        drawRandomColor()- do not use any perameters and make turtle draw in 1/4 random colors\n        done()-called when user quits, keeps window open\n\n    drawRectanglePattern()\n        user will input cen\n\n\nTesting", "System Req\n\n\n\n\nSystem Analysis\n\n\n\n\nSystem Des   \n\n    user will input information \nthe pattern module will have several function\n        setup() -\nign will make turtle draw quickly\n                    make turtle have a window of 1000 * 800\n        reset() - turtle will erase everything\n        drawRectenglePattern() - will call draw rectangle\n                                center position is x, y of circular pattern drawn\n                                Offset- distance from center to starting corner\n\n        drawRectangle() - draw a single rectangle\n        drawCirclePatten() -\n        drawSuperPattern() - randomly draw rectangle and circle patterns based on random values\n        drawRandomColor()- do not use any perameters and make turtle draw in 1/4 random colors\n        done()-called when user quits, keeps window open\n\n    drawRectanglePattern()\n        user will input cent\n\n\nTesting", "System Req\n\n\n\n\nSystem Analysis\n\n\n\n\nSystem Des   \n\n    user will input information \nthe pattern module will have several function\n        setup() -\nign will make turtle draw quickly\n                    make turtle have a window of 1000 * 800\n        reset() - turtle will erase everything\n        drawRectenglePattern() - will call draw rectangle\n                                center position is x, y of circular pattern drawn\n                                Offset- distance from center to starting corner\n\n        drawRectangle() - draw a single rectangle\n        drawCirclePatten() -\n        drawSuperPattern() - randomly draw rectangle and circle patterns based on random values\n        drawRandomColor()- do not use any perameters and make turtle draw in 1/4 random colors\n        done()-called when user quits, keeps window open\n\n    drawRectanglePattern()\n        user will input cente\n\n\nTesting", "System Req\n\n\n\n\nSystem Analysis\n\n\n\n\nSystem Des   \n\n    user will input information \nthe pattern module will have several function\n        setup() -\nign will make turtle draw quickly\n                    make turtle have a window of 1000 * 800\n        reset() - turtle will erase everything\n        drawRectenglePattern() - will call draw rectangle\n                                center position is x, y of circular pattern drawn\n                                Offset- distance from center to starting corner\n\n        drawRectangle() - draw a single rectangle\n        drawCirclePatten() -\n        drawSuperPattern() - randomly draw rectangle and circle patterns based on random values\n        drawRandomColor()- do not use any perameters and make turtle draw in 1/4 random colors\n        done()-called when user quits, keeps window open\n\n    drawRectanglePattern()\n        user will input center\n\n\nTesting", "System Req\n\n\n\n\nSystem Analysis\n\n\n\n\nSystem Des   \n\n    user will input information \nthe pattern module will have several function\n        setup() -\nign will make turtle draw quickly\n                    make turtle have a window of 1000 * 800\n        reset() - turtle will erase everything\n        drawRectenglePattern() - will call draw rectangle\n                                center position is x, y of circular pattern drawn\n                                Offset- distance from center to starting corner\n\n        drawRectangle() - draw a single rectangle\n        drawCirclePatten() -\n        drawSuperPattern() - randomly draw rectangle and circle patterns based on random values\n        drawRandomColor()- do not use any perameters and make turtle draw in 1/4 random colors\n        done()-called when user quits, keeps window open\n\n    drawRectanglePattern()\n        user will input center p\n\n\nTesting", "System Req\n\n\n\n\nSystem Analysis\n\n\n\n\nSystem Des   \n\n    user will input information \nthe pattern module will have several function\n        setup() -\nign will make turtle draw quickly\n                    make turtle have a window of 1000 * 800\n        reset() - turtle will erase everything\n        drawRectenglePattern() - will call draw rectangle\n                                center position is x, y of circular pattern drawn\n                                Offset- distance from center to starting corner\n\n        drawRectangle() - draw a single rectangle\n        drawCirclePatten() -\n        drawSuperPattern() - randomly draw rectangle and circle patterns based on random values\n        drawRandomColor()- do not use any perameters and make turtle draw in 1/4 random colors\n        done()-called when user quits, keeps window open\n\n    drawRectanglePattern()\n        user will input center po\n\n\nTesting", "System Req\n\n\n\n\nSystem Analysis\n\n\n\n\nSystem Des   \n\n    user will input information \nthe pattern module will have several function\n        setup() -\nign will make turtle draw quickly\n                    make turtle have a window of 1000 * 800\n        reset() - turtle will erase everything\n        drawRectenglePattern() - will call draw rectangle\n                                center position is x, y of circular pattern drawn\n                                Offset- distance from center to starting corner\n\n        drawRectangle() - draw a single rectangle\n        drawCirclePatten() -\n        drawSuperPattern() - randomly draw rectangle and circle patterns based on random values\n        drawRandomColor()- do not use any perameters and make turtle draw in 1/4 random colors\n        done()-called when user quits, keeps window open\n\n    drawRectanglePattern()\n        user will input center pos\n\n\nTesting", "System Req\n\n\n\n\nSystem Analysis\n\n\n\n\nSystem Des   \n\n    user will input information \nthe pattern module will have several function\n        setup() -\nign will make turtle draw quickly\n                    make turtle have a window of 1000 * 800\n        reset() - turtle will erase everything\n        drawRectenglePattern() - will call draw rectangle\n                                center position is x, y of circular pattern drawn\n                                Offset- distance from center to starting corner\n\n        drawRectangle() - draw a single rectangle\n        drawCirclePatten() -\n        drawSuperPattern() - randomly draw rectangle and circle patterns based on random values\n        drawRandomColor()- do not use any perameters and make turtle draw in 1/4 random colors\n        done()-called when user quits, keeps window open\n\n    drawRectanglePattern()\n        user will input center poss\n\n\nTesting", "System Req\n\n\n\n\nSystem Analysis\n\n\n\n\nSystem Des   \n\n    user will input information \nthe pattern module will have several function\n        setup() -\nign will make turtle draw quickly\n                    make turtle have a window of 1000 * 800\n        reset() - turtle will erase everything\n        drawRectenglePattern() - will call draw rectangle\n                                center position is x, y of circular pattern drawn\n                                Offset- distance from center to starting corner\n\n        drawRectangle() - draw a single rectangle\n        drawCirclePatten() -\n        drawSuperPattern() - randomly draw rectangle and circle patterns based on random values\n        drawRandomColor()- do not use any perameters and make turtle draw in 1/4 random colors\n        done()-called when user quits, keeps window open\n\n    drawRectanglePattern()\n        user will input center possi\n\n\nTesting", "System Req\n\n\n\n\nSystem Analysis\n\n\n\n\nSystem Des   \n\n    user will input information \nthe pattern module will have several function\n        setup() -\nign will make turtle draw quickly\n                    make turtle have a window of 1000 * 800\n        reset() - turtle will erase everything\n        drawRectenglePattern() - will call draw rectangle\n                                center position is x, y of circular pattern drawn\n                                Offset- distance from center to starting corner\n\n        drawRectangle() - draw a single rectangle\n        drawCirclePatten() -\n        drawSuperPattern() - randomly draw rectangle and circle patterns based on random values\n        drawRandomColor()- do not use any perameters and make turtle draw in 1/4 random colors\n        done()-called when user quits, keeps window open\n\n    drawRectanglePattern()\n        user will input center possit\n\n\nTesting", "System Req\n\n\n\n\nSystem Analysis\n\n\n\n\nSystem Des   \n\n    user will input information \nthe pattern module will have several function\n        setup() -\nign will make turtle draw quickly\n                    make turtle have a window of 1000 * 800\n        reset() - turtle will erase everything\n        drawRectenglePattern() - will call draw rectangle\n                                center position is x, y of circular pattern drawn\n                                Offset- distance from center to starting corner\n\n        drawRectangle() - draw a single rectangle\n        drawCirclePatten() -\n        drawSuperPattern() - randomly draw rectangle and circle patterns based on random values\n        drawRandomColor()- do not use any perameters and make turtle draw in 1/4 random colors\n        done()-called when user quits, keeps window open\n\n    drawRectanglePattern()\n        user will input center possiti\n\n\nTesting", "System Req\n\n\n\n\nSystem Analysis\n\n\n\n\nSystem Des   \n\n    user will input information \nthe pattern module will have several function\n        setup() -\nign will make turtle draw quickly\n                    make turtle have a window of 1000 * 800\n        reset() - turtle will erase everything\n        drawRectenglePattern() - will call draw rectangle\n                                center position is x, y of circular pattern drawn\n                                Offset- distance from center to starting corner\n\n        drawRectangle() - draw a single rectangle\n        drawCirclePatten() -\n        drawSuperPattern() - randomly draw rectangle and circle patterns based on random values\n        drawRandomColor()- do not use any perameters and make turtle draw in 1/4 random colors\n        done()-called when user quits, keeps window open\n\n    drawRectanglePattern()\n        user will input center possitio\n\n\nTesting", "System Req\n\n\n\n\nSystem Analysis\n\n\n\n\nSystem Des   \n\n    user will input information \nthe pattern module will have several function\n        setup() -\nign will make turtle draw quickly\n                    make turtle have a window of 1000 * 800\n        reset() - turtle will erase everything\n        drawRectenglePattern() - will call draw rectangle\n                                center position is x, y of circular pattern drawn\n                                Offset- distance from center to starting corner\n\n        drawRectangle() - draw a single rectangle\n        drawCirclePatten() -\n        drawSuperPattern() - randomly draw rectangle and circle patterns based on random values\n        drawRandomColor()- do not use any perameters and make turtle draw in 1/4 random colors\n        done()-called when user quits, keeps window open\n\n    drawRectanglePattern()\n        user will input center possition\n\n\nTesting", "System Req\n\n\n\n\nSystem Analysis\n\n\n\n\nSystem Des   \n\n    user will input information \nthe pattern module will have several function\n        setup() -\nign will make turtle draw quickly\n                    make turtle have a window of 1000 * 800\n        reset() - turtle will erase everything\n        drawRectenglePattern() - will call draw rectangle\n                                center position is x, y of circular pattern drawn\n                                Offset- distance from center to starting corner\n\n        drawRectangle() - draw a single rectangle\n        drawCirclePatten() -\n        drawSuperPattern() - randomly draw rectangle and circle patterns based on random values\n        drawRandomColor()- do not use any perameters and make turtle draw in 1/4 random colors\n        done()-called when user quits, keeps window open\n\n    drawRectanglePattern()\n        user will input center possition\n        will go to center postion\n        \n\n\nTesting", "System Req\n\n\n\n\nSystem Analysis\n\n\n\n\nSystem Des   \n\n    user will input information \nthe pattern module will have several function\n        setup() -\nign will make turtle draw quickly\n                    make turtle have a window of 1000 * 800\n        reset() - turtle will erase everything\n        drawRectenglePattern() - will call draw rectangle\n                                center position is x, y of circular pattern drawn\n                                Offset- distance from center to starting corner\n\n        drawRectangle() - draw a single rectangle\n        drawCirclePatten() -\n        drawSuperPattern() - randomly draw rectangle and circle patterns based on random values\n        drawRandomColor()- do not use any perameters and make turtle draw in 1/4 random colors\n        done()-called when user quits, keeps window open\n\n    drawRectanglePattern()\n        user will input center possition\n        will go to center postion\n        u\n\n\nTesting", "System Req\n\n\n\n\nSystem Analysis\n\n\n\n\nSystem Des   \n\n    user will input information \nthe pattern module will have several function\n        setup() -\nign will make turtle draw quickly\n                    make turtle have a window of 1000 * 800\n        reset() - turtle will erase everything\n        drawRectenglePattern() - will call draw rectangle\n                                center position is x, y of circular pattern drawn\n                                Offset- distance from center to starting corner\n\n        drawRectangle() - draw a single rectangle\n        drawCirclePatten() -\n        drawSuperPattern() - randomly draw rectangle and circle patterns based on random values\n        drawRandomColor()- do not use any perameters and make turtle draw in 1/4 random colors\n        done()-called when user quits, keeps window open\n\n    drawRectanglePattern()\n        user will input center possition\n        will go to center postion\n        us\n\n\nTesting", "System Req\n\n\n\n\nSystem Analysis\n\n\n\n\nSystem Des   \n\n    user will input information \nthe pattern module will have several function\n        setup() -\nign will make turtle draw quickly\n                    make turtle have a window of 1000 * 800\n        reset() - turtle will erase everything\n        drawRectenglePattern() - will call draw rectangle\n                                center position is x, y of circular pattern drawn\n                                Offset- distance from center to starting corner\n\n        drawRectangle() - draw a single rectangle\n        drawCirclePatten() -\n        drawSuperPattern() - randomly draw rectangle and circle patterns based on random values\n        drawRandomColor()- do not use any perameters and make turtle draw in 1/4 random colors\n        done()-called when user quits, keeps window open\n\n    drawRectanglePattern()\n        user will input center possition\n        will go to center postion\n        use\n\n\nTesting", "System Req\n\n\n\n\nSystem Analysis\n\n\n\n\nSystem Des   \n\n    user will input information \nthe pattern module will have several function\n        setup() -\nign will make turtle draw quickly\n                    make turtle have a window of 1000 * 800\n        reset() - turtle will erase everything\n        drawRectenglePattern() - will call draw rectangle\n                                center position is x, y of circular pattern drawn\n                                Offset- distance from center to starting corner\n\n        drawRectangle() - draw a single rectangle\n        drawCirclePatten() -\n        drawSuperPattern() - randomly draw rectangle and circle patterns based on random values\n        drawRandomColor()- do not use any perameters and make turtle draw in 1/4 random colors\n        done()-called when user quits, keeps window open\n\n    drawRectanglePattern()\n        user will input center possition\n        will go to center postion\n        user\n\n\nTesting", "System Req\n\n\n\n\nSystem Analysis\n\n\n\n\nSystem Des   \n\n    user will input information \nthe pattern module will have several function\n        setup() -\nign will make turtle draw quickly\n                    make turtle have a window of 1000 * 800\n        reset() - turtle will erase everything\n        drawRectenglePattern() - will call draw rectangle\n                                center position is x, y of circular pattern drawn\n                                Offset- distance from center to starting corner\n\n        drawRectangle() - draw a single rectangle\n        drawCirclePatten() -\n        drawSuperPattern() - randomly draw rectangle and circle patterns based on random values\n        drawRandomColor()- do not use any perameters and make turtle draw in 1/4 random colors\n        done()-called when user quits, keeps window open\n\n    drawRectanglePattern()\n        user will input center possition\n        will go to center postion\n        user w\n\n\nTesting", "System Req\n\n\n\n\nSystem Analysis\n\n\n\n\nSystem Des   \n\n    user will input information \nthe pattern module will have several function\n        setup() -\nign will make turtle draw quickly\n                    make turtle have a window of 1000 * 800\n        reset() - turtle will erase everything\n        drawRectenglePattern() - will call draw rectangle\n                                center position is x, y of circular pattern drawn\n                                Offset- distance from center to starting corner\n\n        drawRectangle() - draw a single rectangle\n        drawCirclePatten() -\n        drawSuperPattern() - randomly draw rectangle and circle patterns based on random values\n        drawRandomColor()- do not use any perameters and make turtle draw in 1/4 random colors\n        done()-called when user quits, keeps window open\n\n    drawRectanglePattern()\n        user will input center possition\n        will go to center postion\n        user wi\n\n\nTesting", "System Req\n\n\n\n\nSystem Analysis\n\n\n\n\nSystem Des   \n\n    user will input information \nthe pattern module will have several function\n        setup() -\nign will make turtle draw quickly\n                    make turtle have a window of 1000 * 800\n        reset() - turtle will erase everything\n        drawRectenglePattern() - will call draw rectangle\n                                center position is x, y of circular pattern drawn\n                                Offset- distance from center to starting corner\n\n        drawRectangle() - draw a single rectangle\n        drawCirclePatten() -\n        drawSuperPattern() - randomly draw rectangle and circle patterns based on random values\n        drawRandomColor()- do not use any perameters and make turtle draw in 1/4 random colors\n        done()-called when user quits, keeps window open\n\n    drawRectanglePattern()\n        user will input center possition\n        will go to center postion\n        user wil\n\n\nTesting", "System Req\n\n\n\n\nSystem Analysis\n\n\n\n\nSystem Des   \n\n    user will input information \nthe pattern module will have several function\n        setup() -\nign will make turtle draw quickly\n                    make turtle have a window of 1000 * 800\n        reset() - turtle will erase everything\n        drawRectenglePattern() - will call draw rectangle\n                                center position is x, y of circular pattern drawn\n                                Offset- distance from center to starting corner\n\n        drawRectangle() - draw a single rectangle\n        drawCirclePatten() -\n        drawSuperPattern() - randomly draw rectangle and circle patterns based on random values\n        drawRandomColor()- do not use any perameters and make turtle draw in 1/4 random colors\n        done()-called when user quits, keeps window open\n\n    drawRectanglePattern()\n        user will input center possition\n        will go to center postion\n        user will\n\n\nTesting", "System Req\n\n\n\n\nSystem Analysis\n\n\n\n\nSystem Des   \n\n    user will input information \nthe pattern module will have several function\n        setup() -\nign will make turtle draw quickly\n                    make turtle have a window of 1000 * 800\n        reset() - turtle will erase everything\n        drawRectenglePattern() - will call draw rectangle\n                                center position is x, y of circular pattern drawn\n                                Offset- distance from center to starting corner\n\n        drawRectangle() - draw a single rectangle\n        drawCirclePatten() -\n        drawSuperPattern() - randomly draw rectangle and circle patterns based on random values\n        drawRandomColor()- do not use any perameters and make turtle draw in 1/4 random colors\n        done()-called when user quits, keeps window open\n\n    drawRectanglePattern()\n        user will input center possition\n        will go to center postion\n        user will i\n\n\nTesting", "System Req\n\n\n\n\nSystem Analysis\n\n\n\n\nSystem Des   \n\n    user will input information \nthe pattern module will have several function\n        setup() -\nign will make turtle draw quickly\n                    make turtle have a window of 1000 * 800\n        reset() - turtle will erase everything\n        drawRectenglePattern() - will call draw rectangle\n                                center position is x, y of circular pattern drawn\n                                Offset- distance from center to starting corner\n\n        drawRectangle() - draw a single rectangle\n        drawCirclePatten() -\n        drawSuperPattern() - randomly draw rectangle and circle patterns based on random values\n        drawRandomColor()- do not use any perameters and make turtle draw in 1/4 random colors\n        done()-called when user quits, keeps window open\n\n    drawRectanglePattern()\n        user will input center possition\n        will go to center postion\n        user will in\n\n\nTesting", "System Req\n\n\n\n\nSystem Analysis\n\n\n\n\nSystem Des   \n\n    user will input information \nthe pattern module will have several function\n        setup() -\nign will make turtle draw quickly\n                    make turtle have a window of 1000 * 800\n        reset() - turtle will erase everything\n        drawRectenglePattern() - will call draw rectangle\n                                center position is x, y of circular pattern drawn\n                                Offset- distance from center to starting corner\n\n        drawRectangle() - draw a single rectangle\n        drawCirclePatten() -\n        drawSuperPattern() - randomly draw rectangle and circle patterns based on random values\n        drawRandomColor()- do not use any perameters and make turtle draw in 1/4 random colors\n        done()-called when user quits, keeps window open\n\n    drawRectanglePattern()\n        user will input center possition\n        will go to center postion\n        user will inp\n\n\nTesting", "System Req\n\n\n\n\nSystem Analysis\n\n\n\n\nSystem Des   \n\n    user will input information \nthe pattern module will have several function\n        setup() -\nign will make turtle draw quickly\n                    make turtle have a window of 1000 * 800\n        reset() - turtle will erase everything\n        drawRectenglePattern() - will call draw rectangle\n                                center position is x, y of circular pattern drawn\n                                Offset- distance from center to starting corner\n\n        drawRectangle() - draw a single rectangle\n        drawCirclePatten() -\n        drawSuperPattern() - randomly draw rectangle and circle patterns based on random values\n        drawRandomColor()- do not use any perameters and make turtle draw in 1/4 random colors\n        done()-called when user quits, keeps window open\n\n    drawRectanglePattern()\n        user will input center possition\n        will go to center postion\n        user will inpu\n\n\nTesting", "System Req\n\n\n\n\nSystem Analysis\n\n\n\n\nSystem Des   \n\n    user will input information \nthe pattern module will have several function\n        setup() -\nign will make turtle draw quickly\n                    make turtle have a window of 1000 * 800\n        reset() - turtle will erase everything\n        drawRectenglePattern() - will call draw rectangle\n                                center position is x, y of circular pattern drawn\n                                Offset- distance from center to starting corner\n\n        drawRectangle() - draw a single rectangle\n        drawCirclePatten() -\n        drawSuperPattern() - randomly draw rectangle and circle patterns based on random values\n        drawRandomColor()- do not use any perameters and make turtle draw in 1/4 random colors\n        done()-called when user quits, keeps window open\n\n    drawRectanglePattern()\n        user will input center possition\n        will go to center postion\n        user will input\n\n\nTesting", "System Req\n\n\n\n\nSystem Analysis\n\n\n\n\nSystem Des   \n\n    user will input information \nthe pattern module will have several function\n        setup() -\nign will make turtle draw quickly\n                    make turtle have a window of 1000 * 800\n        reset() - turtle will erase everything\n        drawRectenglePattern() - will call draw rectangle\n                                center position is x, y of circular pattern drawn\n                                Offset- distance from center to starting corner\n\n        drawRectangle() - draw a single rectangle\n        drawCirclePatten() -\n        drawSuperPattern() - randomly draw rectangle and circle patterns based on random values\n        drawRandomColor()- do not use any perameters and make turtle draw in 1/4 random colors\n        done()-called when user quits, keeps window open\n\n    drawRectanglePattern()\n        user will input center possition\n        will go to center postion\n        user will input o\n\n\nTesting", "System Req\n\n\n\n\nSystem Analysis\n\n\n\n\nSystem Des   \n\n    user will input information \nthe pattern module will have several function\n        setup() -\nign will make turtle draw quickly\n                    make turtle have a window of 1000 * 800\n        reset() - turtle will erase everything\n        drawRectenglePattern() - will call draw rectangle\n                                center position is x, y of circular pattern drawn\n                                Offset- distance from center to starting corner\n\n        drawRectangle() - draw a single rectangle\n        drawCirclePatten() -\n        drawSuperPattern() - randomly draw rectangle and circle patterns based on random values\n        drawRandomColor()- do not use any perameters and make turtle draw in 1/4 random colors\n        done()-called when user quits, keeps window open\n\n    drawRectanglePattern()\n        user will input center possition\n        will go to center postion\n        user will input of\n\n\nTesting", "System Req\n\n\n\n\nSystem Analysis\n\n\n\n\nSystem Des   \n\n    user will input information \nthe pattern module will have several function\n        setup() -\nign will make turtle draw quickly\n                    make turtle have a window of 1000 * 800\n        reset() - turtle will erase everything\n        drawRectenglePattern() - will call draw rectangle\n                                center position is x, y of circular pattern drawn\n                                Offset- distance from center to starting corner\n\n        drawRectangle() - draw a single rectangle\n        drawCirclePatten() -\n        drawSuperPattern() - randomly draw rectangle and circle patterns based on random values\n        drawRandomColor()- do not use any perameters and make turtle draw in 1/4 random colors\n        done()-called when user quits, keeps window open\n\n    drawRectanglePattern()\n        user will input center possition\n        will go to center postion\n        user will input off\n\n\nTesting", "System Req\n\n\n\n\nSystem Analysis\n\n\n\n\nSystem Des   \n\n    user will input information \nthe pattern module will have several function\n        setup() -\nign will make turtle draw quickly\n                    make turtle have a window of 1000 * 800\n        reset() - turtle will erase everything\n        drawRectenglePattern() - will call draw rectangle\n                                center position is x, y of circular pattern drawn\n                                Offset- distance from center to starting corner\n\n        drawRectangle() - draw a single rectangle\n        drawCirclePatten() -\n        drawSuperPattern() - randomly draw rectangle and circle patterns based on random values\n        drawRandomColor()- do not use any perameters and make turtle draw in 1/4 random colors\n        done()-called when user quits, keeps window open\n\n    drawRectanglePattern()\n        user will input center possition\n        will go to center postion\n        user will input offs\n\n\nTesting", "System Req\n\n\n\n\nSystem Analysis\n\n\n\n\nSystem Des   \n\n    user will input information \nthe pattern module will have several function\n        setup() -\nign will make turtle draw quickly\n                    make turtle have a window of 1000 * 800\n        reset() - turtle will erase everything\n        drawRectenglePattern() - will call draw rectangle\n                                center position is x, y of circular pattern drawn\n                                Offset- distance from center to starting corner\n\n        drawRectangle() - draw a single rectangle\n        drawCirclePatten() -\n        drawSuperPattern() - randomly draw rectangle and circle patterns based on random values\n        drawRandomColor()- do not use any perameters and make turtle draw in 1/4 random colors\n        done()-called when user quits, keeps window open\n\n    drawRectanglePattern()\n        user will input center possition\n        will go to center postion\n        user will input offse\n\n\nTesting", "System Req\n\n\n\n\nSystem Analysis\n\n\n\n\nSystem Des   \n\n    user will input information \nthe pattern module will have several function\n        setup() -\nign will make turtle draw quickly\n                    make turtle have a window of 1000 * 800\n        reset() - turtle will erase everything\n        drawRectenglePattern() - will call draw rectangle\n                                center position is x, y of circular pattern drawn\n                                Offset- distance from center to starting corner\n\n        drawRectangle() - draw a single rectangle\n        drawCirclePatten() -\n        drawSuperPattern() - randomly draw rectangle and circle patterns based on random values\n        drawRandomColor()- do not use any perameters and make turtle draw in 1/4 random colors\n        done()-called when user quits, keeps window open\n\n    drawRectanglePattern()\n        user will input center possition\n        will go to center postion\n        user will input offsen\n\n\nTesting", "System Req\n\n\n\n\nSystem Analysis\n\n\n\n\nSystem Des   \n\n    user will input information \nthe pattern module will have several function\n        setup() -\nign will make turtle draw quickly\n                    make turtle have a window of 1000 * 800\n        reset() - turtle will erase everything\n        drawRectenglePattern() - will call draw rectangle\n                                center position is x, y of circular pattern drawn\n                                Offset- distance from center to starting corner\n\n        drawRectangle() - draw a single rectangle\n        drawCirclePatten() -\n        drawSuperPattern() - randomly draw rectangle and circle patterns based on random values\n        drawRandomColor()- do not use any perameters and make turtle draw in 1/4 random colors\n        done()-called when user quits, keeps window open\n\n    drawRectanglePattern()\n        user will input center possition\n        will go to center postion\n        user will input offse\n\n\nTesting", "System Req\n\n\n\n\nSystem Analysis\n\n\n\n\nSystem Des   \n\n    user will input information \nthe pattern module will have several function\n        setup() -\nign will make turtle draw quickly\n                    make turtle have a window of 1000 * 800\n        reset() - turtle will erase everything\n        drawRectenglePattern() - will call draw rectangle\n                                center position is x, y of circular pattern drawn\n                                Offset- distance from center to starting corner\n\n        drawRectangle() - draw a single rectangle\n        drawCirclePatten() -\n        drawSuperPattern() - randomly draw rectangle and circle patterns based on random values\n        drawRandomColor()- do not use any perameters and make turtle draw in 1/4 random colors\n        done()-called when user quits, keeps window open\n\n    drawRectanglePattern()\n        user will input center possition\n        will go to center postion\n        user will input offset\n\n\nTesting", "System Req\n\n\n\n\nSystem Analysis\n\n\n\n\nSystem Des   \n\n    user will input information \nthe pattern module will have several function\n        setup() -\nign will make turtle draw quickly\n                    make turtle have a window of 1000 * 800\n        reset() - turtle will erase everything\n        drawRectenglePattern() - will call draw rectangle\n                                center position is x, y of circular pattern drawn\n                                Offset- distance from center to starting corner\n\n        drawRectangle() - draw a single rectangle\n        drawCirclePatten() -\n        drawSuperPattern() - randomly draw rectangle and circle patterns based on random values\n        drawRandomColor()- do not use any perameters and make turtle draw in 1/4 random colors\n        done()-called when user quits, keeps window open\n\n    drawRectanglePattern()\n        user will input center possition\n        will go to center postion\n        user will input offset\n        \n\n\nTesting", "System Req\n\n\n\n\nSystem Analysis\n\n\n\n\nSystem Des   \n\n    user will input information \nthe pattern module will have several function\n        setup() -\nign will make turtle draw quickly\n                    make turtle have a window of 1000 * 800\n        reset() - turtle will erase everything\n        drawRectenglePattern() - will call draw rectangle\n                                center position is x, y of circular pattern drawn\n                                Offset- distance from center to starting corner\n\n        drawRectangle() - draw a single rectangle\n        drawCirclePatten() -\n        drawSuperPattern() - randomly draw rectangle and circle patterns based on random values\n        drawRandomColor()- do not use any perameters and make turtle draw in 1/4 random colors\n        done()-called when user quits, keeps window open\n\n    drawRectanglePattern()\n        user will input center possition\n        will go to center postion\n        user will input offset\n        w\n\n\nTesting", "System Req\n\n\n\n\nSystem Analysis\n\n\n\n\nSystem Des   \n\n    user will input information \nthe pattern module will have several function\n        setup() -\nign will make turtle draw quickly\n                    make turtle have a window of 1000 * 800\n        reset() - turtle will erase everything\n        drawRectenglePattern() - will call draw rectangle\n                                center position is x, y of circular pattern drawn\n                                Offset- distance from center to starting corner\n\n        drawRectangle() - draw a single rectangle\n        drawCirclePatten() -\n        drawSuperPattern() - randomly draw rectangle and circle patterns based on random values\n        drawRandomColor()- do not use any perameters and make turtle draw in 1/4 random colors\n        done()-called when user quits, keeps window open\n\n    drawRectanglePattern()\n        user will input center possition\n        will go to center postion\n        user will input offset\n        wi\n\n\nTesting", "System Req\n\n\n\n\nSystem Analysis\n\n\n\n\nSystem Des   \n\n    user will input information \nthe pattern module will have several function\n        setup() -\nign will make turtle draw quickly\n                    make turtle have a window of 1000 * 800\n        reset() - turtle will erase everything\n        drawRectenglePattern() - will call draw rectangle\n                                center position is x, y of circular pattern drawn\n                                Offset- distance from center to starting corner\n\n        drawRectangle() - draw a single rectangle\n        drawCirclePatten() -\n        drawSuperPattern() - randomly draw rectangle and circle patterns based on random values\n        drawRandomColor()- do not use any perameters and make turtle draw in 1/4 random colors\n        done()-called when user quits, keeps window open\n\n    drawRectanglePattern()\n        user will input center possition\n        will go to center postion\n        user will input offset\n        wit\n\n\nTesting", "System Req\n\n\n\n\nSystem Analysis\n\n\n\n\nSystem Des   \n\n    user will input information \nthe pattern module will have several function\n        setup() -\nign will make turtle draw quickly\n                    make turtle have a window of 1000 * 800\n        reset() - turtle will erase everything\n        drawRectenglePattern() - will call draw rectangle\n                                center position is x, y of circular pattern drawn\n                                Offset- distance from center to starting corner\n\n        drawRectangle() - draw a single rectangle\n        drawCirclePatten() -\n        drawSuperPattern() - randomly draw rectangle and circle patterns based on random values\n        drawRandomColor()- do not use any perameters and make turtle draw in 1/4 random colors\n        done()-called when user quits, keeps window open\n\n    drawRectanglePattern()\n        user will input center possition\n        will go to center postion\n        user will input offset\n        with\n\n\nTesting", "System Req\n\n\n\n\nSystem Analysis\n\n\n\n\nSystem Des   \n\n    user will input information \nthe pattern module will have several function\n        setup() -\nign will make turtle draw quickly\n                    make turtle have a window of 1000 * 800\n        reset() - turtle will erase everything\n        drawRectenglePattern() - will call draw rectangle\n                                center position is x, y of circular pattern drawn\n                                Offset- distance from center to starting corner\n\n        drawRectangle() - draw a single rectangle\n        drawCirclePatten() -\n        drawSuperPattern() - randomly draw rectangle and circle patterns based on random values\n        drawRandomColor()- do not use any perameters and make turtle draw in 1/4 random colors\n        done()-called when user quits, keeps window open\n\n    drawRectanglePattern()\n        user will input center possition\n        will go to center postion\n        user will input offset\n        wit\n\n\nTesting", "System Req\n\n\n\n\nSystem Analysis\n\n\n\n\nSystem Des   \n\n    user will input information \nthe pattern module will have several function\n        setup() -\nign will make turtle draw quickly\n                    make turtle have a window of 1000 * 800\n        reset() - turtle will erase everything\n        drawRectenglePattern() - will call draw rectangle\n                                center position is x, y of circular pattern drawn\n                                Offset- distance from center to starting corner\n\n        drawRectangle() - draw a single rectangle\n        drawCirclePatten() -\n        drawSuperPattern() - randomly draw rectangle and circle patterns based on random values\n        drawRandomColor()- do not use any perameters and make turtle draw in 1/4 random colors\n        done()-called when user quits, keeps window open\n\n    drawRectanglePattern()\n        user will input center possition\n        will go to center postion\n        user will input offset\n        wi\n\n\nTesting", "System Req\n\n\n\n\nSystem Analysis\n\n\n\n\nSystem Des   \n\n    user will input information \nthe pattern module will have several function\n        setup() -\nign will make turtle draw quickly\n                    make turtle have a window of 1000 * 800\n        reset() - turtle will erase everything\n        drawRectenglePattern() - will call draw rectangle\n                                center position is x, y of circular pattern drawn\n                                Offset- distance from center to starting corner\n\n        drawRectangle() - draw a single rectangle\n        drawCirclePatten() -\n        drawSuperPattern() - randomly draw rectangle and circle patterns based on random values\n        drawRandomColor()- do not use any perameters and make turtle draw in 1/4 random colors\n        done()-called when user quits, keeps window open\n\n    drawRectanglePattern()\n        user will input center possition\n        will go to center postion\n        user will input offset\n        w\n\n\nTesting", "System Req\n\n\n\n\nSystem Analysis\n\n\n\n\nSystem Des   \n\n    user will input information \nthe pattern module will have several function\n        setup() -\nign will make turtle draw quickly\n                    make turtle have a window of 1000 * 800\n        reset() - turtle will erase everything\n        drawRectenglePattern() - will call draw rectangle\n                                center position is x, y of circular pattern drawn\n                                Offset- distance from center to starting corner\n\n        drawRectangle() - draw a single rectangle\n        drawCirclePatten() -\n        drawSuperPattern() - randomly draw rectangle and circle patterns based on random values\n        drawRandomColor()- do not use any perameters and make turtle draw in 1/4 random colors\n        done()-called when user quits, keeps window open\n\n    drawRectanglePattern()\n        user will input center possition\n        will go to center postion\n        user will input offset\n        \n\n\nTesting", "System Req\n\n\n\n\nSystem Analysis\n\n\n\n\nSystem Des   \n\n    user will input information \nthe pattern module will have several function\n        setup() -\nign will make turtle draw quickly\n                    make turtle have a window of 1000 * 800\n        reset() - turtle will erase everything\n        drawRectenglePattern() - will call draw rectangle\n                                center position is x, y of circular pattern drawn\n                                Offset- distance from center to starting corner\n\n        drawRectangle() - draw a single rectangle\n        drawCirclePatten() -\n        drawSuperPattern() - randomly draw rectangle and circle patterns based on random values\n        drawRandomColor()- do not use any perameters and make turtle draw in 1/4 random colors\n        done()-called when user quits, keeps window open\n\n    drawRectanglePattern()\n        user will input center possition\n        will go to center postion\n        user will input offset\n        u\n\n\nTesting", "System Req\n\n\n\n\nSystem Analysis\n\n\n\n\nSystem Des   \n\n    user will input information \nthe pattern module will have several function\n        setup() -\nign will make turtle draw quickly\n                    make turtle have a window of 1000 * 800\n        reset() - turtle will erase everything\n        drawRectenglePattern() - will call draw rectangle\n                                center position is x, y of circular pattern drawn\n                                Offset- distance from center to starting corner\n\n        drawRectangle() - draw a single rectangle\n        drawCirclePatten() -\n        drawSuperPattern() - randomly draw rectangle and circle patterns based on random values\n        drawRandomColor()- do not use any perameters and make turtle draw in 1/4 random colors\n        done()-called when user quits, keeps window open\n\n    drawRectanglePattern()\n        user will input center possition\n        will go to center postion\n        user will input offset\n        us\n\n\nTesting", "System Req\n\n\n\n\nSystem Analysis\n\n\n\n\nSystem Des   \n\n    user will input information \nthe pattern module will have several function\n        setup() -\nign will make turtle draw quickly\n                    make turtle have a window of 1000 * 800\n        reset() - turtle will erase everything\n        drawRectenglePattern() - will call draw rectangle\n                                center position is x, y of circular pattern drawn\n                                Offset- distance from center to starting corner\n\n        drawRectangle() - draw a single rectangle\n        drawCirclePatten() -\n        drawSuperPattern() - randomly draw rectangle and circle patterns based on random values\n        drawRandomColor()- do not use any perameters and make turtle draw in 1/4 random colors\n        done()-called when user quits, keeps window open\n\n    drawRectanglePattern()\n        user will input center possition\n        will go to center postion\n        user will input offset\n        use\n\n\nTesting", "System Req\n\n\n\n\nSystem Analysis\n\n\n\n\nSystem Des   \n\n    user will input information \nthe pattern module will have several function\n        setup() -\nign will make turtle draw quickly\n                    make turtle have a window of 1000 * 800\n        reset() - turtle will erase everything\n        drawRectenglePattern() - will call draw rectangle\n                                center position is x, y of circular pattern drawn\n                                Offset- distance from center to starting corner\n\n        drawRectangle() - draw a single rectangle\n        drawCirclePatten() -\n        drawSuperPattern() - randomly draw rectangle and circle patterns based on random values\n        drawRandomColor()- do not use any perameters and make turtle draw in 1/4 random colors\n        done()-called when user quits, keeps window open\n\n    drawRectanglePattern()\n        user will input center possition\n        will go to center postion\n        user will input offset\n        user\n\n\nTesting", "System Req\n\n\n\n\nSystem Analysis\n\n\n\n\nSystem Des   \n\n    user will input information \nthe pattern module will have several function\n        setup() -\nign will make turtle draw quickly\n                    make turtle have a window of 1000 * 800\n        reset() - turtle will erase everything\n        drawRectenglePattern() - will call draw rectangle\n                                center position is x, y of circular pattern drawn\n                                Offset- distance from center to starting corner\n\n        drawRectangle() - draw a single rectangle\n        drawCirclePatten() -\n        drawSuperPattern() - randomly draw rectangle and circle patterns based on random values\n        drawRandomColor()- do not use any perameters and make turtle draw in 1/4 random colors\n        done()-called when user quits, keeps window open\n\n    drawRectanglePattern()\n        user will input center possition\n        will go to center postion\n        user will input offset\n        user w\n\n\nTesting", "System Req\n\n\n\n\nSystem Analysis\n\n\n\n\nSystem Des   \n\n    user will input information \nthe pattern module will have several function\n        setup() -\nign will make turtle draw quickly\n                    make turtle have a window of 1000 * 800\n        reset() - turtle will erase everything\n        drawRectenglePattern() - will call draw rectangle\n                                center position is x, y of circular pattern drawn\n                                Offset- distance from center to starting corner\n\n        drawRectangle() - draw a single rectangle\n        drawCirclePatten() -\n        drawSuperPattern() - randomly draw rectangle and circle patterns based on random values\n        drawRandomColor()- do not use any perameters and make turtle draw in 1/4 random colors\n        done()-called when user quits, keeps window open\n\n    drawRectanglePattern()\n        user will input center possition\n        will go to center postion\n        user will input offset\n        user wi\n\n\nTesting", "System Req\n\n\n\n\nSystem Analysis\n\n\n\n\nSystem Des   \n\n    user will input information \nthe pattern module will have several function\n        setup() -\nign will make turtle draw quickly\n                    make turtle have a window of 1000 * 800\n        reset() - turtle will erase everything\n        drawRectenglePattern() - will call draw rectangle\n                                center position is x, y of circular pattern drawn\n                                Offset- distance from center to starting corner\n\n        drawRectangle() - draw a single rectangle\n        drawCirclePatten() -\n        drawSuperPattern() - randomly draw rectangle and circle patterns based on random values\n        drawRandomColor()- do not use any perameters and make turtle draw in 1/4 random colors\n        done()-called when user quits, keeps window open\n\n    drawRectanglePattern()\n        user will input center possition\n        will go to center postion\n        user will input offset\n        user wil\n\n\nTesting", "System Req\n\n\n\n\nSystem Analysis\n\n\n\n\nSystem Des   \n\n    user will input information \nthe pattern module will have several function\n        setup() -\nign will make turtle draw quickly\n                    make turtle have a window of 1000 * 800\n        reset() - turtle will erase everything\n        drawRectenglePattern() - will call draw rectangle\n                                center position is x, y of circular pattern drawn\n                                Offset- distance from center to starting corner\n\n        drawRectangle() - draw a single rectangle\n        drawCirclePatten() -\n        drawSuperPattern() - randomly draw rectangle and circle patterns based on random values\n        drawRandomColor()- do not use any perameters and make turtle draw in 1/4 random colors\n        done()-called when user quits, keeps window open\n\n    drawRectanglePattern()\n        user will input center possition\n        will go to center postion\n        user will input offset\n        user will\n\n\nTesting", "System Req\n\n\n\n\nSystem Analysis\n\n\n\n\nSystem Des   \n\n    user will input information \nthe pattern module will have several function\n        setup() -\nign will make turtle draw quickly\n                    make turtle have a window of 1000 * 800\n        reset() - turtle will erase everything\n        drawRectenglePattern() - will call draw rectangle\n                                center position is x, y of circular pattern drawn\n                                Offset- distance from center to starting corner\n\n        drawRectangle() - draw a single rectangle\n        drawCirclePatten() -\n        drawSuperPattern() - randomly draw rectangle and circle patterns based on random values\n        drawRandomColor()- do not use any perameters and make turtle draw in 1/4 random colors\n        done()-called when user quits, keeps window open\n\n    drawRectanglePattern()\n        user will input center possition\n        will go to center postion\n        user will input offset\n        user will i\n\n\nTesting", "System Req\n\n\n\n\nSystem Analysis\n\n\n\n\nSystem Des   \n\n    user will input information \nthe pattern module will have several function\n        setup() -\nign will make turtle draw quickly\n                    make turtle have a window of 1000 * 800\n        reset() - turtle will erase everything\n        drawRectenglePattern() - will call draw rectangle\n                                center position is x, y of circular pattern drawn\n                                Offset- distance from center to starting corner\n\n        drawRectangle() - draw a single rectangle\n        drawCirclePatten() -\n        drawSuperPattern() - randomly draw rectangle and circle patterns based on random values\n        drawRandomColor()- do not use any perameters and make turtle draw in 1/4 random colors\n        done()-called when user quits, keeps window open\n\n    drawRectanglePattern()\n        user will input center possition\n        will go to center postion\n        user will input offset\n        user will in\n\n\nTesting", "System Req\n\n\n\n\nSystem Analysis\n\n\n\n\nSystem Des   \n\n    user will input information \nthe pattern module will have several function\n        setup() -\nign will make turtle draw quickly\n                    make turtle have a window of 1000 * 800\n        reset() - turtle will erase everything\n        drawRectenglePattern() - will call draw rectangle\n                                center position is x, y of circular pattern drawn\n                                Offset- distance from center to starting corner\n\n        drawRectangle() - draw a single rectangle\n        drawCirclePatten() -\n        drawSuperPattern() - randomly draw rectangle and circle patterns based on random values\n        drawRandomColor()- do not use any perameters and make turtle draw in 1/4 random colors\n        done()-called when user quits, keeps window open\n\n    drawRectanglePattern()\n        user will input center possition\n        will go to center postion\n        user will input offset\n        user will inp\n\n\nTesting", "System Req\n\n\n\n\nSystem Analysis\n\n\n\n\nSystem Des   \n\n    user will input information \nthe pattern module will have several function\n        setup() -\nign will make turtle draw quickly\n                    make turtle have a window of 1000 * 800\n        reset() - turtle will erase everything\n        drawRectenglePattern() - will call draw rectangle\n                                center position is x, y of circular pattern drawn\n                                Offset- distance from center to starting corner\n\n        drawRectangle() - draw a single rectangle\n        drawCirclePatten() -\n        drawSuperPattern() - randomly draw rectangle and circle patterns based on random values\n        drawRandomColor()- do not use any perameters and make turtle draw in 1/4 random colors\n        done()-called when user quits, keeps window open\n\n    drawRectanglePattern()\n        user will input center possition\n        will go to center postion\n        user will input offset\n        user will inpu\n\n\nTesting", "System Req\n\n\n\n\nSystem Analysis\n\n\n\n\nSystem Des   \n\n    user will input information \nthe pattern module will have several function\n        setup() -\nign will make turtle draw quickly\n                    make turtle have a window of 1000 * 800\n        reset() - turtle will erase everything\n        drawRectenglePattern() - will call draw rectangle\n                                center position is x, y of circular pattern drawn\n                                Offset- distance from center to starting corner\n\n        drawRectangle() - draw a single rectangle\n        drawCirclePatten() -\n        drawSuperPattern() - randomly draw rectangle and circle patterns based on random values\n        drawRandomColor()- do not use any perameters and make turtle draw in 1/4 random colors\n        done()-called when user quits, keeps window open\n\n    drawRectanglePattern()\n        user will input center possition\n        will go to center postion\n        user will input offset\n        user will input\n\n\nTesting", "System Req\n\n\n\n\nSystem Analysis\n\n\n\n\nSystem Des   \n\n    user will input information \nthe pattern module will have several function\n        setup() -\nign will make turtle draw quickly\n                    make turtle have a window of 1000 * 800\n        reset() - turtle will erase everything\n        drawRectenglePattern() - will call draw rectangle\n                                center position is x, y of circular pattern drawn\n                                Offset- distance from center to starting corner\n\n        drawRectangle() - draw a single rectangle\n        drawCirclePatten() -\n        drawSuperPattern() - randomly draw rectangle and circle patterns based on random values\n        drawRandomColor()- do not use any perameters and make turtle draw in 1/4 random colors\n        done()-called when user quits, keeps window open\n\n    drawRectanglePattern()\n        user will input center possition\n        will go to center postion\n        user will input offset\n        user will input t\n\n\nTesting", "System Req\n\n\n\n\nSystem Analysis\n\n\n\n\nSystem Des   \n\n    user will input information \nthe pattern module will have several function\n        setup() -\nign will make turtle draw quickly\n                    make turtle have a window of 1000 * 800\n        reset() - turtle will erase everything\n        drawRectenglePattern() - will call draw rectangle\n                                center position is x, y of circular pattern drawn\n                                Offset- distance from center to starting corner\n\n        drawRectangle() - draw a single rectangle\n        drawCirclePatten() -\n        drawSuperPattern() - randomly draw rectangle and circle patterns based on random values\n        drawRandomColor()- do not use any perameters and make turtle draw in 1/4 random colors\n        done()-called when user quits, keeps window open\n\n    drawRectanglePattern()\n        user will input center possition\n        will go to center postion\n        user will input offset\n        user will input th\n\n\nTesting", "System Req\n\n\n\n\nSystem Analysis\n\n\n\n\nSystem Des   \n\n    user will input information \nthe pattern module will have several function\n        setup() -\nign will make turtle draw quickly\n                    make turtle have a window of 1000 * 800\n        reset() - turtle will erase everything\n        drawRectenglePattern() - will call draw rectangle\n                                center position is x, y of circular pattern drawn\n                                Offset- distance from center to starting corner\n\n        drawRectangle() - draw a single rectangle\n        drawCirclePatten() -\n        drawSuperPattern() - randomly draw rectangle and circle patterns based on random values\n        drawRandomColor()- do not use any perameters and make turtle draw in 1/4 random colors\n        done()-called when user quits, keeps window open\n\n    drawRectanglePattern()\n        user will input center possition\n        will go to center postion\n        user will input offset\n        user will input the\n\n\nTesting", "System Req\n\n\n\n\nSystem Analysis\n\n\n\n\nSystem Des   \n\n    user will input information \nthe pattern module will have several function\n        setup() -\nign will make turtle draw quickly\n                    make turtle have a window of 1000 * 800\n        reset() - turtle will erase everything\n        drawRectenglePattern() - will call draw rectangle\n                                center position is x, y of circular pattern drawn\n                                Offset- distance from center to starting corner\n\n        drawRectangle() - draw a single rectangle\n        drawCirclePatten() -\n        drawSuperPattern() - randomly draw rectangle and circle patterns based on random values\n        drawRandomColor()- do not use any perameters and make turtle draw in 1/4 random colors\n        done()-called when user quits, keeps window open\n\n    drawRectanglePattern()\n        user will input center possition\n        will go to center postion\n        user will input offset\n        user will input the w\n\n\nTesting", "System Req\n\n\n\n\nSystem Analysis\n\n\n\n\nSystem Des   \n\n    user will input information \nthe pattern module will have several function\n        setup() -\nign will make turtle draw quickly\n                    make turtle have a window of 1000 * 800\n        reset() - turtle will erase everything\n        drawRectenglePattern() - will call draw rectangle\n                                center position is x, y of circular pattern drawn\n                                Offset- distance from center to starting corner\n\n        drawRectangle() - draw a single rectangle\n        drawCirclePatten() -\n        drawSuperPattern() - randomly draw rectangle and circle patterns based on random values\n        drawRandomColor()- do not use any perameters and make turtle draw in 1/4 random colors\n        done()-called when user quits, keeps window open\n\n    drawRectanglePattern()\n        user will input center possition\n        will go to center postion\n        user will input offset\n        user will input the wi\n\n\nTesting", "System Req\n\n\n\n\nSystem Analysis\n\n\n\n\nSystem Des   \n\n    user will input information \nthe pattern module will have several function\n        setup() -\nign will make turtle draw quickly\n                    make turtle have a window of 1000 * 800\n        reset() - turtle will erase everything\n        drawRectenglePattern() - will call draw rectangle\n                                center position is x, y of circular pattern drawn\n                                Offset- distance from center to starting corner\n\n        drawRectangle() - draw a single rectangle\n        drawCirclePatten() -\n        drawSuperPattern() - randomly draw rectangle and circle patterns based on random values\n        drawRandomColor()- do not use any perameters and make turtle draw in 1/4 random colors\n        done()-called when user quits, keeps window open\n\n    drawRectanglePattern()\n        user will input center possition\n        will go to center postion\n        user will input offset\n        user will input the wid\n\n\nTesting", "System Req\n\n\n\n\nSystem Analysis\n\n\n\n\nSystem Des   \n\n    user will input information \nthe pattern module will have several function\n        setup() -\nign will make turtle draw quickly\n                    make turtle have a window of 1000 * 800\n        reset() - turtle will erase everything\n        drawRectenglePattern() - will call draw rectangle\n                                center position is x, y of circular pattern drawn\n                                Offset- distance from center to starting corner\n\n        drawRectangle() - draw a single rectangle\n        drawCirclePatten() -\n        drawSuperPattern() - randomly draw rectangle and circle patterns based on random values\n        drawRandomColor()- do not use any perameters and make turtle draw in 1/4 random colors\n        done()-called when user quits, keeps window open\n\n    drawRectanglePattern()\n        user will input center possition\n        will go to center postion\n        user will input offset\n        user will input the widt\n\n\nTesting", "System Req\n\n\n\n\nSystem Analysis\n\n\n\n\nSystem Des   \n\n    user will input information \nthe pattern module will have several function\n        setup() -\nign will make turtle draw quickly\n                    make turtle have a window of 1000 * 800\n        reset() - turtle will erase everything\n        drawRectenglePattern() - will call draw rectangle\n                                center position is x, y of circular pattern drawn\n                                Offset- distance from center to starting corner\n\n        drawRectangle() - draw a single rectangle\n        drawCirclePatten() -\n        drawSuperPattern() - randomly draw rectangle and circle patterns based on random values\n        drawRandomColor()- do not use any perameters and make turtle draw in 1/4 random colors\n        done()-called when user quits, keeps window open\n\n    drawRectanglePattern()\n        user will input center possition\n        will go to center postion\n        user will input offset\n        user will input the width\n\n\nTesting", "System Req\n\n\n\n\nSystem Analysis\n\n\n\n\nSystem Des   \n\n    user will input information \nthe pattern module will have several function\n        setup() -\nign will make turtle draw quickly\n                    make turtle have a window of 1000 * 800\n        reset() - turtle will erase everything\n        drawRectenglePattern() - will call draw rectangle\n                                center position is x, y of circular pattern drawn\n                                Offset- distance from center to starting corner\n\n        drawRectangle() - draw a single rectangle\n        drawCirclePatten() -\n        drawSuperPattern() - randomly draw rectangle and circle patterns based on random values\n        drawRandomColor()- do not use any perameters and make turtle draw in 1/4 random colors\n        done()-called when user quits, keeps window open\n\n    drawRectanglePattern()\n        user will input center possition\n        will go to center postion\n        user will input offset\n        user will input the width o\n\n\nTesting", "System Req\n\n\n\n\nSystem Analysis\n\n\n\n\nSystem Des   \n\n    user will input information \nthe pattern module will have several function\n        setup() -\nign will make turtle draw quickly\n                    make turtle have a window of 1000 * 800\n        reset() - turtle will erase everything\n        drawRectenglePattern() - will call draw rectangle\n                                center position is x, y of circular pattern drawn\n                                Offset- distance from center to starting corner\n\n        drawRectangle() - draw a single rectangle\n        drawCirclePatten() -\n        drawSuperPattern() - randomly draw rectangle and circle patterns based on random values\n        drawRandomColor()- do not use any perameters and make turtle draw in 1/4 random colors\n        done()-called when user quits, keeps window open\n\n    drawRectanglePattern()\n        user will input center possition\n        will go to center postion\n        user will input offset\n        user will input the width of\n\n\nTesting", "System Req\n\n\n\n\nSystem Analysis\n\n\n\n\nSystem Des   \n\n    user will input information \nthe pattern module will have several function\n        setup() -\nign will make turtle draw quickly\n                    make turtle have a window of 1000 * 800\n        reset() - turtle will erase everything\n        drawRectenglePattern() - will call draw rectangle\n                                center position is x, y of circular pattern drawn\n                                Offset- distance from center to starting corner\n\n        drawRectangle() - draw a single rectangle\n        drawCirclePatten() -\n        drawSuperPattern() - randomly draw rectangle and circle patterns based on random values\n        drawRandomColor()- do not use any perameters and make turtle draw in 1/4 random colors\n        done()-called when user quits, keeps window open\n\n    drawRectanglePattern()\n        user will input center possition\n        will go to center postion\n        user will input offset\n        user will input the width of t\n\n\nTesting", "System Req\n\n\n\n\nSystem Analysis\n\n\n\n\nSystem Des   \n\n    user will input information \nthe pattern module will have several function\n        setup() -\nign will make turtle draw quickly\n                    make turtle have a window of 1000 * 800\n        reset() - turtle will erase everything\n        drawRectenglePattern() - will call draw rectangle\n                                center position is x, y of circular pattern drawn\n                                Offset- distance from center to starting corner\n\n        drawRectangle() - draw a single rectangle\n        drawCirclePatten() -\n        drawSuperPattern() - randomly draw rectangle and circle patterns based on random values\n        drawRandomColor()- do not use any perameters and make turtle draw in 1/4 random colors\n        done()-called when user quits, keeps window open\n\n    drawRectanglePattern()\n        user will input center possition\n        will go to center postion\n        user will input offset\n        user will input the width of th\n\n\nTesting", "System Req\n\n\n\n\nSystem Analysis\n\n\n\n\nSystem Des   \n\n    user will input information \nthe pattern module will have several function\n        setup() -\nign will make turtle draw quickly\n                    make turtle have a window of 1000 * 800\n        reset() - turtle will erase everything\n        drawRectenglePattern() - will call draw rectangle\n                                center position is x, y of circular pattern drawn\n                                Offset- distance from center to starting corner\n\n        drawRectangle() - draw a single rectangle\n        drawCirclePatten() -\n        drawSuperPattern() - randomly draw rectangle and circle patterns based on random values\n        drawRandomColor()- do not use any perameters and make turtle draw in 1/4 random colors\n        done()-called when user quits, keeps window open\n\n    drawRectanglePattern()\n        user will input center possition\n        will go to center postion\n        user will input offset\n        user will input the width of the\n\n\nTesting", "System Req\n\n\n\n\nSystem Analysis\n\n\n\n\nSystem Des   \n\n    user will input information \nthe pattern module will have several function\n        setup() -\nign will make turtle draw quickly\n                    make turtle have a window of 1000 * 800\n        reset() - turtle will erase everything\n        drawRectenglePattern() - will call draw rectangle\n                                center position is x, y of circular pattern drawn\n                                Offset- distance from center to starting corner\n\n        drawRectangle() - draw a single rectangle\n        drawCirclePatten() -\n        drawSuperPattern() - randomly draw rectangle and circle patterns based on random values\n        drawRandomColor()- do not use any perameters and make turtle draw in 1/4 random colors\n        done()-called when user quits, keeps window open\n\n    drawRectanglePattern()\n        user will input center possition\n        will go to center postion\n        user will input offset\n        user will input the width of the r\n\n\nTesting", "System Req\n\n\n\n\nSystem Analysis\n\n\n\n\nSystem Des   \n\n    user will input information \nthe pattern module will have several function\n        setup() -\nign will make turtle draw quickly\n                    make turtle have a window of 1000 * 800\n        reset() - turtle will erase everything\n        drawRectenglePattern() - will call draw rectangle\n                                center position is x, y of circular pattern drawn\n                                Offset- distance from center to starting corner\n\n        drawRectangle() - draw a single rectangle\n        drawCirclePatten() -\n        drawSuperPattern() - randomly draw rectangle and circle patterns based on random values\n        drawRandomColor()- do not use any perameters and make turtle draw in 1/4 random colors\n        done()-called when user quits, keeps window open\n\n    drawRectanglePattern()\n        user will input center possition\n        will go to center postion\n        user will input offset\n        user will input the width of the re\n\n\nTesting", "System Req\n\n\n\n\nSystem Analysis\n\n\n\n\nSystem Des   \n\n    user will input information \nthe pattern module will have several function\n        setup() -\nign will make turtle draw quickly\n                    make turtle have a window of 1000 * 800\n        reset() - turtle will erase everything\n        drawRectenglePattern() - will call draw rectangle\n                                center position is x, y of circular pattern drawn\n                                Offset- distance from center to starting corner\n\n        drawRectangle() - draw a single rectangle\n        drawCirclePatten() -\n        drawSuperPattern() - randomly draw rectangle and circle patterns based on random values\n        drawRandomColor()- do not use any perameters and make turtle draw in 1/4 random colors\n        done()-called when user quits, keeps window open\n\n    drawRectanglePattern()\n        user will input center possition\n        will go to center postion\n        user will input offset\n        user will input the width of the rec\n\n\nTesting", "System Req\n\n\n\n\nSystem Analysis\n\n\n\n\nSystem Des   \n\n    user will input information \nthe pattern module will have several function\n        setup() -\nign will make turtle draw quickly\n                    make turtle have a window of 1000 * 800\n        reset() - turtle will erase everything\n        drawRectenglePattern() - will call draw rectangle\n                                center position is x, y of circular pattern drawn\n                                Offset- distance from center to starting corner\n\n        drawRectangle() - draw a single rectangle\n        drawCirclePatten() -\n        drawSuperPattern() - randomly draw rectangle and circle patterns based on random values\n        drawRandomColor()- do not use any perameters and make turtle draw in 1/4 random colors\n        done()-called when user quits, keeps window open\n\n    drawRectanglePattern()\n        user will input center possition\n        will go to center postion\n        user will input offset\n        user will input the width of the rect\n\n\nTesting", "System Req\n\n\n\n\nSystem Analysis\n\n\n\n\nSystem Des   \n\n    user will input information \nthe pattern module will have several function\n        setup() -\nign will make turtle draw quickly\n                    make turtle have a window of 1000 * 800\n        reset() - turtle will erase everything\n        drawRectenglePattern() - will call draw rectangle\n                                center position is x, y of circular pattern drawn\n                                Offset- distance from center to starting corner\n\n        drawRectangle() - draw a single rectangle\n        drawCirclePatten() -\n        drawSuperPattern() - randomly draw rectangle and circle patterns based on random values\n        drawRandomColor()- do not use any perameters and make turtle draw in 1/4 random colors\n        done()-called when user quits, keeps window open\n\n    drawRectanglePattern()\n        user will input center possition\n        will go to center postion\n        user will input offset\n        user will input the width of the recta\n\n\nTesting", "System Req\n\n\n\n\nSystem Analysis\n\n\n\n\nSystem Des   \n\n    user will input information \nthe pattern module will have several function\n        setup() -\nign will make turtle draw quickly\n                    make turtle have a window of 1000 * 800\n        reset() - turtle will erase everything\n        drawRectenglePattern() - will call draw rectangle\n                                center position is x, y of circular pattern drawn\n                                Offset- distance from center to starting corner\n\n        drawRectangle() - draw a single rectangle\n        drawCirclePatten() -\n        drawSuperPattern() - randomly draw rectangle and circle patterns based on random values\n        drawRandomColor()- do not use any perameters and make turtle draw in 1/4 random colors\n        done()-called when user quits, keeps window open\n\n    drawRectanglePattern()\n        user will input center possition\n        will go to center postion\n        user will input offset\n        user will input the width of the rectan\n\n\nTesting", "System Req\n\n\n\n\nSystem Analysis\n\n\n\n\nSystem Des   \n\n    user will input information \nthe pattern module will have several function\n        setup() -\nign will make turtle draw quickly\n                    make turtle have a window of 1000 * 800\n        reset() - turtle will erase everything\n        drawRectenglePattern() - will call draw rectangle\n                                center position is x, y of circular pattern drawn\n                                Offset- distance from center to starting corner\n\n        drawRectangle() - draw a single rectangle\n        drawCirclePatten() -\n        drawSuperPattern() - randomly draw rectangle and circle patterns based on random values\n        drawRandomColor()- do not use any perameters and make turtle draw in 1/4 random colors\n        done()-called when user quits, keeps window open\n\n    drawRectanglePattern()\n        user will input center possition\n        will go to center postion\n        user will input offset\n        user will input the width of the rectang\n\n\nTesting", "System Req\n\n\n\n\nSystem Analysis\n\n\n\n\nSystem Des   \n\n    user will input information \nthe pattern module will have several function\n        setup() -\nign will make turtle draw quickly\n                    make turtle have a window of 1000 * 800\n        reset() - turtle will erase everything\n        drawRectenglePattern() - will call draw rectangle\n                                center position is x, y of circular pattern drawn\n                                Offset- distance from center to starting corner\n\n        drawRectangle() - draw a single rectangle\n        drawCirclePatten() -\n        drawSuperPattern() - randomly draw rectangle and circle patterns based on random values\n        drawRandomColor()- do not use any perameters and make turtle draw in 1/4 random colors\n        done()-called when user quits, keeps window open\n\n    drawRectanglePattern()\n        user will input center possition\n        will go to center postion\n        user will input offset\n        user will input the width of the rectangl\n\n\nTesting", "System Req\n\n\n\n\nSystem Analysis\n\n\n\n\nSystem Des   \n\n    user will input information \nthe pattern module will have several function\n        setup() -\nign will make turtle draw quickly\n                    make turtle have a window of 1000 * 800\n        reset() - turtle will erase everything\n        drawRectenglePattern() - will call draw rectangle\n                                center position is x, y of circular pattern drawn\n                                Offset- distance from center to starting corner\n\n        drawRectangle() - draw a single rectangle\n        drawCirclePatten() -\n        drawSuperPattern() - randomly draw rectangle and circle patterns based on random values\n        drawRandomColor()- do not use any perameters and make turtle draw in 1/4 random colors\n        done()-called when user quits, keeps window open\n\n    drawRectanglePattern()\n        user will input center possition\n        will go to center postion\n        user will input offset\n        user will input the width of the rectangle\n\n\nTesting", "System Req\n\n\n\n\nSystem Analysis\n\n\n\n\nSystem Des   \n\n    user will input information \nthe pattern module will have several function\n        setup() -\nign will make turtle draw quickly\n                    make turtle have a window of 1000 * 800\n        reset() - turtle will erase everything\n        drawRectenglePattern() - will call draw rectangle\n                                center position is x, y of circular pattern drawn\n                                Offset- distance from center to starting corner\n\n        drawRectangle() - draw a single rectangle\n        drawCirclePatten() -\n        drawSuperPattern() - randomly draw rectangle and circle patterns based on random values\n        drawRandomColor()- do not use any perameters and make turtle draw in 1/4 random colors\n        done()-called when user quits, keeps window open\n\n    drawRectanglePattern()\n        user will input center possition\n        will go to center postion\n        user will input offset\n        user will input the width of the rectangle\n        \n\n\nTesting", "System Req\n\n\n\n\nSystem Analysis\n\n\n\n\nSystem Des   \n\n    user will input information \nthe pattern module will have several function\n        setup() -\nign will make turtle draw quickly\n                    make turtle have a window of 1000 * 800\n        reset() - turtle will erase everything\n        drawRectenglePattern() - will call draw rectangle\n                                center position is x, y of circular pattern drawn\n                                Offset- distance from center to starting corner\n\n        drawRectangle() - draw a single rectangle\n        drawCirclePatten() -\n        drawSuperPattern() - randomly draw rectangle and circle patterns based on random values\n        drawRandomColor()- do not use any perameters and make turtle draw in 1/4 random colors\n        done()-called when user quits, keeps window open\n\n    drawRectanglePattern()\n        user will input center possition\n        will go to center postion\n        user will input offset\n        user will input the width of the rectangle\n        u\n\n\nTesting", "System Req\n\n\n\n\nSystem Analysis\n\n\n\n\nSystem Des   \n\n    user will input information \nthe pattern module will have several function\n        setup() -\nign will make turtle draw quickly\n                    make turtle have a window of 1000 * 800\n        reset() - turtle will erase everything\n        drawRectenglePattern() - will call draw rectangle\n                                center position is x, y of circular pattern drawn\n                                Offset- distance from center to starting corner\n\n        drawRectangle() - draw a single rectangle\n        drawCirclePatten() -\n        drawSuperPattern() - randomly draw rectangle and circle patterns based on random values\n        drawRandomColor()- do not use any perameters and make turtle draw in 1/4 random colors\n        done()-called when user quits, keeps window open\n\n    drawRectanglePattern()\n        user will input center possition\n        will go to center postion\n        user will input offset\n        user will input the width of the rectangle\n        us\n\n\nTesting", "System Req\n\n\n\n\nSystem Analysis\n\n\n\n\nSystem Des   \n\n    user will input information \nthe pattern module will have several function\n        setup() -\nign will make turtle draw quickly\n                    make turtle have a window of 1000 * 800\n        reset() - turtle will erase everything\n        drawRectenglePattern() - will call draw rectangle\n                                center position is x, y of circular pattern drawn\n                                Offset- distance from center to starting corner\n\n        drawRectangle() - draw a single rectangle\n        drawCirclePatten() -\n        drawSuperPattern() - randomly draw rectangle and circle patterns based on random values\n        drawRandomColor()- do not use any perameters and make turtle draw in 1/4 random colors\n        done()-called when user quits, keeps window open\n\n    drawRectanglePattern()\n        user will input center possition\n        will go to center postion\n        user will input offset\n        user will input the width of the rectangle\n        use\n\n\nTesting", "System Req\n\n\n\n\nSystem Analysis\n\n\n\n\nSystem Des   \n\n    user will input information \nthe pattern module will have several function\n        setup() -\nign will make turtle draw quickly\n                    make turtle have a window of 1000 * 800\n        reset() - turtle will erase everything\n        drawRectenglePattern() - will call draw rectangle\n                                center position is x, y of circular pattern drawn\n                                Offset- distance from center to starting corner\n\n        drawRectangle() - draw a single rectangle\n        drawCirclePatten() -\n        drawSuperPattern() - randomly draw rectangle and circle patterns based on random values\n        drawRandomColor()- do not use any perameters and make turtle draw in 1/4 random colors\n        done()-called when user quits, keeps window open\n\n    drawRectanglePattern()\n        user will input center possition\n        will go to center postion\n        user will input offset\n        user will input the width of the rectangle\n        user\n\n\nTesting", "System Req\n\n\n\n\nSystem Analysis\n\n\n\n\nSystem Des   \n\n    user will input information \nthe pattern module will have several function\n        setup() -\nign will make turtle draw quickly\n                    make turtle have a window of 1000 * 800\n        reset() - turtle will erase everything\n        drawRectenglePattern() - will call draw rectangle\n                                center position is x, y of circular pattern drawn\n                                Offset- distance from center to starting corner\n\n        drawRectangle() - draw a single rectangle\n        drawCirclePatten() -\n        drawSuperPattern() - randomly draw rectangle and circle patterns based on random values\n        drawRandomColor()- do not use any perameters and make turtle draw in 1/4 random colors\n        done()-called when user quits, keeps window open\n\n    drawRectanglePattern()\n        user will input center possition\n        will go to center postion\n        user will input offset\n        user will input the width of the rectangle\n        user w\n\n\nTesting", "System Req\n\n\n\n\nSystem Analysis\n\n\n\n\nSystem Des   \n\n    user will input information \nthe pattern module will have several function\n        setup() -\nign will make turtle draw quickly\n                    make turtle have a window of 1000 * 800\n        reset() - turtle will erase everything\n        drawRectenglePattern() - will call draw rectangle\n                                center position is x, y of circular pattern drawn\n                                Offset- distance from center to starting corner\n\n        drawRectangle() - draw a single rectangle\n        drawCirclePatten() -\n        drawSuperPattern() - randomly draw rectangle and circle patterns based on random values\n        drawRandomColor()- do not use any perameters and make turtle draw in 1/4 random colors\n        done()-called when user quits, keeps window open\n\n    drawRectanglePattern()\n        user will input center possition\n        will go to center postion\n        user will input offset\n        user will input the width of the rectangle\n        user wi\n\n\nTesting", "System Req\n\n\n\n\nSystem Analysis\n\n\n\n\nSystem Des   \n\n    user will input information \nthe pattern module will have several function\n        setup() -\nign will make turtle draw quickly\n                    make turtle have a window of 1000 * 800\n        reset() - turtle will erase everything\n        drawRectenglePattern() - will call draw rectangle\n                                center position is x, y of circular pattern drawn\n                                Offset- distance from center to starting corner\n\n        drawRectangle() - draw a single rectangle\n        drawCirclePatten() -\n        drawSuperPattern() - randomly draw rectangle and circle patterns based on random values\n        drawRandomColor()- do not use any perameters and make turtle draw in 1/4 random colors\n        done()-called when user quits, keeps window open\n\n    drawRectanglePattern()\n        user will input center possition\n        will go to center postion\n        user will input offset\n        user will input the width of the rectangle\n        user wil\n\n\nTesting", "System Req\n\n\n\n\nSystem Analysis\n\n\n\n\nSystem Des   \n\n    user will input information \nthe pattern module will have several function\n        setup() -\nign will make turtle draw quickly\n                    make turtle have a window of 1000 * 800\n        reset() - turtle will erase everything\n        drawRectenglePattern() - will call draw rectangle\n                                center position is x, y of circular pattern drawn\n                                Offset- distance from center to starting corner\n\n        drawRectangle() - draw a single rectangle\n        drawCirclePatten() -\n        drawSuperPattern() - randomly draw rectangle and circle patterns based on random values\n        drawRandomColor()- do not use any perameters and make turtle draw in 1/4 random colors\n        done()-called when user quits, keeps window open\n\n    drawRectanglePattern()\n        user will input center possition\n        will go to center postion\n        user will input offset\n        user will input the width of the rectangle\n        user will\n\n\nTesting", "System Req\n\n\n\n\nSystem Analysis\n\n\n\n\nSystem Des   \n\n    user will input information \nthe pattern module will have several function\n        setup() -\nign will make turtle draw quickly\n                    make turtle have a window of 1000 * 800\n        reset() - turtle will erase everything\n        drawRectenglePattern() - will call draw rectangle\n                                center position is x, y of circular pattern drawn\n                                Offset- distance from center to starting corner\n\n        drawRectangle() - draw a single rectangle\n        drawCirclePatten() -\n        drawSuperPattern() - randomly draw rectangle and circle patterns based on random values\n        drawRandomColor()- do not use any perameters and make turtle draw in 1/4 random colors\n        done()-called when user quits, keeps window open\n\n    drawRectanglePattern()\n        user will input center possition\n        will go to center postion\n        user will input offset\n        user will input the width of the rectangle\n        user will i\n\n\nTesting", "System Req\n\n\n\n\nSystem Analysis\n\n\n\n\nSystem Des   \n\n    user will input information \nthe pattern module will have several function\n        setup() -\nign will make turtle draw quickly\n                    make turtle have a window of 1000 * 800\n        reset() - turtle will erase everything\n        drawRectenglePattern() - will call draw rectangle\n                                center position is x, y of circular pattern drawn\n                                Offset- distance from center to starting corner\n\n        drawRectangle() - draw a single rectangle\n        drawCirclePatten() -\n        drawSuperPattern() - randomly draw rectangle and circle patterns based on random values\n        drawRandomColor()- do not use any perameters and make turtle draw in 1/4 random colors\n        done()-called when user quits, keeps window open\n\n    drawRectanglePattern()\n        user will input center possition\n        will go to center postion\n        user will input offset\n        user will input the width of the rectangle\n        user will in\n\n\nTesting", "System Req\n\n\n\n\nSystem Analysis\n\n\n\n\nSystem Des   \n\n    user will input information \nthe pattern module will have several function\n        setup() -\nign will make turtle draw quickly\n                    make turtle have a window of 1000 * 800\n        reset() - turtle will erase everything\n        drawRectenglePattern() - will call draw rectangle\n                                center position is x, y of circular pattern drawn\n                                Offset- distance from center to starting corner\n\n        drawRectangle() - draw a single rectangle\n        drawCirclePatten() -\n        drawSuperPattern() - randomly draw rectangle and circle patterns based on random values\n        drawRandomColor()- do not use any perameters and make turtle draw in 1/4 random colors\n        done()-called when user quits, keeps window open\n\n    drawRectanglePattern()\n        user will input center possition\n        will go to center postion\n        user will input offset\n        user will input the width of the rectangle\n        user will inp\n\n\nTesting", "System Req\n\n\n\n\nSystem Analysis\n\n\n\n\nSystem Des   \n\n    user will input information \nthe pattern module will have several function\n        setup() -\nign will make turtle draw quickly\n                    make turtle have a window of 1000 * 800\n        reset() - turtle will erase everything\n        drawRectenglePattern() - will call draw rectangle\n                                center position is x, y of circular pattern drawn\n                                Offset- distance from center to starting corner\n\n        drawRectangle() - draw a single rectangle\n        drawCirclePatten() -\n        drawSuperPattern() - randomly draw rectangle and circle patterns based on random values\n        drawRandomColor()- do not use any perameters and make turtle draw in 1/4 random colors\n        done()-called when user quits, keeps window open\n\n    drawRectanglePattern()\n        user will input center possition\n        will go to center postion\n        user will input offset\n        user will input the width of the rectangle\n        user will inpu\n\n\nTesting", "System Req\n\n\n\n\nSystem Analysis\n\n\n\n\nSystem Des   \n\n    user will input information \nthe pattern module will have several function\n        setup() -\nign will make turtle draw quickly\n                    make turtle have a window of 1000 * 800\n        reset() - turtle will erase everything\n        drawRectenglePattern() - will call draw rectangle\n                                center position is x, y of circular pattern drawn\n                                Offset- distance from center to starting corner\n\n        drawRectangle() - draw a single rectangle\n        drawCirclePatten() -\n        drawSuperPattern() - randomly draw rectangle and circle patterns based on random values\n        drawRandomColor()- do not use any perameters and make turtle draw in 1/4 random colors\n        done()-called when user quits, keeps window open\n\n    drawRectanglePattern()\n        user will input center possition\n        will go to center postion\n        user will input offset\n        user will input the width of the rectangle\n        user will input\n\n\nTesting", "System Req\n\n\n\n\nSystem Analysis\n\n\n\n\nSystem Des   \n\n    user will input information \nthe pattern module will have several function\n        setup() -\nign will make turtle draw quickly\n                    make turtle have a window of 1000 * 800\n        reset() - turtle will erase everything\n        drawRectenglePattern() - will call draw rectangle\n                                center position is x, y of circular pattern drawn\n                                Offset- distance from center to starting corner\n\n        drawRectangle() - draw a single rectangle\n        drawCirclePatten() -\n        drawSuperPattern() - randomly draw rectangle and circle patterns based on random values\n        drawRandomColor()- do not use any perameters and make turtle draw in 1/4 random colors\n        done()-called when user quits, keeps window open\n\n    drawRectanglePattern()\n        user will input center possition\n        will go to center postion\n        user will input offset\n        user will input the width of the rectangle\n        user will input t\n\n\nTesting", "System Req\n\n\n\n\nSystem Analysis\n\n\n\n\nSystem Des   \n\n    user will input information \nthe pattern module will have several function\n        setup() -\nign will make turtle draw quickly\n                    make turtle have a window of 1000 * 800\n        reset() - turtle will erase everything\n        drawRectenglePattern() - will call draw rectangle\n                                center position is x, y of circular pattern drawn\n                                Offset- distance from center to starting corner\n\n        drawRectangle() - draw a single rectangle\n        drawCirclePatten() -\n        drawSuperPattern() - randomly draw rectangle and circle patterns based on random values\n        drawRandomColor()- do not use any perameters and make turtle draw in 1/4 random colors\n        done()-called when user quits, keeps window open\n\n    drawRectanglePattern()\n        user will input center possition\n        will go to center postion\n        user will input offset\n        user will input the width of the rectangle\n        user will input th\n\n\nTesting", "System Req\n\n\n\n\nSystem Analysis\n\n\n\n\nSystem Des   \n\n    user will input information \nthe pattern module will have several function\n        setup() -\nign will make turtle draw quickly\n                    make turtle have a window of 1000 * 800\n        reset() - turtle will erase everything\n        drawRectenglePattern() - will call draw rectangle\n                                center position is x, y of circular pattern drawn\n                                Offset- distance from center to starting corner\n\n        drawRectangle() - draw a single rectangle\n        drawCirclePatten() -\n        drawSuperPattern() - randomly draw rectangle and circle patterns based on random values\n        drawRandomColor()- do not use any perameters and make turtle draw in 1/4 random colors\n        done()-called when user quits, keeps window open\n\n    drawRectanglePattern()\n        user will input center possition\n        will go to center postion\n        user will input offset\n        user will input the width of the rectangle\n        user will input the\n\n\nTesting", "System Req\n\n\n\n\nSystem Analysis\n\n\n\n\nSystem Des   \n\n    user will input information \nthe pattern module will have several function\n        setup() -\nign will make turtle draw quickly\n                    make turtle have a window of 1000 * 800\n        reset() - turtle will erase everything\n        drawRectenglePattern() - will call draw rectangle\n                                center position is x, y of circular pattern drawn\n                                Offset- distance from center to starting corner\n\n        drawRectangle() - draw a single rectangle\n        drawCirclePatten() -\n        drawSuperPattern() - randomly draw rectangle and circle patterns based on random values\n        drawRandomColor()- do not use any perameters and make turtle draw in 1/4 random colors\n        done()-called when user quits, keeps window open\n\n    drawRectanglePattern()\n        user will input center possition\n        will go to center postion\n        user will input offset\n        user will input the width of the rectangle\n        user will input the l\n\n\nTesting", "System Req\n\n\n\n\nSystem Analysis\n\n\n\n\nSystem Des   \n\n    user will input information \nthe pattern module will have several function\n        setup() -\nign will make turtle draw quickly\n                    make turtle have a window of 1000 * 800\n        reset() - turtle will erase everything\n        drawRectenglePattern() - will call draw rectangle\n                                center position is x, y of circular pattern drawn\n                                Offset- distance from center to starting corner\n\n        drawRectangle() - draw a single rectangle\n        drawCirclePatten() -\n        drawSuperPattern() - randomly draw rectangle and circle patterns based on random values\n        drawRandomColor()- do not use any perameters and make turtle draw in 1/4 random colors\n        done()-called when user quits, keeps window open\n\n    drawRectanglePattern()\n        user will input center possition\n        will go to center postion\n        user will input offset\n        user will input the width of the rectangle\n        user will input the le\n\n\nTesting", "System Req\n\n\n\n\nSystem Analysis\n\n\n\n\nSystem Des   \n\n    user will input information \nthe pattern module will have several function\n        setup() -\nign will make turtle draw quickly\n                    make turtle have a window of 1000 * 800\n        reset() - turtle will erase everything\n        drawRectenglePattern() - will call draw rectangle\n                                center position is x, y of circular pattern drawn\n                                Offset- distance from center to starting corner\n\n        drawRectangle() - draw a single rectangle\n        drawCirclePatten() -\n        drawSuperPattern() - randomly draw rectangle and circle patterns based on random values\n        drawRandomColor()- do not use any perameters and make turtle draw in 1/4 random colors\n        done()-called when user quits, keeps window open\n\n    drawRectanglePattern()\n        user will input center possition\n        will go to center postion\n        user will input offset\n        user will input the width of the rectangle\n        user will input the len\n\n\nTesting", "System Req\n\n\n\n\nSystem Analysis\n\n\n\n\nSystem Des   \n\n    user will input information \nthe pattern module will have several function\n        setup() -\nign will make turtle draw quickly\n                    make turtle have a window of 1000 * 800\n        reset() - turtle will erase everything\n        drawRectenglePattern() - will call draw rectangle\n                                center position is x, y of circular pattern drawn\n                                Offset- distance from center to starting corner\n\n        drawRectangle() - draw a single rectangle\n        drawCirclePatten() -\n        drawSuperPattern() - randomly draw rectangle and circle patterns based on random values\n        drawRandomColor()- do not use any perameters and make turtle draw in 1/4 random colors\n        done()-called when user quits, keeps window open\n\n    drawRectanglePattern()\n        user will input center possition\n        will go to center postion\n        user will input offset\n        user will input the width of the rectangle\n        user will input the leng\n\n\nTesting", "System Req\n\n\n\n\nSystem Analysis\n\n\n\n\nSystem Des   \n\n    user will input information \nthe pattern module will have several function\n        setup() -\nign will make turtle draw quickly\n                    make turtle have a window of 1000 * 800\n        reset() - turtle will erase everything\n        drawRectenglePattern() - will call draw rectangle\n                                center position is x, y of circular pattern drawn\n                                Offset- distance from center to starting corner\n\n        drawRectangle() - draw a single rectangle\n        drawCirclePatten() -\n        drawSuperPattern() - randomly draw rectangle and circle patterns based on random values\n        drawRandomColor()- do not use any perameters and make turtle draw in 1/4 random colors\n        done()-called when user quits, keeps window open\n\n    drawRectanglePattern()\n        user will input center possition\n        will go to center postion\n        user will input offset\n        user will input the width of the rectangle\n        user will input the lengt\n\n\nTesting", "System Req\n\n\n\n\nSystem Analysis\n\n\n\n\nSystem Des   \n\n    user will input information \nthe pattern module will have several function\n        setup() -\nign will make turtle draw quickly\n                    make turtle have a window of 1000 * 800\n        reset() - turtle will erase everything\n        drawRectenglePattern() - will call draw rectangle\n                                center position is x, y of circular pattern drawn\n                                Offset- distance from center to starting corner\n\n        drawRectangle() - draw a single rectangle\n        drawCirclePatten() -\n        drawSuperPattern() - randomly draw rectangle and circle patterns based on random values\n        drawRandomColor()- do not use any perameters and make turtle draw in 1/4 random colors\n        done()-called when user quits, keeps window open\n\n    drawRectanglePattern()\n        user will input center possition\n        will go to center postion\n        user will input offset\n        user will input the width of the rectangle\n        user will input the length\n\n\nTesting", "System Req\n\n\n\n\nSystem Analysis\n\n\n\n\nSystem Des   \n\n    user will input information \nthe pattern module will have several function\n        setup() -\nign will make turtle draw quickly\n                    make turtle have a window of 1000 * 800\n        reset() - turtle will erase everything\n        drawRectenglePattern() - will call draw rectangle\n                                center position is x, y of circular pattern drawn\n                                Offset- distance from center to starting corner\n\n        drawRectangle() - draw a single rectangle\n        drawCirclePatten() -\n        drawSuperPattern() - randomly draw rectangle and circle patterns based on random values\n        drawRandomColor()- do not use any perameters and make turtle draw in 1/4 random colors\n        done()-called when user quits, keeps window open\n\n    drawRectanglePattern()\n        user will input center possition\n        will go to center postion\n        user will input offset\n        user will input the width of the rectangle\n        user will input the length\n        u\n\n\nTesting", "System Req\n\n\n\n\nSystem Analysis\n\n\n\n\nSystem Des   \n\n    user will input information \nthe pattern module will have several function\n        setup() -\nign will make turtle draw quickly\n                    make turtle have a window of 1000 * 800\n        reset() - turtle will erase everything\n        drawRectenglePattern() - will call draw rectangle\n                                center position is x, y of circular pattern drawn\n                                Offset- distance from center to starting corner\n\n        drawRectangle() - draw a single rectangle\n        drawCirclePatten() -\n        drawSuperPattern() - randomly draw rectangle and circle patterns based on random values\n        drawRandomColor()- do not use any perameters and make turtle draw in 1/4 random colors\n        done()-called when user quits, keeps window open\n\n    drawRectanglePattern()\n        user will input center possition\n        will go to center postion\n        user will input offset\n        user will input the width of the rectangle\n        user will input the length\n        us\n\n\nTesting", "System Req\n\n\n\n\nSystem Analysis\n\n\n\n\nSystem Des   \n\n    user will input information \nthe pattern module will have several function\n        setup() -\nign will make turtle draw quickly\n                    make turtle have a window of 1000 * 800\n        reset() - turtle will erase everything\n        drawRectenglePattern() - will call draw rectangle\n                                center position is x, y of circular pattern drawn\n                                Offset- distance from center to starting corner\n\n        drawRectangle() - draw a single rectangle\n        drawCirclePatten() -\n        drawSuperPattern() - randomly draw rectangle and circle patterns based on random values\n        drawRandomColor()- do not use any perameters and make turtle draw in 1/4 random colors\n        done()-called when user quits, keeps window open\n\n    drawRectanglePattern()\n        user will input center possition\n        will go to center postion\n        user will input offset\n        user will input the width of the rectangle\n        user will input the length\n        ust\n\n\nTesting", "System Req\n\n\n\n\nSystem Analysis\n\n\n\n\nSystem Des   \n\n    user will input information \nthe pattern module will have several function\n        setup() -\nign will make turtle draw quickly\n                    make turtle have a window of 1000 * 800\n        reset() - turtle will erase everything\n        drawRectenglePattern() - will call draw rectangle\n                                center position is x, y of circular pattern drawn\n                                Offset- distance from center to starting corner\n\n        drawRectangle() - draw a single rectangle\n        drawCirclePatten() -\n        drawSuperPattern() - randomly draw rectangle and circle patterns based on random values\n        drawRandomColor()- do not use any perameters and make turtle draw in 1/4 random colors\n        done()-called when user quits, keeps window open\n\n    drawRectanglePattern()\n        user will input center possition\n        will go to center postion\n        user will input offset\n        user will input the width of the rectangle\n        user will input the length\n        uste\n\n\nTesting", "System Req\n\n\n\n\nSystem Analysis\n\n\n\n\nSystem Des   \n\n    user will input information \nthe pattern module will have several function\n        setup() -\nign will make turtle draw quickly\n                    make turtle have a window of 1000 * 800\n        reset() - turtle will erase everything\n        drawRectenglePattern() - will call draw rectangle\n                                center position is x, y of circular pattern drawn\n                                Offset- distance from center to starting corner\n\n        drawRectangle() - draw a single rectangle\n        drawCirclePatten() -\n        drawSuperPattern() - randomly draw rectangle and circle patterns based on random values\n        drawRandomColor()- do not use any perameters and make turtle draw in 1/4 random colors\n        done()-called when user quits, keeps window open\n\n    drawRectanglePattern()\n        user will input center possition\n        will go to center postion\n        user will input offset\n        user will input the width of the rectangle\n        user will input the length\n        uster\n\n\nTesting", "System Req\n\n\n\n\nSystem Analysis\n\n\n\n\nSystem Des   \n\n    user will input information \nthe pattern module will have several function\n        setup() -\nign will make turtle draw quickly\n                    make turtle have a window of 1000 * 800\n        reset() - turtle will erase everything\n        drawRectenglePattern() - will call draw rectangle\n                                center position is x, y of circular pattern drawn\n                                Offset- distance from center to starting corner\n\n        drawRectangle() - draw a single rectangle\n        drawCirclePatten() -\n        drawSuperPattern() - randomly draw rectangle and circle patterns based on random values\n        drawRandomColor()- do not use any perameters and make turtle draw in 1/4 random colors\n        done()-called when user quits, keeps window open\n\n    drawRectanglePattern()\n        user will input center possition\n        will go to center postion\n        user will input offset\n        user will input the width of the rectangle\n        user will input the length\n        uste\n\n\nTesting", "System Req\n\n\n\n\nSystem Analysis\n\n\n\n\nSystem Des   \n\n    user will input information \nthe pattern module will have several function\n        setup() -\nign will make turtle draw quickly\n                    make turtle have a window of 1000 * 800\n        reset() - turtle will erase everything\n        drawRectenglePattern() - will call draw rectangle\n                                center position is x, y of circular pattern drawn\n                                Offset- distance from center to starting corner\n\n        drawRectangle() - draw a single rectangle\n        drawCirclePatten() -\n        drawSuperPattern() - randomly draw rectangle and circle patterns based on random values\n        drawRandomColor()- do not use any perameters and make turtle draw in 1/4 random colors\n        done()-called when user quits, keeps window open\n\n    drawRectanglePattern()\n        user will input center possition\n        will go to center postion\n        user will input offset\n        user will input the width of the rectangle\n        user will input the length\n        ust\n\n\nTesting", "System Req\n\n\n\n\nSystem Analysis\n\n\n\n\nSystem Des   \n\n    user will input information \nthe pattern module will have several function\n        setup() -\nign will make turtle draw quickly\n                    make turtle have a window of 1000 * 800\n        reset() - turtle will erase everything\n        drawRectenglePattern() - will call draw rectangle\n                                center position is x, y of circular pattern drawn\n                                Offset- distance from center to starting corner\n\n        drawRectangle() - draw a single rectangle\n        drawCirclePatten() -\n        drawSuperPattern() - randomly draw rectangle and circle patterns based on random values\n        drawRandomColor()- do not use any perameters and make turtle draw in 1/4 random colors\n        done()-called when user quits, keeps window open\n\n    drawRectanglePattern()\n        user will input center possition\n        will go to center postion\n        user will input offset\n        user will input the width of the rectangle\n        user will input the length\n        us\n\n\nTesting", "System Req\n\n\n\n\nSystem Analysis\n\n\n\n\nSystem Des   \n\n    user will input information \nthe pattern module will have several function\n        setup() -\nign will make turtle draw quickly\n                    make turtle have a window of 1000 * 800\n        reset() - turtle will erase everything\n        drawRectenglePattern() - will call draw rectangle\n                                center position is x, y of circular pattern drawn\n                                Offset- distance from center to starting corner\n\n        drawRectangle() - draw a single rectangle\n        drawCirclePatten() -\n        drawSuperPattern() - randomly draw rectangle and circle patterns based on random values\n        drawRandomColor()- do not use any perameters and make turtle draw in 1/4 random colors\n        done()-called when user quits, keeps window open\n\n    drawRectanglePattern()\n        user will input center possition\n        will go to center postion\n        user will input offset\n        user will input the width of the rectangle\n        user will input the length\n        u\n\n\nTesting", "System Req\n\n\n\n\nSystem Analysis\n\n\n\n\nSystem Des   \n\n    user will input information \nthe pattern module will have several function\n        setup() -\nign will make turtle draw quickly\n                    make turtle have a window of 1000 * 800\n        reset() - turtle will erase everything\n        drawRectenglePattern() - will call draw rectangle\n                                center position is x, y of circular pattern drawn\n                                Offset- distance from center to starting corner\n\n        drawRectangle() - draw a single rectangle\n        drawCirclePatten() -\n        drawSuperPattern() - randomly draw rectangle and circle patterns based on random values\n        drawRandomColor()- do not use any perameters and make turtle draw in 1/4 random colors\n        done()-called when user quits, keeps window open\n\n    drawRectanglePattern()\n        user will input center possition\n        will go to center postion\n        user will input offset\n        user will input the width of the rectangle\n        user will input the length\n        us\n\n\nTesting", "System Req\n\n\n\n\nSystem Analysis\n\n\n\n\nSystem Des   \n\n    user will input information \nthe pattern module will have several function\n        setup() -\nign will make turtle draw quickly\n                    make turtle have a window of 1000 * 800\n        reset() - turtle will erase everything\n        drawRectenglePattern() - will call draw rectangle\n                                center position is x, y of circular pattern drawn\n                                Offset- distance from center to starting corner\n\n        drawRectangle() - draw a single rectangle\n        drawCirclePatten() -\n        drawSuperPattern() - randomly draw rectangle and circle patterns based on random values\n        drawRandomColor()- do not use any perameters and make turtle draw in 1/4 random colors\n        done()-called when user quits, keeps window open\n\n    drawRectanglePattern()\n        user will input center possition\n        will go to center postion\n        user will input offset\n        user will input the width of the rectangle\n        user will input the length\n        use\n\n\nTesting", "System Req\n\n\n\n\nSystem Analysis\n\n\n\n\nSystem Des   \n\n    user will input information \nthe pattern module will have several function\n        setup() -\nign will make turtle draw quickly\n                    make turtle have a window of 1000 * 800\n        reset() - turtle will erase everything\n        drawRectenglePattern() - will call draw rectangle\n                                center position is x, y of circular pattern drawn\n                                Offset- distance from center to starting corner\n\n        drawRectangle() - draw a single rectangle\n        drawCirclePatten() -\n        drawSuperPattern() - randomly draw rectangle and circle patterns based on random values\n        drawRandomColor()- do not use any perameters and make turtle draw in 1/4 random colors\n        done()-called when user quits, keeps window open\n\n    drawRectanglePattern()\n        user will input center possition\n        will go to center postion\n        user will input offset\n        user will input the width of the rectangle\n        user will input the length\n        user\n\n\nTesting", "System Req\n\n\n\n\nSystem Analysis\n\n\n\n\nSystem Des   \n\n    user will input information \nthe pattern module will have several function\n        setup() -\nign will make turtle draw quickly\n                    make turtle have a window of 1000 * 800\n        reset() - turtle will erase everything\n        drawRectenglePattern() - will call draw rectangle\n                                center position is x, y of circular pattern drawn\n                                Offset- distance from center to starting corner\n\n        drawRectangle() - draw a single rectangle\n        drawCirclePatten() -\n        drawSuperPattern() - randomly draw rectangle and circle patterns based on random values\n        drawRandomColor()- do not use any perameters and make turtle draw in 1/4 random colors\n        done()-called when user quits, keeps window open\n\n    drawRectanglePattern()\n        user will input center possition\n        will go to center postion\n        user will input offset\n        user will input the width of the rectangle\n        user will input the length\n        user w\n\n\nTesting", "System Req\n\n\n\n\nSystem Analysis\n\n\n\n\nSystem Des   \n\n    user will input information \nthe pattern module will have several function\n        setup() -\nign will make turtle draw quickly\n                    make turtle have a window of 1000 * 800\n        reset() - turtle will erase everything\n        drawRectenglePattern() - will call draw rectangle\n                                center position is x, y of circular pattern drawn\n                                Offset- distance from center to starting corner\n\n        drawRectangle() - draw a single rectangle\n        drawCirclePatten() -\n        drawSuperPattern() - randomly draw rectangle and circle patterns based on random values\n        drawRandomColor()- do not use any perameters and make turtle draw in 1/4 random colors\n        done()-called when user quits, keeps window open\n\n    drawRectanglePattern()\n        user will input center possition\n        will go to center postion\n        user will input offset\n        user will input the width of the rectangle\n        user will input the length\n        user wi\n\n\nTesting", "System Req\n\n\n\n\nSystem Analysis\n\n\n\n\nSystem Des   \n\n    user will input information \nthe pattern module will have several function\n        setup() -\nign will make turtle draw quickly\n                    make turtle have a window of 1000 * 800\n        reset() - turtle will erase everything\n        drawRectenglePattern() - will call draw rectangle\n                                center position is x, y of circular pattern drawn\n                                Offset- distance from center to starting corner\n\n        drawRectangle() - draw a single rectangle\n        drawCirclePatten() -\n        drawSuperPattern() - randomly draw rectangle and circle patterns based on random values\n        drawRandomColor()- do not use any perameters and make turtle draw in 1/4 random colors\n        done()-called when user quits, keeps window open\n\n    drawRectanglePattern()\n        user will input center possition\n        will go to center postion\n        user will input offset\n        user will input the width of the rectangle\n        user will input the length\n        user wil\n\n\nTesting", "System Req\n\n\n\n\nSystem Analysis\n\n\n\n\nSystem Des   \n\n    user will input information \nthe pattern module will have several function\n        setup() -\nign will make turtle draw quickly\n                    make turtle have a window of 1000 * 800\n        reset() - turtle will erase everything\n        drawRectenglePattern() - will call draw rectangle\n                                center position is x, y of circular pattern drawn\n                                Offset- distance from center to starting corner\n\n        drawRectangle() - draw a single rectangle\n        drawCirclePatten() -\n        drawSuperPattern() - randomly draw rectangle and circle patterns based on random values\n        drawRandomColor()- do not use any perameters and make turtle draw in 1/4 random colors\n        done()-called when user quits, keeps window open\n\n    drawRectanglePattern()\n        user will input center possition\n        will go to center postion\n        user will input offset\n        user will input the width of the rectangle\n        user will input the length\n        user will\n\n\nTesting", "System Req\n\n\n\n\nSystem Analysis\n\n\n\n\nSystem Des   \n\n    user will input information \nthe pattern module will have several function\n        setup() -\nign will make turtle draw quickly\n                    make turtle have a window of 1000 * 800\n        reset() - turtle will erase everything\n        drawRectenglePattern() - will call draw rectangle\n                                center position is x, y of circular pattern drawn\n                                Offset- distance from center to starting corner\n\n        drawRectangle() - draw a single rectangle\n        drawCirclePatten() -\n        drawSuperPattern() - randomly draw rectangle and circle patterns based on random values\n        drawRandomColor()- do not use any perameters and make turtle draw in 1/4 random colors\n        done()-called when user quits, keeps window open\n\n    drawRectanglePattern()\n        user will input center possition\n        will go to center postion\n        user will input offset\n        user will input the width of the rectangle\n        user will input the length\n        user will i\n\n\nTesting", "System Req\n\n\n\n\nSystem Analysis\n\n\n\n\nSystem Des   \n\n    user will input information \nthe pattern module will have several function\n        setup() -\nign will make turtle draw quickly\n                    make turtle have a window of 1000 * 800\n        reset() - turtle will erase everything\n        drawRectenglePattern() - will call draw rectangle\n                                center position is x, y of circular pattern drawn\n                                Offset- distance from center to starting corner\n\n        drawRectangle() - draw a single rectangle\n        drawCirclePatten() -\n        drawSuperPattern() - randomly draw rectangle and circle patterns based on random values\n        drawRandomColor()- do not use any perameters and make turtle draw in 1/4 random colors\n        done()-called when user quits, keeps window open\n\n    drawRectanglePattern()\n        user will input center possition\n        will go to center postion\n        user will input offset\n        user will input the width of the rectangle\n        user will input the length\n        user will in\n\n\nTesting", "System Req\n\n\n\n\nSystem Analysis\n\n\n\n\nSystem Des   \n\n    user will input information \nthe pattern module will have several function\n        setup() -\nign will make turtle draw quickly\n                    make turtle have a window of 1000 * 800\n        reset() - turtle will erase everything\n        drawRectenglePattern() - will call draw rectangle\n                                center position is x, y of circular pattern drawn\n                                Offset- distance from center to starting corner\n\n        drawRectangle() - draw a single rectangle\n        drawCirclePatten() -\n        drawSuperPattern() - randomly draw rectangle and circle patterns based on random values\n        drawRandomColor()- do not use any perameters and make turtle draw in 1/4 random colors\n        done()-called when user quits, keeps window open\n\n    drawRectanglePattern()\n        user will input center possition\n        will go to center postion\n        user will input offset\n        user will input the width of the rectangle\n        user will input the length\n        user will inp\n\n\nTesting", "System Req\n\n\n\n\nSystem Analysis\n\n\n\n\nSystem Des   \n\n    user will input information \nthe pattern module will have several function\n        setup() -\nign will make turtle draw quickly\n                    make turtle have a window of 1000 * 800\n        reset() - turtle will erase everything\n        drawRectenglePattern() - will call draw rectangle\n                                center position is x, y of circular pattern drawn\n                                Offset- distance from center to starting corner\n\n        drawRectangle() - draw a single rectangle\n        drawCirclePatten() -\n        drawSuperPattern() - randomly draw rectangle and circle patterns based on random values\n        drawRandomColor()- do not use any perameters and make turtle draw in 1/4 random colors\n        done()-called when user quits, keeps window open\n\n    drawRectanglePattern()\n        user will input center possition\n        will go to center postion\n        user will input offset\n        user will input the width of the rectangle\n        user will input the length\n        user will inpu\n\n\nTesting", "System Req\n\n\n\n\nSystem Analysis\n\n\n\n\nSystem Des   \n\n    user will input information \nthe pattern module will have several function\n        setup() -\nign will make turtle draw quickly\n                    make turtle have a window of 1000 * 800\n        reset() - turtle will erase everything\n        drawRectenglePattern() - will call draw rectangle\n                                center position is x, y of circular pattern drawn\n                                Offset- distance from center to starting corner\n\n        drawRectangle() - draw a single rectangle\n        drawCirclePatten() -\n        drawSuperPattern() - randomly draw rectangle and circle patterns based on random values\n        drawRandomColor()- do not use any perameters and make turtle draw in 1/4 random colors\n        done()-called when user quits, keeps window open\n\n    drawRectanglePattern()\n        user will input center possition\n        will go to center postion\n        user will input offset\n        user will input the width of the rectangle\n        user will input the length\n        user will input\n\n\nTesting", "System Req\n\n\n\n\nSystem Analysis\n\n\n\n\nSystem Des   \n\n    user will input information \nthe pattern module will have several function\n        setup() -\nign will make turtle draw quickly\n                    make turtle have a window of 1000 * 800\n        reset() - turtle will erase everything\n        drawRectenglePattern() - will call draw rectangle\n                                center position is x, y of circular pattern drawn\n                                Offset- distance from center to starting corner\n\n        drawRectangle() - draw a single rectangle\n        drawCirclePatten() -\n        drawSuperPattern() - randomly draw rectangle and circle patterns based on random values\n        drawRandomColor()- do not use any perameters and make turtle draw in 1/4 random colors\n        done()-called when user quits, keeps window open\n\n    drawRectanglePattern()\n        user will input center possition\n        will go to center postion\n        user will input offset\n        user will input the width of the rectangle\n        user will input the length\n        user will input t\n\n\nTesting", "System Req\n\n\n\n\nSystem Analysis\n\n\n\n\nSystem Des   \n\n    user will input information \nthe pattern module will have several function\n        setup() -\nign will make turtle draw quickly\n                    make turtle have a window of 1000 * 800\n        reset() - turtle will erase everything\n        drawRectenglePattern() - will call draw rectangle\n                                center position is x, y of circular pattern drawn\n                                Offset- distance from center to starting corner\n\n        drawRectangle() - draw a single rectangle\n        drawCirclePatten() -\n        drawSuperPattern() - randomly draw rectangle and circle patterns based on random values\n        drawRandomColor()- do not use any perameters and make turtle draw in 1/4 random colors\n        done()-called when user quits, keeps window open\n\n    drawRectanglePattern()\n        user will input center possition\n        will go to center postion\n        user will input offset\n        user will input the width of the rectangle\n        user will input the length\n        user will input th\n\n\nTesting", "System Req\n\n\n\n\nSystem Analysis\n\n\n\n\nSystem Des   \n\n    user will input information \nthe pattern module will have several function\n        setup() -\nign will make turtle draw quickly\n                    make turtle have a window of 1000 * 800\n        reset() - turtle will erase everything\n        drawRectenglePattern() - will call draw rectangle\n                                center position is x, y of circular pattern drawn\n                                Offset- distance from center to starting corner\n\n        drawRectangle() - draw a single rectangle\n        drawCirclePatten() -\n        drawSuperPattern() - randomly draw rectangle and circle patterns based on random values\n        drawRandomColor()- do not use any perameters and make turtle draw in 1/4 random colors\n        done()-called when user quits, keeps window open\n\n    drawRectanglePattern()\n        user will input center possition\n        will go to center postion\n        user will input offset\n        user will input the width of the rectangle\n        user will input the length\n        user will input the\n\n\nTesting", "System Req\n\n\n\n\nSystem Analysis\n\n\n\n\nSystem Des   \n\n    user will input information \nthe pattern module will have several function\n        setup() -\nign will make turtle draw quickly\n                    make turtle have a window of 1000 * 800\n        reset() - turtle will erase everything\n        drawRectenglePattern() - will call draw rectangle\n                                center position is x, y of circular pattern drawn\n                                Offset- distance from center to starting corner\n\n        drawRectangle() - draw a single rectangle\n        drawCirclePatten() -\n        drawSuperPattern() - randomly draw rectangle and circle patterns based on random values\n        drawRandomColor()- do not use any perameters and make turtle draw in 1/4 random colors\n        done()-called when user quits, keeps window open\n\n    drawRectanglePattern()\n        user will input center possition\n        will go to center postion\n        user will input offset\n        user will input the width of the rectangle\n        user will input the length\n        user will input the a\n\n\nTesting", "System Req\n\n\n\n\nSystem Analysis\n\n\n\n\nSystem Des   \n\n    user will input information \nthe pattern module will have several function\n        setup() -\nign will make turtle draw quickly\n                    make turtle have a window of 1000 * 800\n        reset() - turtle will erase everything\n        drawRectenglePattern() - will call draw rectangle\n                                center position is x, y of circular pattern drawn\n                                Offset- distance from center to starting corner\n\n        drawRectangle() - draw a single rectangle\n        drawCirclePatten() -\n        drawSuperPattern() - randomly draw rectangle and circle patterns based on random values\n        drawRandomColor()- do not use any perameters and make turtle draw in 1/4 random colors\n        done()-called when user quits, keeps window open\n\n    drawRectanglePattern()\n        user will input center possition\n        will go to center postion\n        user will input offset\n        user will input the width of the rectangle\n        user will input the length\n        user will input the \n\n\nTesting", "System Req\n\n\n\n\nSystem Analysis\n\n\n\n\nSystem Des   \n\n    user will input information \nthe pattern module will have several function\n        setup() -\nign will make turtle draw quickly\n                    make turtle have a window of 1000 * 800\n        reset() - turtle will erase everything\n        drawRectenglePattern() - will call draw rectangle\n                                center position is x, y of circular pattern drawn\n                                Offset- distance from center to starting corner\n\n        drawRectangle() - draw a single rectangle\n        drawCirclePatten() -\n        drawSuperPattern() - randomly draw rectangle and circle patterns based on random values\n        drawRandomColor()- do not use any perameters and make turtle draw in 1/4 random colors\n        done()-called when user quits, keeps window open\n\n    drawRectanglePattern()\n        user will input center possition\n        will go to center postion\n        user will input offset\n        user will input the width of the rectangle\n        user will input the length\n        user will input the n\n\n\nTesting", "System Req\n\n\n\n\nSystem Analysis\n\n\n\n\nSystem Des   \n\n    user will input information \nthe pattern module will have several function\n        setup() -\nign will make turtle draw quickly\n                    make turtle have a window of 1000 * 800\n        reset() - turtle will erase everything\n        drawRectenglePattern() - will call draw rectangle\n                                center position is x, y of circular pattern drawn\n                                Offset- distance from center to starting corner\n\n        drawRectangle() - draw a single rectangle\n        drawCirclePatten() -\n        drawSuperPattern() - randomly draw rectangle and circle patterns based on random values\n        drawRandomColor()- do not use any perameters and make turtle draw in 1/4 random colors\n        done()-called when user quits, keeps window open\n\n    drawRectanglePattern()\n        user will input center possition\n        will go to center postion\n        user will input offset\n        user will input the width of the rectangle\n        user will input the length\n        user will input the nu\n\n\nTesting", "System Req\n\n\n\n\nSystem Analysis\n\n\n\n\nSystem Des   \n\n    user will input information \nthe pattern module will have several function\n        setup() -\nign will make turtle draw quickly\n                    make turtle have a window of 1000 * 800\n        reset() - turtle will erase everything\n        drawRectenglePattern() - will call draw rectangle\n                                center position is x, y of circular pattern drawn\n                                Offset- distance from center to starting corner\n\n        drawRectangle() - draw a single rectangle\n        drawCirclePatten() -\n        drawSuperPattern() - randomly draw rectangle and circle patterns based on random values\n        drawRandomColor()- do not use any perameters and make turtle draw in 1/4 random colors\n        done()-called when user quits, keeps window open\n\n    drawRectanglePattern()\n        user will input center possition\n        will go to center postion\n        user will input offset\n        user will input the width of the rectangle\n        user will input the length\n        user will input the num\n\n\nTesting", "System Req\n\n\n\n\nSystem Analysis\n\n\n\n\nSystem Des   \n\n    user will input information \nthe pattern module will have several function\n        setup() -\nign will make turtle draw quickly\n                    make turtle have a window of 1000 * 800\n        reset() - turtle will erase everything\n        drawRectenglePattern() - will call draw rectangle\n                                center position is x, y of circular pattern drawn\n                                Offset- distance from center to starting corner\n\n        drawRectangle() - draw a single rectangle\n        drawCirclePatten() -\n        drawSuperPattern() - randomly draw rectangle and circle patterns based on random values\n        drawRandomColor()- do not use any perameters and make turtle draw in 1/4 random colors\n        done()-called when user quits, keeps window open\n\n    drawRectanglePattern()\n        user will input center possition\n        will go to center postion\n        user will input offset\n        user will input the width of the rectangle\n        user will input the length\n        user will input the numb\n\n\nTesting", "System Req\n\n\n\n\nSystem Analysis\n\n\n\n\nSystem Des   \n\n    user will input information \nthe pattern module will have several function\n        setup() -\nign will make turtle draw quickly\n                    make turtle have a window of 1000 * 800\n        reset() - turtle will erase everything\n        drawRectenglePattern() - will call draw rectangle\n                                center position is x, y of circular pattern drawn\n                                Offset- distance from center to starting corner\n\n        drawRectangle() - draw a single rectangle\n        drawCirclePatten() -\n        drawSuperPattern() - randomly draw rectangle and circle patterns based on random values\n        drawRandomColor()- do not use any perameters and make turtle draw in 1/4 random colors\n        done()-called when user quits, keeps window open\n\n    drawRectanglePattern()\n        user will input center possition\n        will go to center postion\n        user will input offset\n        user will input the width of the rectangle\n        user will input the length\n        user will input the numbe\n\n\nTesting", "System Req\n\n\n\n\nSystem Analysis\n\n\n\n\nSystem Des   \n\n    user will input information \nthe pattern module will have several function\n        setup() -\nign will make turtle draw quickly\n                    make turtle have a window of 1000 * 800\n        reset() - turtle will erase everything\n        drawRectenglePattern() - will call draw rectangle\n                                center position is x, y of circular pattern drawn\n                                Offset- distance from center to starting corner\n\n        drawRectangle() - draw a single rectangle\n        drawCirclePatten() -\n        drawSuperPattern() - randomly draw rectangle and circle patterns based on random values\n        drawRandomColor()- do not use any perameters and make turtle draw in 1/4 random colors\n        done()-called when user quits, keeps window open\n\n    drawRectanglePattern()\n        user will input center possition\n        will go to center postion\n        user will input offset\n        user will input the width of the rectangle\n        user will input the length\n        user will input the number\n\n\nTesting", "System Req\n\n\n\n\nSystem Analysis\n\n\n\n\nSystem Des   \n\n    user will input information \nthe pattern module will have several function\n        setup() -\nign will make turtle draw quickly\n                    make turtle have a window of 1000 * 800\n        reset() - turtle will erase everything\n        drawRectenglePattern() - will call draw rectangle\n                                center position is x, y of circular pattern drawn\n                                Offset- distance from center to starting corner\n\n        drawRectangle() - draw a single rectangle\n        drawCirclePatten() -\n        drawSuperPattern() - randomly draw rectangle and circle patterns based on random values\n        drawRandomColor()- do not use any perameters and make turtle draw in 1/4 random colors\n        done()-called when user quits, keeps window open\n\n    drawRectanglePattern()\n        user will input center possition\n        will go to center postion\n        user will input offset\n        user will input the width of the rectangle\n        user will input the length\n        user will input the number o\n\n\nTesting", "System Req\n\n\n\n\nSystem Analysis\n\n\n\n\nSystem Des   \n\n    user will input information \nthe pattern module will have several function\n        setup() -\nign will make turtle draw quickly\n                    make turtle have a window of 1000 * 800\n        reset() - turtle will erase everything\n        drawRectenglePattern() - will call draw rectangle\n                                center position is x, y of circular pattern drawn\n                                Offset- distance from center to starting corner\n\n        drawRectangle() - draw a single rectangle\n        drawCirclePatten() -\n        drawSuperPattern() - randomly draw rectangle and circle patterns based on random values\n        drawRandomColor()- do not use any perameters and make turtle draw in 1/4 random colors\n        done()-called when user quits, keeps window open\n\n    drawRectanglePattern()\n        user will input center possition\n        will go to center postion\n        user will input offset\n        user will input the width of the rectangle\n        user will input the length\n        user will input the number of\n\n\nTesting", "System Req\n\n\n\n\nSystem Analysis\n\n\n\n\nSystem Des   \n\n    user will input information \nthe pattern module will have several function\n        setup() -\nign will make turtle draw quickly\n                    make turtle have a window of 1000 * 800\n        reset() - turtle will erase everything\n        drawRectenglePattern() - will call draw rectangle\n                                center position is x, y of circular pattern drawn\n                                Offset- distance from center to starting corner\n\n        drawRectangle() - draw a single rectangle\n        drawCirclePatten() -\n        drawSuperPattern() - randomly draw rectangle and circle patterns based on random values\n        drawRandomColor()- do not use any perameters and make turtle draw in 1/4 random colors\n        done()-called when user quits, keeps window open\n\n    drawRectanglePattern()\n        user will input center possition\n        will go to center postion\n        user will input offset\n        user will input the width of the rectangle\n        user will input the length\n        user will input the number of r\n\n\nTesting", "System Req\n\n\n\n\nSystem Analysis\n\n\n\n\nSystem Des   \n\n    user will input information \nthe pattern module will have several function\n        setup() -\nign will make turtle draw quickly\n                    make turtle have a window of 1000 * 800\n        reset() - turtle will erase everything\n        drawRectenglePattern() - will call draw rectangle\n                                center position is x, y of circular pattern drawn\n                                Offset- distance from center to starting corner\n\n        drawRectangle() - draw a single rectangle\n        drawCirclePatten() -\n        drawSuperPattern() - randomly draw rectangle and circle patterns based on random values\n        drawRandomColor()- do not use any perameters and make turtle draw in 1/4 random colors\n        done()-called when user quits, keeps window open\n\n    drawRectanglePattern()\n        user will input center possition\n        will go to center postion\n        user will input offset\n        user will input the width of the rectangle\n        user will input the length\n        user will input the number of re\n\n\nTesting", "System Req\n\n\n\n\nSystem Analysis\n\n\n\n\nSystem Des   \n\n    user will input information \nthe pattern module will have several function\n        setup() -\nign will make turtle draw quickly\n                    make turtle have a window of 1000 * 800\n        reset() - turtle will erase everything\n        drawRectenglePattern() - will call draw rectangle\n                                center position is x, y of circular pattern drawn\n                                Offset- distance from center to starting corner\n\n        drawRectangle() - draw a single rectangle\n        drawCirclePatten() -\n        drawSuperPattern() - randomly draw rectangle and circle patterns based on random values\n        drawRandomColor()- do not use any perameters and make turtle draw in 1/4 random colors\n        done()-called when user quits, keeps window open\n\n    drawRectanglePattern()\n        user will input center possition\n        will go to center postion\n        user will input offset\n        user will input the width of the rectangle\n        user will input the length\n        user will input the number of rec\n\n\nTesting", "System Req\n\n\n\n\nSystem Analysis\n\n\n\n\nSystem Des   \n\n    user will input information \nthe pattern module will have several function\n        setup() -\nign will make turtle draw quickly\n                    make turtle have a window of 1000 * 800\n        reset() - turtle will erase everything\n        drawRectenglePattern() - will call draw rectangle\n                                center position is x, y of circular pattern drawn\n                                Offset- distance from center to starting corner\n\n        drawRectangle() - draw a single rectangle\n        drawCirclePatten() -\n        drawSuperPattern() - randomly draw rectangle and circle patterns based on random values\n        drawRandomColor()- do not use any perameters and make turtle draw in 1/4 random colors\n        done()-called when user quits, keeps window open\n\n    drawRectanglePattern()\n        user will input center possition\n        will go to center postion\n        user will input offset\n        user will input the width of the rectangle\n        user will input the length\n        user will input the number of reca\n\n\nTesting", "System Req\n\n\n\n\nSystem Analysis\n\n\n\n\nSystem Des   \n\n    user will input information \nthe pattern module will have several function\n        setup() -\nign will make turtle draw quickly\n                    make turtle have a window of 1000 * 800\n        reset() - turtle will erase everything\n        drawRectenglePattern() - will call draw rectangle\n                                center position is x, y of circular pattern drawn\n                                Offset- distance from center to starting corner\n\n        drawRectangle() - draw a single rectangle\n        drawCirclePatten() -\n        drawSuperPattern() - randomly draw rectangle and circle patterns based on random values\n        drawRandomColor()- do not use any perameters and make turtle draw in 1/4 random colors\n        done()-called when user quits, keeps window open\n\n    drawRectanglePattern()\n        user will input center possition\n        will go to center postion\n        user will input offset\n        user will input the width of the rectangle\n        user will input the length\n        user will input the number of rec\n\n\nTesting", "System Req\n\n\n\n\nSystem Analysis\n\n\n\n\nSystem Des   \n\n    user will input information \nthe pattern module will have several function\n        setup() -\nign will make turtle draw quickly\n                    make turtle have a window of 1000 * 800\n        reset() - turtle will erase everything\n        drawRectenglePattern() - will call draw rectangle\n                                center position is x, y of circular pattern drawn\n                                Offset- distance from center to starting corner\n\n        drawRectangle() - draw a single rectangle\n        drawCirclePatten() -\n        drawSuperPattern() - randomly draw rectangle and circle patterns based on random values\n        drawRandomColor()- do not use any perameters and make turtle draw in 1/4 random colors\n        done()-called when user quits, keeps window open\n\n    drawRectanglePattern()\n        user will input center possition\n        will go to center postion\n        user will input offset\n        user will input the width of the rectangle\n        user will input the length\n        user will input the number of rect\n\n\nTesting", "System Req\n\n\n\n\nSystem Analysis\n\n\n\n\nSystem Des   \n\n    user will input information \nthe pattern module will have several function\n        setup() -\nign will make turtle draw quickly\n                    make turtle have a window of 1000 * 800\n        reset() - turtle will erase everything\n        drawRectenglePattern() - will call draw rectangle\n                                center position is x, y of circular pattern drawn\n                                Offset- distance from center to starting corner\n\n        drawRectangle() - draw a single rectangle\n        drawCirclePatten() -\n        drawSuperPattern() - randomly draw rectangle and circle patterns based on random values\n        drawRandomColor()- do not use any perameters and make turtle draw in 1/4 random colors\n        done()-called when user quits, keeps window open\n\n    drawRectanglePattern()\n        user will input center possition\n        will go to center postion\n        user will input offset\n        user will input the width of the rectangle\n        user will input the length\n        user will input the number of recta\n\n\nTesting", "System Req\n\n\n\n\nSystem Analysis\n\n\n\n\nSystem Des   \n\n    user will input information \nthe pattern module will have several function\n        setup() -\nign will make turtle draw quickly\n                    make turtle have a window of 1000 * 800\n        reset() - turtle will erase everything\n        drawRectenglePattern() - will call draw rectangle\n                                center position is x, y of circular pattern drawn\n                                Offset- distance from center to starting corner\n\n        drawRectangle() - draw a single rectangle\n        drawCirclePatten() -\n        drawSuperPattern() - randomly draw rectangle and circle patterns based on random values\n        drawRandomColor()- do not use any perameters and make turtle draw in 1/4 random colors\n        done()-called when user quits, keeps window open\n\n    drawRectanglePattern()\n        user will input center possition\n        will go to center postion\n        user will input offset\n        user will input the width of the rectangle\n        user will input the length\n        user will input the number of rectan\n\n\nTesting", "System Req\n\n\n\n\nSystem Analysis\n\n\n\n\nSystem Des   \n\n    user will input information \nthe pattern module will have several function\n        setup() -\nign will make turtle draw quickly\n                    make turtle have a window of 1000 * 800\n        reset() - turtle will erase everything\n        drawRectenglePattern() - will call draw rectangle\n                                center position is x, y of circular pattern drawn\n                                Offset- distance from center to starting corner\n\n        drawRectangle() - draw a single rectangle\n        drawCirclePatten() -\n        drawSuperPattern() - randomly draw rectangle and circle patterns based on random values\n        drawRandomColor()- do not use any perameters and make turtle draw in 1/4 random colors\n        done()-called when user quits, keeps window open\n\n    drawRectanglePattern()\n        user will input center possition\n        will go to center postion\n        user will input offset\n        user will input the width of the rectangle\n        user will input the length\n        user will input the number of rectang\n\n\nTesting", "System Req\n\n\n\n\nSystem Analysis\n\n\n\n\nSystem Des   \n\n    user will input information \nthe pattern module will have several function\n        setup() -\nign will make turtle draw quickly\n                    make turtle have a window of 1000 * 800\n        reset() - turtle will erase everything\n        drawRectenglePattern() - will call draw rectangle\n                                center position is x, y of circular pattern drawn\n                                Offset- distance from center to starting corner\n\n        drawRectangle() - draw a single rectangle\n        drawCirclePatten() -\n        drawSuperPattern() - randomly draw rectangle and circle patterns based on random values\n        drawRandomColor()- do not use any perameters and make turtle draw in 1/4 random colors\n        done()-called when user quits, keeps window open\n\n    drawRectanglePattern()\n        user will input center possition\n        will go to center postion\n        user will input offset\n        user will input the width of the rectangle\n        user will input the length\n        user will input the number of rectangl\n\n\nTesting", "System Req\n\n\n\n\nSystem Analysis\n\n\n\n\nSystem Des   \n\n    user will input information \nthe pattern module will have several function\n        setup() -\nign will make turtle draw quickly\n                    make turtle have a window of 1000 * 800\n        reset() - turtle will erase everything\n        drawRectenglePattern() - will call draw rectangle\n                                center position is x, y of circular pattern drawn\n                                Offset- distance from center to starting corner\n\n        drawRectangle() - draw a single rectangle\n        drawCirclePatten() -\n        drawSuperPattern() - randomly draw rectangle and circle patterns based on random values\n        drawRandomColor()- do not use any perameters and make turtle draw in 1/4 random colors\n        done()-called when user quits, keeps window open\n\n    drawRectanglePattern()\n        user will input center possition\n        will go to center postion\n        user will input offset\n        user will input the width of the rectangle\n        user will input the length\n        user will input the number of rectangle\n\n\nTesting", "System Req\n\n\n\n\nSystem Analysis\n\n\n\n\nSystem Des   \n\n    user will input information \nthe pattern module will have several function\n        setup() -\nign will make turtle draw quickly\n                    make turtle have a window of 1000 * 800\n        reset() - turtle will erase everything\n        drawRectenglePattern() - will call draw rectangle\n                                center position is x, y of circular pattern drawn\n                                Offset- distance from center to starting corner\n\n        drawRectangle() - draw a single rectangle\n        drawCirclePatten() -\n        drawSuperPattern() - randomly draw rectangle and circle patterns based on random values\n        drawRandomColor()- do not use any perameters and make turtle draw in 1/4 random colors\n        done()-called when user quits, keeps window open\n\n    drawRectanglePattern()\n        user will input center possition\n        will go to center postion\n        user will input offset\n        user will input the width of the rectangle\n        user will input the length\n        user will input the number of rectangles\n\n\nTesting", "System Req\n\n\n\n\nSystem Analysis\n\n\n\n\nSystem Des   \n\n    user will input information \nthe pattern module will have several function\n        setup() -\nign will make turtle draw quickly\n                    make turtle have a window of 1000 * 800\n        reset() - turtle will erase everything\n        drawRectenglePattern() - will call draw rectangle\n                                center position is x, y of circular pattern drawn\n                                Offset- distance from center to starting corner\n\n        drawRectangle() - draw a single rectangle\n        drawCirclePatten() -\n        drawSuperPattern() - randomly draw rectangle and circle patterns based on random values\n        drawRandomColor()- do not use any perameters and make turtle draw in 1/4 random colors\n        done()-called when user quits, keeps window open\n\n    drawRectanglePattern()\n        user will input center possition\n        will go to center postion\n        user will input \n        user will input the width of the rectangle\n        user will input the length\n        user will input the number of rectangles\n\n\nTesting", "System Req\n\n\n\n\nSystem Analysis\n\n\n\n\nSystem Des   \n\n    user will input information \nthe pattern module will have several function\n        setup() -\nign will make turtle draw quickly\n                    make turtle have a window of 1000 * 800\n        reset() - turtle will erase everything\n        drawRectenglePattern() - will call draw rectangle\n                                center position is x, y of circular pattern drawn\n                                Offset- distance from center to starting corner\n\n        drawRectangle() - draw a single rectangle\n        drawCirclePatten() -\n        drawSuperPattern() - randomly draw rectangle and circle patterns based on random values\n        drawRandomColor()- do not use any perameters and make turtle draw in 1/4 random colors\n        done()-called when user quits, keeps window open\n\n    drawRectanglePattern()\n        user will input center possition\n        will go to center postion\n        user will input \n        user will input the width of the rectangle\n        user will input the length\n        user will input the number of rectangles\n\n\nTesting", "System Req\n\n\n\n\nSystem Analysis\n\n\n\n\nSystem Des   \n\n    user will input information \nthe pattern module will have several function\n        setup() -\nign will make turtle draw quickly\n                    make turtle have a window of 1000 * 800\n        reset() - turtle will erase everything\n        drawRectenglePattern() - will call draw rectangle\n                                center position is x, y of circular pattern drawn\n                                Offset- distance from center to starting corner\n\n        drawRectangle() - draw a single rectangle\n        drawCirclePatten() -\n        drawSuperPattern() - randomly draw rectangle and circle patterns based on random values\n        drawRandomColor()- do not use any perameters and make turtle draw in 1/4 random colors\n        done()-called when user quits, keeps window open\n\n    drawRectanglePattern()\n        user will input center possition\n        will go to center postion\n        user will input the number of rectangles\n        number degree between starting corners will be determined by 360 / number of rectangles\n        user will input offset length\n        pickup pen\n        go to cos*x, sin*y\n        putdown pen\n        user will input the width of the rectangle\n        user will input the length\n        user will input the number of rectangles\n\n\nTesting", "System Req\n\n\n\n\nSystem Analysis\n\n\n\n\nSystem Des   \n\n    user will input information \nthe pattern module will have several function\n        setup() -\nign will make turtle draw quickly\n                    make turtle have a window of 1000 * 800\n        reset() - turtle will erase everything\n        drawRectenglePattern() - will call draw rectangle\n                                center position is x, y of circular pattern drawn\n                                Offset- distance from center to starting corner\n\n        drawRectangle() - draw a single rectangle\n        drawCirclePatten() -\n        drawSuperPattern() - randomly draw rectangle and circle patterns based on random values\n        drawRandomColor()- do not use any perameters and make turtle draw in 1/4 random colors\n        done()-called when user quits, keeps window open\n\n    drawRectanglePattern()\n        user will input center possition\n        will go to center postion\n        user will input the number of rectangles\n        number degree between starting corners will be determined by 360 / number of rectangles\n        user will input offset length\n        pickup pen\n        go to cos*x, sin*y\n        putdown pen\n        u\n        user will input the width of the rectangle\n        user will input the length\n        user will input the number of rectangles\n\n\nTesting", "System Req\n\n\n\n\nSystem Analysis\n\n\n\n\nSystem Des   \n\n    user will input information \nthe pattern module will have several function\n        setup() -\nign will make turtle draw quickly\n                    make turtle have a window of 1000 * 800\n        reset() - turtle will erase everything\n        drawRectenglePattern() - will call draw rectangle\n                                center position is x, y of circular pattern drawn\n                                Offset- distance from center to starting corner\n\n        drawRectangle() - draw a single rectangle\n        drawCirclePatten() -\n        drawSuperPattern() - randomly draw rectangle and circle patterns based on random values\n        drawRandomColor()- do not use any perameters and make turtle draw in 1/4 random colors\n        done()-called when user quits, keeps window open\n\n    drawRectanglePattern()\n        user will input center possition\n        will go to center postion\n        user will input the number of rectangles\n        number degree between starting corners will be determined by 360 / number of rectangles\n        user will input offset length\n        pickup pen\n        go to cos*x, sin*y\n        putdown pen\n        us\n        user will input the width of the rectangle\n        user will input the length\n        user will input the number of rectangles\n\n\nTesting", "System Req\n\n\n\n\nSystem Analysis\n\n\n\n\nSystem Des   \n\n    user will input information \nthe pattern module will have several function\n        setup() -\nign will make turtle draw quickly\n                    make turtle have a window of 1000 * 800\n        reset() - turtle will erase everything\n        drawRectenglePattern() - will call draw rectangle\n                                center position is x, y of circular pattern drawn\n                                Offset- distance from center to starting corner\n\n        drawRectangle() - draw a single rectangle\n        drawCirclePatten() -\n        drawSuperPattern() - randomly draw rectangle and circle patterns based on random values\n        drawRandomColor()- do not use any perameters and make turtle draw in 1/4 random colors\n        done()-called when user quits, keeps window open\n\n    drawRectanglePattern()\n        user will input center possition\n        will go to center postion\n        user will input the number of rectangles\n        number degree between starting corners will be determined by 360 / number of rectangles\n        user will input offset length\n        pickup pen\n        go to cos*x, sin*y\n        putdown pen\n        use\n        user will input the width of the rectangle\n        user will input the length\n        user will input the number of rectangles\n\n\nTesting", "System Req\n\n\n\n\nSystem Analysis\n\n\n\n\nSystem Des   \n\n    user will input information \nthe pattern module will have several function\n        setup() -\nign will make turtle draw quickly\n                    make turtle have a window of 1000 * 800\n        reset() - turtle will erase everything\n        drawRectenglePattern() - will call draw rectangle\n                                center position is x, y of circular pattern drawn\n                                Offset- distance from center to starting corner\n\n        drawRectangle() - draw a single rectangle\n        drawCirclePatten() -\n        drawSuperPattern() - randomly draw rectangle and circle patterns based on random values\n        drawRandomColor()- do not use any perameters and make turtle draw in 1/4 random colors\n        done()-called when user quits, keeps window open\n\n    drawRectanglePattern()\n        user will input center possition\n        will go to center postion\n        user will input the number of rectangles\n        number degree between starting corners will be determined by 360 / number of rectangles\n        user will input offset length\n        pickup pen\n        go to cos*x, sin*y\n        putdown pen\n        user\n        user will input the width of the rectangle\n        user will input the length\n        user will input the number of rectangles\n\n\nTesting", "System Req\n\n\n\n\nSystem Analysis\n\n\n\n\nSystem Des   \n\n    user will input information \nthe pattern module will have several function\n        setup() -\nign will make turtle draw quickly\n                    make turtle have a window of 1000 * 800\n        reset() - turtle will erase everything\n        drawRectenglePattern() - will call draw rectangle\n                                center position is x, y of circular pattern drawn\n                                Offset- distance from center to starting corner\n\n        drawRectangle() - draw a single rectangle\n        drawCirclePatten() -\n        drawSuperPattern() - randomly draw rectangle and circle patterns based on random values\n        drawRandomColor()- do not use any perameters and make turtle draw in 1/4 random colors\n        done()-called when user quits, keeps window open\n\n    drawRectanglePattern()\n        user will input center possition\n        will go to center postion\n        user will input the number of rectangles\n        number degree between starting corners will be determined by 360 / number of rectangles\n        user will input offset length\n        pickup pen\n        go to cos*x, sin*y\n        putdown pen\n        user w\n        user will input the width of the rectangle\n        user will input the length\n        user will input the number of rectangles\n\n\nTesting", "System Req\n\n\n\n\nSystem Analysis\n\n\n\n\nSystem Des   \n\n    user will input information \nthe pattern module will have several function\n        setup() -\nign will make turtle draw quickly\n                    make turtle have a window of 1000 * 800\n        reset() - turtle will erase everything\n        drawRectenglePattern() - will call draw rectangle\n                                center position is x, y of circular pattern drawn\n                                Offset- distance from center to starting corner\n\n        drawRectangle() - draw a single rectangle\n        drawCirclePatten() -\n        drawSuperPattern() - randomly draw rectangle and circle patterns based on random values\n        drawRandomColor()- do not use any perameters and make turtle draw in 1/4 random colors\n        done()-called when user quits, keeps window open\n\n    drawRectanglePattern()\n        user will input center possition\n        will go to center postion\n        user will input the number of rectangles\n        number degree between starting corners will be determined by 360 / number of rectangles\n        user will input offset length\n        pickup pen\n        go to cos*x, sin*y\n        putdown pen\n        user wi\n        user will input the width of the rectangle\n        user will input the length\n        user will input the number of rectangles\n\n\nTesting", "System Req\n\n\n\n\nSystem Analysis\n\n\n\n\nSystem Des   \n\n    user will input information \nthe pattern module will have several function\n        setup() -\nign will make turtle draw quickly\n                    make turtle have a window of 1000 * 800\n        reset() - turtle will erase everything\n        drawRectenglePattern() - will call draw rectangle\n                                center position is x, y of circular pattern drawn\n                                Offset- distance from center to starting corner\n\n        drawRectangle() - draw a single rectangle\n        drawCirclePatten() -\n        drawSuperPattern() - randomly draw rectangle and circle patterns based on random values\n        drawRandomColor()- do not use any perameters and make turtle draw in 1/4 random colors\n        done()-called when user quits, keeps window open\n\n    drawRectanglePattern()\n        user will input center possition\n        will go to center postion\n        user will input the number of rectangles\n        number degree between starting corners will be determined by 360 / number of rectangles\n        user will input offset length\n        pickup pen\n        go to cos*x, sin*y\n        putdown pen\n        user wil\n        user will input the width of the rectangle\n        user will input the length\n        user will input the number of rectangles\n\n\nTesting", "System Req\n\n\n\n\nSystem Analysis\n\n\n\n\nSystem Des   \n\n    user will input information \nthe pattern module will have several function\n        setup() -\nign will make turtle draw quickly\n                    make turtle have a window of 1000 * 800\n        reset() - turtle will erase everything\n        drawRectenglePattern() - will call draw rectangle\n                                center position is x, y of circular pattern drawn\n                                Offset- distance from center to starting corner\n\n        drawRectangle() - draw a single rectangle\n        drawCirclePatten() -\n        drawSuperPattern() - randomly draw rectangle and circle patterns based on random values\n        drawRandomColor()- do not use any perameters and make turtle draw in 1/4 random colors\n        done()-called when user quits, keeps window open\n\n    drawRectanglePattern()\n        user will input center possition\n        will go to center postion\n        user will input the number of rectangles\n        number degree between starting corners will be determined by 360 / number of rectangles\n        user will input offset length\n        pickup pen\n        go to cos*x, sin*y\n        putdown pen\n        user will\n        user will input the width of the rectangle\n        user will input the length\n        user will input the number of rectangles\n\n\nTesting", "System Req\n\n\n\n\nSystem Analysis\n\n\n\n\nSystem Des   \n\n    user will input information \nthe pattern module will have several function\n        setup() -\nign will make turtle draw quickly\n                    make turtle have a window of 1000 * 800\n        reset() - turtle will erase everything\n        drawRectenglePattern() - will call draw rectangle\n                                center position is x, y of circular pattern drawn\n                                Offset- distance from center to starting corner\n\n        drawRectangle() - draw a single rectangle\n        drawCirclePatten() -\n        drawSuperPattern() - randomly draw rectangle and circle patterns based on random values\n        drawRandomColor()- do not use any perameters and make turtle draw in 1/4 random colors\n        done()-called when user quits, keeps window open\n\n    drawRectanglePattern()\n        user will input center possition\n        will go to center postion\n        user will input the number of rectangles\n        number degree between starting corners will be determined by 360 / number of rectangles\n        user will input offset length\n        pickup pen\n        go to cos*x, sin*y\n        putdown pen\n        user will i\n        user will input the width of the rectangle\n        user will input the length\n        user will input the number of rectangles\n\n\nTesting", "System Req\n\n\n\n\nSystem Analysis\n\n\n\n\nSystem Des   \n\n    user will input information \nthe pattern module will have several function\n        setup() -\nign will make turtle draw quickly\n                    make turtle have a window of 1000 * 800\n        reset() - turtle will erase everything\n        drawRectenglePattern() - will call draw rectangle\n                                center position is x, y of circular pattern drawn\n                                Offset- distance from center to starting corner\n\n        drawRectangle() - draw a single rectangle\n        drawCirclePatten() -\n        drawSuperPattern() - randomly draw rectangle and circle patterns based on random values\n        drawRandomColor()- do not use any perameters and make turtle draw in 1/4 random colors\n        done()-called when user quits, keeps window open\n\n    drawRectanglePattern()\n        user will input center possition\n        will go to center postion\n        user will input the number of rectangles\n        number degree between starting corners will be determined by 360 / number of rectangles\n        user will input offset length\n        pickup pen\n        go to cos*x, sin*y\n        putdown pen\n        user will in\n        user will input the width of the rectangle\n        user will input the length\n        user will input the number of rectangles\n\n\nTesting", "System Req\n\n\n\n\nSystem Analysis\n\n\n\n\nSystem Des   \n\n    user will input information \nthe pattern module will have several function\n        setup() -\nign will make turtle draw quickly\n                    make turtle have a window of 1000 * 800\n        reset() - turtle will erase everything\n        drawRectenglePattern() - will call draw rectangle\n                                center position is x, y of circular pattern drawn\n                                Offset- distance from center to starting corner\n\n        drawRectangle() - draw a single rectangle\n        drawCirclePatten() -\n        drawSuperPattern() - randomly draw rectangle and circle patterns based on random values\n        drawRandomColor()- do not use any perameters and make turtle draw in 1/4 random colors\n        done()-called when user quits, keeps window open\n\n    drawRectanglePattern()\n        user will input center possition\n        will go to center postion\n        user will input the number of rectangles\n        number degree between starting corners will be determined by 360 / number of rectangles\n        user will input offset length\n        pickup pen\n        go to cos*x, sin*y\n        putdown pen\n        user will inp\n        user will input the width of the rectangle\n        user will input the length\n        user will input the number of rectangles\n\n\nTesting", "System Req\n\n\n\n\nSystem Analysis\n\n\n\n\nSystem Des   \n\n    user will input information \nthe pattern module will have several function\n        setup() -\nign will make turtle draw quickly\n                    make turtle have a window of 1000 * 800\n        reset() - turtle will erase everything\n        drawRectenglePattern() - will call draw rectangle\n                                center position is x, y of circular pattern drawn\n                                Offset- distance from center to starting corner\n\n        drawRectangle() - draw a single rectangle\n        drawCirclePatten() -\n        drawSuperPattern() - randomly draw rectangle and circle patterns based on random values\n        drawRandomColor()- do not use any perameters and make turtle draw in 1/4 random colors\n        done()-called when user quits, keeps window open\n\n    drawRectanglePattern()\n        user will input center possition\n        will go to center postion\n        user will input the number of rectangles\n        number degree between starting corners will be determined by 360 / number of rectangles\n        user will input offset length\n        pickup pen\n        go to cos*x, sin*y\n        putdown pen\n        user will inpu\n        user will input the width of the rectangle\n        user will input the length\n        user will input the number of rectangles\n\n\nTesting", "System Req\n\n\n\n\nSystem Analysis\n\n\n\n\nSystem Des   \n\n    user will input information \nthe pattern module will have several function\n        setup() -\nign will make turtle draw quickly\n                    make turtle have a window of 1000 * 800\n        reset() - turtle will erase everything\n        drawRectenglePattern() - will call draw rectangle\n                                center position is x, y of circular pattern drawn\n                                Offset- distance from center to starting corner\n\n        drawRectangle() - draw a single rectangle\n        drawCirclePatten() -\n        drawSuperPattern() - randomly draw rectangle and circle patterns based on random values\n        drawRandomColor()- do not use any perameters and make turtle draw in 1/4 random colors\n        done()-called when user quits, keeps window open\n\n    drawRectanglePattern()\n        user will input center possition\n        will go to center postion\n        user will input the number of rectangles\n        number degree between starting corners will be determined by 360 / number of rectangles\n        user will input offset length\n        pickup pen\n        go to cos*x, sin*y\n        putdown pen\n        user will input\n        user will input the width of the rectangle\n        user will input the length\n        user will input the number of rectangles\n\n\nTesting", "System Req\n\n\n\n\nSystem Analysis\n\n\n\n\nSystem Des   \n\n    user will input information \nthe pattern module will have several function\n        setup() -\nign will make turtle draw quickly\n                    make turtle have a window of 1000 * 800\n        reset() - turtle will erase everything\n        drawRectenglePattern() - will call draw rectangle\n                                center position is x, y of circular pattern drawn\n                                Offset- distance from center to starting corner\n\n        drawRectangle() - draw a single rectangle\n        drawCirclePatten() -\n        drawSuperPattern() - randomly draw rectangle and circle patterns based on random values\n        drawRandomColor()- do not use any perameters and make turtle draw in 1/4 random colors\n        done()-called when user quits, keeps window open\n\n    drawRectanglePattern()\n        user will input center possition\n        will go to center postion\n        user will input the number of rectangles\n        number degree between starting corners will be determined by 360 / number of rectangles\n        user will input offset length\n        pickup pen\n        go to cos*x, sin*y\n        putdown pen\n        user will input r\n        user will input the width of the rectangle\n        user will input the length\n        user will input the number of rectangles\n\n\nTesting", "System Req\n\n\n\n\nSystem Analysis\n\n\n\n\nSystem Des   \n\n    user will input information \nthe pattern module will have several function\n        setup() -\nign will make turtle draw quickly\n                    make turtle have a window of 1000 * 800\n        reset() - turtle will erase everything\n        drawRectenglePattern() - will call draw rectangle\n                                center position is x, y of circular pattern drawn\n                                Offset- distance from center to starting corner\n\n        drawRectangle() - draw a single rectangle\n        drawCirclePatten() -\n        drawSuperPattern() - randomly draw rectangle and circle patterns based on random values\n        drawRandomColor()- do not use any perameters and make turtle draw in 1/4 random colors\n        done()-called when user quits, keeps window open\n\n    drawRectanglePattern()\n        user will input center possition\n        will go to center postion\n        user will input the number of rectangles\n        number degree between starting corners will be determined by 360 / number of rectangles\n        user will input offset length\n        pickup pen\n        go to cos*x, sin*y\n        putdown pen\n        user will input ro\n        user will input the width of the rectangle\n        user will input the length\n        user will input the number of rectangles\n\n\nTesting", "System Req\n\n\n\n\nSystem Analysis\n\n\n\n\nSystem Des   \n\n    user will input information \nthe pattern module will have several function\n        setup() -\nign will make turtle draw quickly\n                    make turtle have a window of 1000 * 800\n        reset() - turtle will erase everything\n        drawRectenglePattern() - will call draw rectangle\n                                center position is x, y of circular pattern drawn\n                                Offset- distance from center to starting corner\n\n        drawRectangle() - draw a single rectangle\n        drawCirclePatten() -\n        drawSuperPattern() - randomly draw rectangle and circle patterns based on random values\n        drawRandomColor()- do not use any perameters and make turtle draw in 1/4 random colors\n        done()-called when user quits, keeps window open\n\n    drawRectanglePattern()\n        user will input center possition\n        will go to center postion\n        user will input the number of rectangles\n        number degree between starting corners will be determined by 360 / number of rectangles\n        user will input offset length\n        pickup pen\n        go to cos*x, sin*y\n        putdown pen\n        user will input rot\n        user will input the width of the rectangle\n        user will input the length\n        user will input the number of rectangles\n\n\nTesting", "System Req\n\n\n\n\nSystem Analysis\n\n\n\n\nSystem Des   \n\n    user will input information \nthe pattern module will have several function\n        setup() -\nign will make turtle draw quickly\n                    make turtle have a window of 1000 * 800\n        reset() - turtle will erase everything\n        drawRectenglePattern() - will call draw rectangle\n                                center position is x, y of circular pattern drawn\n                                Offset- distance from center to starting corner\n\n        drawRectangle() - draw a single rectangle\n        drawCirclePatten() -\n        drawSuperPattern() - randomly draw rectangle and circle patterns based on random values\n        drawRandomColor()- do not use any perameters and make turtle draw in 1/4 random colors\n        done()-called when user quits, keeps window open\n\n    drawRectanglePattern()\n        user will input center possition\n        will go to center postion\n        user will input the number of rectangles\n        number degree between starting corners will be determined by 360 / number of rectangles\n        user will input offset length\n        pickup pen\n        go to cos*x, sin*y\n        putdown pen\n        user will input rota\n        user will input the width of the rectangle\n        user will input the length\n        user will input the number of rectangles\n\n\nTesting", "System Req\n\n\n\n\nSystem Analysis\n\n\n\n\nSystem Des   \n\n    user will input information \nthe pattern module will have several function\n        setup() -\nign will make turtle draw quickly\n                    make turtle have a window of 1000 * 800\n        reset() - turtle will erase everything\n        drawRectenglePattern() - will call draw rectangle\n                                center position is x, y of circular pattern drawn\n                                Offset- distance from center to starting corner\n\n        drawRectangle() - draw a single rectangle\n        drawCirclePatten() -\n        drawSuperPattern() - randomly draw rectangle and circle patterns based on random values\n        drawRandomColor()- do not use any perameters and make turtle draw in 1/4 random colors\n        done()-called when user quits, keeps window open\n\n    drawRectanglePattern()\n        user will input center possition\n        will go to center postion\n        user will input the number of rectangles\n        number degree between starting corners will be determined by 360 / number of rectangles\n        user will input offset length\n        pickup pen\n        go to cos*x, sin*y\n        putdown pen\n        user will input rotat\n        user will input the width of the rectangle\n        user will input the length\n        user will input the number of rectangles\n\n\nTesting", "System Req\n\n\n\n\nSystem Analysis\n\n\n\n\nSystem Des   \n\n    user will input information \nthe pattern module will have several function\n        setup() -\nign will make turtle draw quickly\n                    make turtle have a window of 1000 * 800\n        reset() - turtle will erase everything\n        drawRectenglePattern() - will call draw rectangle\n                                center position is x, y of circular pattern drawn\n                                Offset- distance from center to starting corner\n\n        drawRectangle() - draw a single rectangle\n        drawCirclePatten() -\n        drawSuperPattern() - randomly draw rectangle and circle patterns based on random values\n        drawRandomColor()- do not use any perameters and make turtle draw in 1/4 random colors\n        done()-called when user quits, keeps window open\n\n    drawRectanglePattern()\n        user will input center possition\n        will go to center postion\n        user will input the number of rectangles\n        number degree between starting corners will be determined by 360 / number of rectangles\n        user will input offset length\n        pickup pen\n        go to cos*x, sin*y\n        putdown pen\n        user will input rotati\n        user will input the width of the rectangle\n        user will input the length\n        user will input the number of rectangles\n\n\nTesting", "System Req\n\n\n\n\nSystem Analysis\n\n\n\n\nSystem Des   \n\n    user will input information \nthe pattern module will have several function\n        setup() -\nign will make turtle draw quickly\n                    make turtle have a window of 1000 * 800\n        reset() - turtle will erase everything\n        drawRectenglePattern() - will call draw rectangle\n                                center position is x, y of circular pattern drawn\n                                Offset- distance from center to starting corner\n\n        drawRectangle() - draw a single rectangle\n        drawCirclePatten() -\n        drawSuperPattern() - randomly draw rectangle and circle patterns based on random values\n        drawRandomColor()- do not use any perameters and make turtle draw in 1/4 random colors\n        done()-called when user quits, keeps window open\n\n    drawRectanglePattern()\n        user will input center possition\n        will go to center postion\n        user will input the number of rectangles\n        number degree between starting corners will be determined by 360 / number of rectangles\n        user will input offset length\n        pickup pen\n        go to cos*x, sin*y\n        putdown pen\n        user will input rotatio\n        user will input the width of the rectangle\n        user will input the length\n        user will input the number of rectangles\n\n\nTesting", "System Req\n\n\n\n\nSystem Analysis\n\n\n\n\nSystem Des   \n\n    user will input information \nthe pattern module will have several function\n        setup() -\nign will make turtle draw quickly\n                    make turtle have a window of 1000 * 800\n        reset() - turtle will erase everything\n        drawRectenglePattern() - will call draw rectangle\n                                center position is x, y of circular pattern drawn\n                                Offset- distance from center to starting corner\n\n        drawRectangle() - draw a single rectangle\n        drawCirclePatten() -\n        drawSuperPattern() - randomly draw rectangle and circle patterns based on random values\n        drawRandomColor()- do not use any perameters and make turtle draw in 1/4 random colors\n        done()-called when user quits, keeps window open\n\n    drawRectanglePattern()\n        user will input center possition\n        will go to center postion\n        user will input the number of rectangles\n        number degree between starting corners will be determined by 360 / number of rectangles\n        user will input offset length\n        pickup pen\n        go to cos*x, sin*y\n        putdown pen\n        user will input rotation\n        user will input the width of the rectangle\n        user will input the length\n        user will input the number of rectangles\n\n\nTesting", "System Req\n\n\n\n\nSystem Analysis\n\n\n\n\nSystem Des   \n\n    user will input information \nthe pattern module will have several function\n        setup() -\nign will make turtle draw quickly\n                    make turtle have a window of 1000 * 800\n        reset() - turtle will erase everything\n        drawRectenglePattern() - will call draw rectangle\n                                center position is x, y of circular pattern drawn\n                                Offset- distance from center to starting corner\n\n        drawRectangle() - draw a single rectangle\n        drawCirclePatten() -\n        drawSuperPattern() - randomly draw rectangle and circle patterns based on random values\n        drawRandomColor()- do not use any perameters and make turtle draw in 1/4 random colors\n        done()-called when user quits, keeps window open\n\n    drawRectanglePattern()\n        user will input center possition\n        will go to center postion\n        user will input the number of rectangles\n        number degree between starting corners will be determined by 360 / number of rectangles\n        user will input offset length\n        pickup pen\n        go to cos*x, sin*y\n        putdown pen\n        user will input rotation o\n        user will input the width of the rectangle\n        user will input the length\n        user will input the number of rectangles\n\n\nTesting", "System Req\n\n\n\n\nSystem Analysis\n\n\n\n\nSystem Des   \n\n    user will input information \nthe pattern module will have several function\n        setup() -\nign will make turtle draw quickly\n                    make turtle have a window of 1000 * 800\n        reset() - turtle will erase everything\n        drawRectenglePattern() - will call draw rectangle\n                                center position is x, y of circular pattern drawn\n                                Offset- distance from center to starting corner\n\n        drawRectangle() - draw a single rectangle\n        drawCirclePatten() -\n        drawSuperPattern() - randomly draw rectangle and circle patterns based on random values\n        drawRandomColor()- do not use any perameters and make turtle draw in 1/4 random colors\n        done()-called when user quits, keeps window open\n\n    drawRectanglePattern()\n        user will input center possition\n        will go to center postion\n        user will input the number of rectangles\n        number degree between starting corners will be determined by 360 / number of rectangles\n        user will input offset length\n        pickup pen\n        go to cos*x, sin*y\n        putdown pen\n        user will input rotation of\n        user will input the width of the rectangle\n        user will input the length\n        user will input the number of rectangles\n\n\nTesting", "System Req\n\n\n\n\nSystem Analysis\n\n\n\n\nSystem Des   \n\n    user will input information \nthe pattern module will have several function\n        setup() -\nign will make turtle draw quickly\n                    make turtle have a window of 1000 * 800\n        reset() - turtle will erase everything\n        drawRectenglePattern() - will call draw rectangle\n                                center position is x, y of circular pattern drawn\n                                Offset- distance from center to starting corner\n\n        drawRectangle() - draw a single rectangle\n        drawCirclePatten() -\n        drawSuperPattern() - randomly draw rectangle and circle patterns based on random values\n        drawRandomColor()- do not use any perameters and make turtle draw in 1/4 random colors\n        done()-called when user quits, keeps window open\n\n    drawRectanglePattern()\n        user will input center possition\n        will go to center postion\n        user will input the number of rectangles\n        number degree between starting corners will be determined by 360 / number of rectangles\n        user will input offset length\n        pickup pen\n        go to cos*x, sin*y\n        putdown pen\n        user will input rotation of s\n        user will input the width of the rectangle\n        user will input the length\n        user will input the number of rectangles\n\n\nTesting", "System Req\n\n\n\n\nSystem Analysis\n\n\n\n\nSystem Des   \n\n    user will input information \nthe pattern module will have several function\n        setup() -\nign will make turtle draw quickly\n                    make turtle have a window of 1000 * 800\n        reset() - turtle will erase everything\n        drawRectenglePattern() - will call draw rectangle\n                                center position is x, y of circular pattern drawn\n                                Offset- distance from center to starting corner\n\n        drawRectangle() - draw a single rectangle\n        drawCirclePatten() -\n        drawSuperPattern() - randomly draw rectangle and circle patterns based on random values\n        drawRandomColor()- do not use any perameters and make turtle draw in 1/4 random colors\n        done()-called when user quits, keeps window open\n\n    drawRectanglePattern()\n        user will input center possition\n        will go to center postion\n        user will input the number of rectangles\n        number degree between starting corners will be determined by 360 / number of rectangles\n        user will input offset length\n        pickup pen\n        go to cos*x, sin*y\n        putdown pen\n        user will input rotation of st\n        user will input the width of the rectangle\n        user will input the length\n        user will input the number of rectangles\n\n\nTesting", "System Req\n\n\n\n\nSystem Analysis\n\n\n\n\nSystem Des   \n\n    user will input information \nthe pattern module will have several function\n        setup() -\nign will make turtle draw quickly\n                    make turtle have a window of 1000 * 800\n        reset() - turtle will erase everything\n        drawRectenglePattern() - will call draw rectangle\n                                center position is x, y of circular pattern drawn\n                                Offset- distance from center to starting corner\n\n        drawRectangle() - draw a single rectangle\n        drawCirclePatten() -\n        drawSuperPattern() - randomly draw rectangle and circle patterns based on random values\n        drawRandomColor()- do not use any perameters and make turtle draw in 1/4 random colors\n        done()-called when user quits, keeps window open\n\n    drawRectanglePattern()\n        user will input center possition\n        will go to center postion\n        user will input the number of rectangles\n        number degree between starting corners will be determined by 360 / number of rectangles\n        user will input offset length\n        pickup pen\n        go to cos*x, sin*y\n        putdown pen\n        user will input rotation of sta\n        user will input the width of the rectangle\n        user will input the length\n        user will input the number of rectangles\n\n\nTesting", "System Req\n\n\n\n\nSystem Analysis\n\n\n\n\nSystem Des   \n\n    user will input information \nthe pattern module will have several function\n        setup() -\nign will make turtle draw quickly\n                    make turtle have a window of 1000 * 800\n        reset() - turtle will erase everything\n        drawRectenglePattern() - will call draw rectangle\n                                center position is x, y of circular pattern drawn\n                                Offset- distance from center to starting corner\n\n        drawRectangle() - draw a single rectangle\n        drawCirclePatten() -\n        drawSuperPattern() - randomly draw rectangle and circle patterns based on random values\n        drawRandomColor()- do not use any perameters and make turtle draw in 1/4 random colors\n        done()-called when user quits, keeps window open\n\n    drawRectanglePattern()\n        user will input center possition\n        will go to center postion\n        user will input the number of rectangles\n        number degree between starting corners will be determined by 360 / number of rectangles\n        user will input offset length\n        pickup pen\n        go to cos*x, sin*y\n        putdown pen\n        user will input rotation of star\n        user will input the width of the rectangle\n        user will input the length\n        user will input the number of rectangles\n\n\nTesting", "System Req\n\n\n\n\nSystem Analysis\n\n\n\n\nSystem Des   \n\n    user will input information \nthe pattern module will have several function\n        setup() -\nign will make turtle draw quickly\n                    make turtle have a window of 1000 * 800\n        reset() - turtle will erase everything\n        drawRectenglePattern() - will call draw rectangle\n                                center position is x, y of circular pattern drawn\n                                Offset- distance from center to starting corner\n\n        drawRectangle() - draw a single rectangle\n        drawCirclePatten() -\n        drawSuperPattern() - randomly draw rectangle and circle patterns based on random values\n        drawRandomColor()- do not use any perameters and make turtle draw in 1/4 random colors\n        done()-called when user quits, keeps window open\n\n    drawRectanglePattern()\n        user will input center possition\n        will go to center postion\n        user will input the number of rectangles\n        number degree between starting corners will be determined by 360 / number of rectangles\n        user will input offset length\n        pickup pen\n        go to cos*x, sin*y\n        putdown pen\n        user will input rotation of start\n        user will input the width of the rectangle\n        user will input the length\n        user will input the number of rectangles\n\n\nTesting", "System Req\n\n\n\n\nSystem Analysis\n\n\n\n\nSystem Des   \n\n    user will input information \nthe pattern module will have several function\n        setup() -\nign will make turtle draw quickly\n                    make turtle have a window of 1000 * 800\n        reset() - turtle will erase everything\n        drawRectenglePattern() - will call draw rectangle\n                                center position is x, y of circular pattern drawn\n                                Offset- distance from center to starting corner\n\n        drawRectangle() - draw a single rectangle\n        drawCirclePatten() -\n        drawSuperPattern() - randomly draw rectangle and circle patterns based on random values\n        drawRandomColor()- do not use any perameters and make turtle draw in 1/4 random colors\n        done()-called when user quits, keeps window open\n\n    drawRectanglePattern()\n        user will input center possition\n        will go to center postion\n        user will input the number of rectangles\n        number degree between starting corners will be determined by 360 / number of rectangles\n        user will input offset length\n        pickup pen\n        go to cos*x, sin*y\n        putdown pen\n        user will input rotation of starti\n        user will input the width of the rectangle\n        user will input the length\n        user will input the number of rectangles\n\n\nTesting", "System Req\n\n\n\n\nSystem Analysis\n\n\n\n\nSystem Des   \n\n    user will input information \nthe pattern module will have several function\n        setup() -\nign will make turtle draw quickly\n                    make turtle have a window of 1000 * 800\n        reset() - turtle will erase everything\n        drawRectenglePattern() - will call draw rectangle\n                                center position is x, y of circular pattern drawn\n                                Offset- distance from center to starting corner\n\n        drawRectangle() - draw a single rectangle\n        drawCirclePatten() -\n        drawSuperPattern() - randomly draw rectangle and circle patterns based on random values\n        drawRandomColor()- do not use any perameters and make turtle draw in 1/4 random colors\n        done()-called when user quits, keeps window open\n\n    drawRectanglePattern()\n        user will input center possition\n        will go to center postion\n        user will input the number of rectangles\n        number degree between starting corners will be determined by 360 / number of rectangles\n        user will input offset length\n        pickup pen\n        go to cos*x, sin*y\n        putdown pen\n        user will input rotation of startig\n        user will input the width of the rectangle\n        user will input the length\n        user will input the number of rectangles\n\n\nTesting", "System Req\n\n\n\n\nSystem Analysis\n\n\n\n\nSystem Des   \n\n    user will input information \nthe pattern module will have several function\n        setup() -\nign will make turtle draw quickly\n                    make turtle have a window of 1000 * 800\n        reset() - turtle will erase everything\n        drawRectenglePattern() - will call draw rectangle\n                                center position is x, y of circular pattern drawn\n                                Offset- distance from center to starting corner\n\n        drawRectangle() - draw a single rectangle\n        drawCirclePatten() -\n        drawSuperPattern() - randomly draw rectangle and circle patterns based on random values\n        drawRandomColor()- do not use any perameters and make turtle draw in 1/4 random colors\n        done()-called when user quits, keeps window open\n\n    drawRectanglePattern()\n        user will input center possition\n        will go to center postion\n        user will input the number of rectangles\n        number degree between starting corners will be determined by 360 / number of rectangles\n        user will input offset length\n        pickup pen\n        go to cos*x, sin*y\n        putdown pen\n        user will input rotation of startign\n        user will input the width of the rectangle\n        user will input the length\n        user will input the number of rectangles\n\n\nTesting", "System Req\n\n\n\n\nSystem Analysis\n\n\n\n\nSystem Des   \n\n    user will input information \nthe pattern module will have several function\n        setup() -\nign will make turtle draw quickly\n                    make turtle have a window of 1000 * 800\n        reset() - turtle will erase everything\n        drawRectenglePattern() - will call draw rectangle\n                                center position is x, y of circular pattern drawn\n                                Offset- distance from center to starting corner\n\n        drawRectangle() - draw a single rectangle\n        drawCirclePatten() -\n        drawSuperPattern() - randomly draw rectangle and circle patterns based on random values\n        drawRandomColor()- do not use any perameters and make turtle draw in 1/4 random colors\n        done()-called when user quits, keeps window open\n\n    drawRectanglePattern()\n        user will input center possition\n        will go to center postion\n        user will input the number of rectangles\n        number degree between starting corners will be determined by 360 / number of rectangles\n        user will input offset length\n        pickup pen\n        go to cos*x, sin*y\n        putdown pen\n        user will input rotation of startign c\n        user will input the width of the rectangle\n        user will input the length\n        user will input the number of rectangles\n\n\nTesting", "System Req\n\n\n\n\nSystem Analysis\n\n\n\n\nSystem Des   \n\n    user will input information \nthe pattern module will have several function\n        setup() -\nign will make turtle draw quickly\n                    make turtle have a window of 1000 * 800\n        reset() - turtle will erase everything\n        drawRectenglePattern() - will call draw rectangle\n                                center position is x, y of circular pattern drawn\n                                Offset- distance from center to starting corner\n\n        drawRectangle() - draw a single rectangle\n        drawCirclePatten() -\n        drawSuperPattern() - randomly draw rectangle and circle patterns based on random values\n        drawRandomColor()- do not use any perameters and make turtle draw in 1/4 random colors\n        done()-called when user quits, keeps window open\n\n    drawRectanglePattern()\n        user will input center possition\n        will go to center postion\n        user will input the number of rectangles\n        number degree between starting corners will be determined by 360 / number of rectangles\n        user will input offset length\n        pickup pen\n        go to cos*x, sin*y\n        putdown pen\n        user will input rotation of startign \n        user will input the width of the rectangle\n        user will input the length\n        user will input the number of rectangles\n\n\nTesting", "System Req\n\n\n\n\nSystem Analysis\n\n\n\n\nSystem Des   \n\n    user will input information \nthe pattern module will have several function\n        setup() -\nign will make turtle draw quickly\n                    make turtle have a window of 1000 * 800\n        reset() - turtle will erase everything\n        drawRectenglePattern() - will call draw rectangle\n                                center position is x, y of circular pattern drawn\n                                Offset- distance from center to starting corner\n\n        drawRectangle() - draw a single rectangle\n        drawCirclePatten() -\n        drawSuperPattern() - randomly draw rectangle and circle patterns based on random values\n        drawRandomColor()- do not use any perameters and make turtle draw in 1/4 random colors\n        done()-called when user quits, keeps window open\n\n    drawRectanglePattern()\n        user will input center possition\n        will go to center postion\n        user will input the number of rectangles\n        number degree between starting corners will be determined by 360 / number of rectangles\n        user will input offset length\n        pickup pen\n        go to cos*x, sin*y\n        putdown pen\n        user will input rotation of startign\n        user will input the width of the rectangle\n        user will input the length\n        user will input the number of rectangles\n\n\nTesting", "System Req\n\n\n\n\nSystem Analysis\n\n\n\n\nSystem Des   \n\n    user will input information \nthe pattern module will have several function\n        setup() -\nign will make turtle draw quickly\n                    make turtle have a window of 1000 * 800\n        reset() - turtle will erase everything\n        drawRectenglePattern() - will call draw rectangle\n                                center position is x, y of circular pattern drawn\n                                Offset- distance from center to starting corner\n\n        drawRectangle() - draw a single rectangle\n        drawCirclePatten() -\n        drawSuperPattern() - randomly draw rectangle and circle patterns based on random values\n        drawRandomColor()- do not use any perameters and make turtle draw in 1/4 random colors\n        done()-called when user quits, keeps window open\n\n    drawRectanglePattern()\n        user will input center possition\n        will go to center postion\n        user will input the number of rectangles\n        number degree between starting corners will be determined by 360 / number of rectangles\n        user will input offset length\n        pickup pen\n        go to cos*x, sin*y\n        putdown pen\n        user will input rotation of startig\n        user will input the width of the rectangle\n        user will input the length\n        user will input the number of rectangles\n\n\nTesting", "System Req\n\n\n\n\nSystem Analysis\n\n\n\n\nSystem Des   \n\n    user will input information \nthe pattern module will have several function\n        setup() -\nign will make turtle draw quickly\n                    make turtle have a window of 1000 * 800\n        reset() - turtle will erase everything\n        drawRectenglePattern() - will call draw rectangle\n                                center position is x, y of circular pattern drawn\n                                Offset- distance from center to starting corner\n\n        drawRectangle() - draw a single rectangle\n        drawCirclePatten() -\n        drawSuperPattern() - randomly draw rectangle and circle patterns based on random values\n        drawRandomColor()- do not use any perameters and make turtle draw in 1/4 random colors\n        done()-called when user quits, keeps window open\n\n    drawRectanglePattern()\n        user will input center possition\n        will go to center postion\n        user will input the number of rectangles\n        number degree between starting corners will be determined by 360 / number of rectangles\n        user will input offset length\n        pickup pen\n        go to cos*x, sin*y\n        putdown pen\n        user will input rotation of starti\n        user will input the width of the rectangle\n        user will input the length\n        user will input the number of rectangles\n\n\nTesting", "System Req\n\n\n\n\nSystem Analysis\n\n\n\n\nSystem Des   \n\n    user will input information \nthe pattern module will have several function\n        setup() -\nign will make turtle draw quickly\n                    make turtle have a window of 1000 * 800\n        reset() - turtle will erase everything\n        drawRectenglePattern() - will call draw rectangle\n                                center position is x, y of circular pattern drawn\n                                Offset- distance from center to starting corner\n\n        drawRectangle() - draw a single rectangle\n        drawCirclePatten() -\n        drawSuperPattern() - randomly draw rectangle and circle patterns based on random values\n        drawRandomColor()- do not use any perameters and make turtle draw in 1/4 random colors\n        done()-called when user quits, keeps window open\n\n    drawRectanglePattern()\n        user will input center possition\n        will go to center postion\n        user will input the number of rectangles\n        number degree between starting corners will be determined by 360 / number of rectangles\n        user will input offset length\n        pickup pen\n        go to cos*x, sin*y\n        putdown pen\n        user will input rotation of startin\n        user will input the width of the rectangle\n        user will input the length\n        user will input the number of rectangles\n\n\nTesting", "System Req\n\n\n\n\nSystem Analysis\n\n\n\n\nSystem Des   \n\n    user will input information \nthe pattern module will have several function\n        setup() -\nign will make turtle draw quickly\n                    make turtle have a window of 1000 * 800\n        reset() - turtle will erase everything\n        drawRectenglePattern() - will call draw rectangle\n                                center position is x, y of circular pattern drawn\n                                Offset- distance from center to starting corner\n\n        drawRectangle() - draw a single rectangle\n        drawCirclePatten() -\n        drawSuperPattern() - randomly draw rectangle and circle patterns based on random values\n        drawRandomColor()- do not use any perameters and make turtle draw in 1/4 random colors\n        done()-called when user quits, keeps window open\n\n    drawRectanglePattern()\n        user will input center possition\n        will go to center postion\n        user will input the number of rectangles\n        number degree between starting corners will be determined by 360 / number of rectangles\n        user will input offset length\n        pickup pen\n        go to cos*x, sin*y\n        putdown pen\n        user will input rotation of starting\n        user will input the width of the rectangle\n        user will input the length\n        user will input the number of rectangles\n\n\nTesting", "System Req\n\n\n\n\nSystem Analysis\n\n\n\n\nSystem Des   \n\n    user will input information \nthe pattern module will have several function\n        setup() -\nign will make turtle draw quickly\n                    make turtle have a window of 1000 * 800\n        reset() - turtle will erase everything\n        drawRectenglePattern() - will call draw rectangle\n                                center position is x, y of circular pattern drawn\n                                Offset- distance from center to starting corner\n\n        drawRectangle() - draw a single rectangle\n        drawCirclePatten() -\n        drawSuperPattern() - randomly draw rectangle and circle patterns based on random values\n        drawRandomColor()- do not use any perameters and make turtle draw in 1/4 random colors\n        done()-called when user quits, keeps window open\n\n    drawRectanglePattern()\n        user will input center possition\n        will go to center postion\n        user will input the number of rectangles\n        number degree between starting corners will be determined by 360 / number of rectangles\n        user will input offset length\n        pickup pen\n        go to cos*x, sin*y\n        putdown pen\n        user will input rotation of starting c\n        user will input the width of the rectangle\n        user will input the length\n        user will input the number of rectangles\n\n\nTesting", "System Req\n\n\n\n\nSystem Analysis\n\n\n\n\nSystem Des   \n\n    user will input information \nthe pattern module will have several function\n        setup() -\nign will make turtle draw quickly\n                    make turtle have a window of 1000 * 800\n        reset() - turtle will erase everything\n        drawRectenglePattern() - will call draw rectangle\n                                center position is x, y of circular pattern drawn\n                                Offset- distance from center to starting corner\n\n        drawRectangle() - draw a single rectangle\n        drawCirclePatten() -\n        drawSuperPattern() - randomly draw rectangle and circle patterns based on random values\n        drawRandomColor()- do not use any perameters and make turtle draw in 1/4 random colors\n        done()-called when user quits, keeps window open\n\n    drawRectanglePattern()\n        user will input center possition\n        will go to center postion\n        user will input the number of rectangles\n        number degree between starting corners will be determined by 360 / number of rectangles\n        user will input offset length\n        pickup pen\n        go to cos*x, sin*y\n        putdown pen\n        user will input rotation of starting co\n        user will input the width of the rectangle\n        user will input the length\n        user will input the number of rectangles\n\n\nTesting", "System Req\n\n\n\n\nSystem Analysis\n\n\n\n\nSystem Des   \n\n    user will input information \nthe pattern module will have several function\n        setup() -\nign will make turtle draw quickly\n                    make turtle have a window of 1000 * 800\n        reset() - turtle will erase everything\n        drawRectenglePattern() - will call draw rectangle\n                                center position is x, y of circular pattern drawn\n                                Offset- distance from center to starting corner\n\n        drawRectangle() - draw a single rectangle\n        drawCirclePatten() -\n        drawSuperPattern() - randomly draw rectangle and circle patterns based on random values\n        drawRandomColor()- do not use any perameters and make turtle draw in 1/4 random colors\n        done()-called when user quits, keeps window open\n\n    drawRectanglePattern()\n        user will input center possition\n        will go to center postion\n        user will input the number of rectangles\n        number degree between starting corners will be determined by 360 / number of rectangles\n        user will input offset length\n        pickup pen\n        go to cos*x, sin*y\n        putdown pen\n        user will input rotation of starting cor\n        user will input the width of the rectangle\n        user will input the length\n        user will input the number of rectangles\n\n\nTesting", "System Req\n\n\n\n\nSystem Analysis\n\n\n\n\nSystem Des   \n\n    user will input information \nthe pattern module will have several function\n        setup() -\nign will make turtle draw quickly\n                    make turtle have a window of 1000 * 800\n        reset() - turtle will erase everything\n        drawRectenglePattern() - will call draw rectangle\n                                center position is x, y of circular pattern drawn\n                                Offset- distance from center to starting corner\n\n        drawRectangle() - draw a single rectangle\n        drawCirclePatten() -\n        drawSuperPattern() - randomly draw rectangle and circle patterns based on random values\n        drawRandomColor()- do not use any perameters and make turtle draw in 1/4 random colors\n        done()-called when user quits, keeps window open\n\n    drawRectanglePattern()\n        user will input center possition\n        will go to center postion\n        user will input the number of rectangles\n        number degree between starting corners will be determined by 360 / number of rectangles\n        user will input offset length\n        pickup pen\n        go to cos*x, sin*y\n        putdown pen\n        user will input rotation of starting corn\n        user will input the width of the rectangle\n        user will input the length\n        user will input the number of rectangles\n\n\nTesting", "System Req\n\n\n\n\nSystem Analysis\n\n\n\n\nSystem Des   \n\n    user will input information \nthe pattern module will have several function\n        setup() -\nign will make turtle draw quickly\n                    make turtle have a window of 1000 * 800\n        reset() - turtle will erase everything\n        drawRectenglePattern() - will call draw rectangle\n                                center position is x, y of circular pattern drawn\n                                Offset- distance from center to starting corner\n\n        drawRectangle() - draw a single rectangle\n        drawCirclePatten() -\n        drawSuperPattern() - randomly draw rectangle and circle patterns based on random values\n        drawRandomColor()- do not use any perameters and make turtle draw in 1/4 random colors\n        done()-called when user quits, keeps window open\n\n    drawRectanglePattern()\n        user will input center possition\n        will go to center postion\n        user will input the number of rectangles\n        number degree between starting corners will be determined by 360 / number of rectangles\n        user will input offset length\n        pickup pen\n        go to cos*x, sin*y\n        putdown pen\n        user will input rotation of starting corni\n        user will input the width of the rectangle\n        user will input the length\n        user will input the number of rectangles\n\n\nTesting", "System Req\n\n\n\n\nSystem Analysis\n\n\n\n\nSystem Des   \n\n    user will input information \nthe pattern module will have several function\n        setup() -\nign will make turtle draw quickly\n                    make turtle have a window of 1000 * 800\n        reset() - turtle will erase everything\n        drawRectenglePattern() - will call draw rectangle\n                                center position is x, y of circular pattern drawn\n                                Offset- distance from center to starting corner\n\n        drawRectangle() - draw a single rectangle\n        drawCirclePatten() -\n        drawSuperPattern() - randomly draw rectangle and circle patterns based on random values\n        drawRandomColor()- do not use any perameters and make turtle draw in 1/4 random colors\n        done()-called when user quits, keeps window open\n\n    drawRectanglePattern()\n        user will input center possition\n        will go to center postion\n        user will input the number of rectangles\n        number degree between starting corners will be determined by 360 / number of rectangles\n        user will input offset length\n        pickup pen\n        go to cos*x, sin*y\n        putdown pen\n        user will input rotation of starting corn\n        user will input the width of the rectangle\n        user will input the length\n        user will input the number of rectangles\n\n\nTesting", "System Req\n\n\n\n\nSystem Analysis\n\n\n\n\nSystem Des   \n\n    user will input information \nthe pattern module will have several function\n        setup() -\nign will make turtle draw quickly\n                    make turtle have a window of 1000 * 800\n        reset() - turtle will erase everything\n        drawRectenglePattern() - will call draw rectangle\n                                center position is x, y of circular pattern drawn\n                                Offset- distance from center to starting corner\n\n        drawRectangle() - draw a single rectangle\n        drawCirclePatten() -\n        drawSuperPattern() - randomly draw rectangle and circle patterns based on random values\n        drawRandomColor()- do not use any perameters and make turtle draw in 1/4 random colors\n        done()-called when user quits, keeps window open\n\n    drawRectanglePattern()\n        user will input center possition\n        will go to center postion\n        user will input the number of rectangles\n        number degree between starting corners will be determined by 360 / number of rectangles\n        user will input offset length\n        pickup pen\n        go to cos*x, sin*y\n        putdown pen\n        user will input rotation of starting corne\n        user will input the width of the rectangle\n        user will input the length\n        user will input the number of rectangles\n\n\nTesting", "System Req\n\n\n\n\nSystem Analysis\n\n\n\n\nSystem Des   \n\n    user will input information \nthe pattern module will have several function\n        setup() -\nign will make turtle draw quickly\n                    make turtle have a window of 1000 * 800\n        reset() - turtle will erase everything\n        drawRectenglePattern() - will call draw rectangle\n                                center position is x, y of circular pattern drawn\n                                Offset- distance from center to starting corner\n\n        drawRectangle() - draw a single rectangle\n        drawCirclePatten() -\n        drawSuperPattern() - randomly draw rectangle and circle patterns based on random values\n        drawRandomColor()- do not use any perameters and make turtle draw in 1/4 random colors\n        done()-called when user quits, keeps window open\n\n    drawRectanglePattern()\n        user will input center possition\n        will go to center postion\n        user will input the number of rectangles\n        number degree between starting corners will be determined by 360 / number of rectangles\n        user will input offset length\n        pickup pen\n        go to cos*x, sin*y\n        putdown pen\n        user will input rotation of starting corner\n        user will input the width of the rectangle\n        user will input the length\n        user will input the number of rectangles\n\n\nTesting", "System Req\n\n\n\n\nSystem Analysis\n\n\n\n\nSystem Des   \n\n    user will input information \nthe pattern module will have several function\n        setup() -\nign will make turtle draw quickly\n                    make turtle have a window of 1000 * 800\n        reset() - turtle will erase everything\n        drawRectenglePattern() - will call draw rectangle\n                                center position is x, y of circular pattern drawn\n                                Offset- distance from center to starting corner\n\n        drawRectangle() - draw a single rectangle\n        drawCirclePatten() -\n        drawSuperPattern() - randomly draw rectangle and circle patterns based on random values\n        drawRandomColor()- do not use any perameters and make turtle draw in 1/4 random colors\n        done()-called when user quits, keeps window open\n\n    drawRectanglePattern()\n        user will input center possition\n        will go to center postion\n        user will input the number of rectangles\n        number degree between starting corners will be determined by 360 / number of rectangles\n        user will input offset length\n        pickup pen\n        go to cos*x, sin*y\n        putdown pen\n        user will input rotation of starting corner\n        user will input the width of the rectangle\n        user will input the length\n        user will input the number of rectangles\n\n\nTesting\n", "System Req\n\n\n\n\nSystem Analysis\n\n\n\n\nSystem Des   \n\n    user will input information \nthe pattern module will have several function\n        setup() -\nign will make turtle draw quickly\n                    make turtle have a window of 1000 * 800\n        reset() - turtle will erase everything\n        drawRectenglePattern() - will call draw rectangle\n                                center position is x, y of circular pattern drawn\n                                Offset- distance from center to starting corner\n\n        drawRectangle() - draw a single rectangle\n        drawCirclePatten() -\n        drawSuperPattern() - randomly draw rectangle and circle patterns based on random values\n        drawRandomColor()- do not use any perameters and make turtle draw in 1/4 random colors\n        done()-called when user quits, keeps window open\n\n    drawRectanglePattern()\n        user will input center possition\n        will go to center postion\n        user will input the number of rectangles\n        number degree between starting corners will be determined by 360 / number of rectangles\n        user will input offset length\n        pickup pen\n        go to cos*x, sin*y\n        putdown pen\n        user will input rotation of starting corner\n        user will input the width of the rectangle\n        user will input the length\n        user will input the number open will orient itself to go said distance\n        f rectangles\n\n\nTesting\n", "System Req\n\n\n\n\nSystem Analysis\n\n\n\n\nSystem Des   \n\n    user will input information \nthe pattern module will have several function\n        setup() -\nign will make turtle draw quickly\n                    make turtle have a window of 1000 * 800\n        reset() - turtle will erase everything\n        drawRectenglePattern() - will call draw rectangle\n                                center position is x, y of circular pattern drawn\n                                Offset- distance from center to starting corner\n\n        drawRectangle() - draw a single rectangle\n        drawCirclePatten() -\n        drawSuperPattern() - randomly draw rectangle and circle patterns based on random values\n        drawRandomColor()- do not use any perameters and make turtle draw in 1/4 random colors\n        done()-called when user quits, keeps window open\n\n    drawRectanglePattern()\n        user will input center possition\n        will go to center postion\n        user will input the number of rectangles\n        number degree between starting corners will be determined by 360 / number of rectangles\n        user will input offset length\n        pickup pen\n        go to cos*x, sin*y\n        putdown pen\n        user will input rotation of starting corner\n        user will input the width of the rectangle\n         user will input the length\n        user will input the number open will orient itself to go said distance\n        f rectangles\n\n\nTesting\n", "System Req\n\n\n\n\nSystem Analysis\n\n\n\n\nSystem Des   \n\n    user will input information \nthe pattern module will have several function\n        setup() -\nign will make turtle draw quickly\n                    make turtle have a window of 1000 * 800\n        reset() - turtle will erase everything\n        drawRectenglePattern() - will call draw rectangle\n                                center position is x, y of circular pattern drawn\n                                Offset- distance from center to starting corner\n\n        drawRectangle() - draw a single rectangle\n        drawCirclePatten() -\n        drawSuperPattern() - randomly draw rectangle and circle patterns based on random values\n        drawRandomColor()- do not use any perameters and make turtle draw in 1/4 random colors\n        done()-called when user quits, keeps window open\n\n    drawRectanglePattern()\n        user will input center possition\n        will go to center postion\n        user will input the number of rectangles\n        number degree between starting corners wi        for statement with number of rectangles being the range\nll be determined by 360 / number of rectangles\n        user will input offset length\n        pickup pen\n        go to cos*x, sin*y\n        putdown pen\n        user will input rotation of starting corner\n        user will input the width of the rectangle\n         user will input the length\n        user will input the number open will orient itself to go said distance\n        f rectangles\n\n\nTesting\n", "System Req\n\n\n\n\nSystem Analysis\n\n\n\n\nSystem Des   \n\n    user will input information \nthe pattern module will have several function\n        setup() -\nign will make turtle draw quickly\n                    make turtle have a window of 1000 * 800\n        reset() - turtle will erase everything\n        drawRectenglePattern() - will call draw rectangle\n                                center position is x, y of circular pattern drawn\n                                Offset- distance from center to starting corner\n\n        drawRectangle() - draw a single rectangle\n        drawCirclePatten() -\n        drawSuperPattern() - randomly draw rectangle and circle patterns based on random values\n        drawRandomColor()- do not use any perameters and make turtle draw in 1/4 random colors\n        done()-called when user quits, keeps window open\n\n    drawRectanglePattern()\n        user will input center possition\n        will go to center postion\n        user will input the number of rectangles\n        number degree between starting corners wi        for statement with number of rectangles being the range\nll be determined by 360 / number of rectangles\n        user will input offset length\n        pickup pen\n        go to cos*x, sin*y\n        putdown pen\n        user will input rotation of starting corner\n        user will input the width of the rectangle\n         user will input the length\n        user will input the number open will orient itself to go said distance\n        f rectangles\n\n\nTesting\n", "System Req\n\n\n\n\nSystem Analysis\n\n\n\n\nSystem Des   \n\n    user will input information \nthe pattern module will have several function\n        setup() -\nign will make turtle draw quickly\n                    make turtle have a window of 1000 * 800\n        reset() - turtle will erase everything\n        drawRectenglePattern() - will call draw rectangle\n                                center position is x, y of circular pattern drawn\n                                Offset- distance from center to starting corner\n\n        drawRectangle() - draw a single rectangle\n        drawCirclePatten() -\n        drawSuperPattern() - randomly draw rectangle and circle patterns based on random values\n        drawRandomColor()- do not use any perameters and make turtle draw in 1/4 random colors\n        done()-called when user quits, keeps window open\n\n    drawRectanglePattern()\n        numbers 1 - 4 will be assigned to colors\n        user will input center possition\n        will go to center postion\n        user will input the number of rectangles\n        number degree between starting corners wi        for statement with number of rectangles being the range\nll be determined by 360 / number of rectangles\n        user will input offset length\n        pickup pen\n        go to cos*x, sin*y\n        putdown pen\n        user will input rotation of starting corner\n        user will input the width of the rectangle\n         user will input the length\n        user will input the number open will orient itself to go said distance\n        f rectangles\n\n\nTesting\n", "System Req\n\n\n\n\nSystem Analysis\n\n\n\n\nSystem Des   \n\n    import random\n    user will input information \nthe pattern module will have several function\n        setup() -\nign will make turtle draw quickly\n                    make turtle have a window of 1000 * 800\n        reset() - turtle will erase everything\n        drawRectenglePattern() - will call draw rectangle\n                                center position is x, y of circular pattern drawn\n                                Offset- distance from center to starting corner\n\n        drawRectangle() - draw a single rectangle\n        drawCirclePatten() -\n        drawSuperPattern() - randomly draw rectangle and circle patterns based on random values\n        drawRandomColor()- do not use any perameters and make turtle draw in 1/4 random colors\n        done()-called when user quits, keeps window open\n\n    drawRectanglePattern()\n        numbers 1 - 4 will be assigned to colors\n        user will input center possition\n        will go to center postion\n        user will input the number of rectangles\n        number degree between starting corners wi        for statement with number of rectangles being the range\nll be determined by 360 / number of rectangles\n        user will input offset length\n        pickup pen\n        go to cos*x, sin*y\n        putdown pen\n        user will input rotation of starting corner\n        user will input the width of the rectangle\n         user will input the length\n        user will input the number open will orient itself to go said distance\n        f rectangles\n\n\nTesting\n", "System Req\n\n\n\n\nSystem Analysis\n\n\n\n\nSystem Des   \n\n    import random\n    user will input information \nthe pattern module will have several function\n        setup() -\nign will make turtle draw quickly\n                    make turtle have a window of 1000 * 800\n        reset() - turtle will erase everything\n        drawRectenglePattern() - will call draw rectangle\n                                center position is x, y of circular pattern drawn\n                                Offset- distance from center to starting corner\n\n        drawRectangle() - draw a single rectangle\n        drawCirclePatten() -\n        drawSuperPattern() - randomly draw rectangle and circle patterns based on random values\n        drawRandomColor()- do not use any perameters and make turtle draw in 1/4 random colors\n        done()-called when user quits, keeps window open\n\n    drawRectanglePattern()\n        numbers 1 - 4 will be assigned to colors\n        user will input center possition\n        will go to center postion\n        user will input the number of rectangles\n        number degree between starting corners wi        for statement with number of rectangles being the range\nll be determined by 360 / number of rectangles\n        user will input offset length\n        pickup pen\n        go to cos*x, sin*y\n        putdown pen\n        user will input rotation of starting corner\n        user will input the width of the rectangle\n         user will input the length\n        user will input the number open will orient itself to go said distance\n        f rectangles\n\n\nTesting\n", "System Req\n\n\n\n\nSystem Analysis\n\n\n\n\nSystem Des   \n\n    import random\n    user will input information \nthe pattern module will have several function\n        setup() -\nign will make turtle draw quickly\n                    make turtle have a window of 1000 * 800\n        reset() - turtle will erase everything\n        drawRectenglePattern() - will call draw rectangle\n                                center position is x, y of circular pattern drawn\n                                Offset- distance from center to starting corner\n\n        drawRectangle() - draw a single rectangle\n        drawCirclePatten() -\n        drawSuperPattern() - randomly draw rectangle and circle patterns based on random values\n        drawRandomColor()- do not use any perameters and make turtle draw in 1/4 random colors\n        done()-called when user quits, keeps window open\n\n    drawRectanglePattern()\n        numbers 1 - 4 will be assigned to colors\n\n        user will input center possition\n        will go to center postion\n        user will input the number of rectangles\n        number degree between starting corners wi        for statement with number of rectangles being the range\nll be determined by 360 / number of rectangles\n        user will input offset length\n        pickup pen\n        go to cos*x, sin*y\n        putdown pen\n        user will input rotation of starting corner\n        user will input the width of the rectangle\n         user will input the length\n        user will input the number open will orient itself to go said distance\n        f rectangles\n\n\nTesting\n", "System Req\n\n\n\n\nSystem Analysis\n\n\n\n\nSystem Des   \n\n    import random\n    user will input information \nthe pattern module will have several function\n        setup() -\nign will make turtle draw quickly\n                    make turtle have a window of 1000 * 800\n        reset() - turtle will erase everything\n        drawRectenglePattern() - will call draw rectangle\n                                center position is x, y of circular pattern drawn\n                                Offset- distance from center to starting corner\n\n        drawRectangle() - draw a single rectangle\n        drawCirclePatten() -\n        drawSuperPattern() - randomly draw rectangle and circle patterns based on random values\n        drawRandomColor()- do not use any perameters and make turtle draw in 1/4 random colors\n        done()-called when user quits, keeps window open\n\n    drawRectanglePattern()\n        numbers 1 - 4 will be assigned to colors\n\n        user will input center possition\n        will go to center position\n        user will input the number of rectangles\n        number degree between starting corners wi        for statement with number of rectangles being the range\nll be determined by 360 / number of rectangles\n        user will input offset length\n        pickup pen\n        go to cos*x, sin*y\n        putdown pen\n        user will input rotation of starting corner\n        user will input the width of the rectangle\n         user will input the length\n        user will input the number open will orient itself to go said distance\n        f rectangles\n\n\nTesting\n", "System Req\n\n\n\n\nSystem Analysis\n\n\n\n\nSystem Des   \n\n    import random\n    user will input information \nthe pattern module will have several function\n        setup() -\nign will make turtle draw quickly\n                    make turtle have a window of 1000 * 800\n        reset() - turtle will erase everything\n        drawRectenglePattern() - will call draw rectangle\n                                center position is x, y of circular pattern drawn\n                                Offset- distance from center to starting corner\n\n        drawRectangle() - draw a single rectangle\n        drawCirclePatten() -\n        drawSuperPattern() - randomly draw rectangle and circle patterns based on random values\n        drawRandomColor()- do not use any perameters and make turtle draw in 1/4 random colors\n        done()-called when user quits, keeps window open\n\n    drawRectanglePattern()\n        numbers 1 - 4 will be assigned to colors\n\n        user will input center possition\n        will go to center position\n        user will input the number of rectangles\n        number degree between starting corners wi        for statement with number of rectangles being the range\nll be determined by 360 / number of rectangles\n        user will input offset length\n        pickup pen\n        go to cos*x, sin*y\n        putdown pen\n        user will input rotation of starting corner\n        user will input the width of the rectangle\n         user will input the length\n        user wil itself to go said distance\n        f rectangles\n\n\nTesting\n", "System Req\n\n\n\n\nSystem Analysis\n\n\n\n\nSystem Des   \n\n    import random\n    user will input information \nthe pattern module will have several function\n        setup() -\nign will make turtle draw quickly\n                    make turtle have a window of 1000 * 800\n        reset() - turtle will erase everything\n        drawRectenglePattern() - will call draw rectangle\n                                center position is x, y of circular pattern drawn\n                                Offset- distance from center to starting corner\n\n        drawRectangle() - draw a single rectangle\n        drawCirclePatten() -\n        drawSuperPattern() - randomly draw rectangle and circle patterns based on random values\n        drawRandomColor()- do not use any perameters and make turtle draw in 1/4 random colors\n        done()-called when user quits, keeps window open\n\n    drawRectanglePattern()\n        numbers 1 - 4 will be assigned to colors\n\n        user will input center possition\n        will go to center position\n        user will input the number of rectangles\n        number degree between starting corners wi        for statement with number of rectangles being the range\nll be determined by 360 / number of rectangles\n        user will input offset length\n        pickup pen\n        go to cos*x, sin*y\n        putdown pen\n        user will input rotation of starting corner\n        user will input the width of the rectangle\n         user will input the length\n        user wil        pen will go forward length of rectangle and turn right 90\n        user will input the length\n        pen will travel length\n        pen will turn right 90\n         itself to go said distance\n        f rectangles\n\n\nTesting\n", "System Req\n\n\n\n\nSystem Analysis\n\n\n\n\nSystem Des   \n\n    import random\n    user will input information \nthe pattern module will have several function\n        setup() -\nign will make turtle draw quickly\n                    make turtle have a window of 1000 * 800\n        reset() - turtle will erase everything\n        drawRectenglePattern() - will call draw rectangle\n                                center position is x, y of circular pattern drawn\n                                Offset- distance from center to starting corner\n\n        drawRectangle() - draw a single rectangle\n        drawCirclePatten() -\n        drawSuperPattern() - randomly draw rectangle and circle patterns based on random values\n        drawRandomColor()- do not use any perameters and make turtle draw in 1/4 random colors\n        done()-called when user quits, keeps window open\n\n    drawRectanglePattern()\n        numbers 1 - 4 will be assigned to colors\n\n        user will input center possition\n        will go to center position\n        user will input the number of rectangles\n        number degree between starting corners wi        for statement with number of rectangles being the range\nll be determined by 360 / number of rectangles\n        user will input offset length\n        pickup pen\n        go to cos*x, sin*y\n        putdown pen\n        user will input rotation of starting corner\n        user will input the width of the rectangle\n         user will input the length\n        user wil        pen will go forward length of rectangle and turn right 90\n        user will input the length\n        pen will travel length\n        pen will turn right 90\n itself to go said distance\n        f rectangles\n\n\nTesting\n"]