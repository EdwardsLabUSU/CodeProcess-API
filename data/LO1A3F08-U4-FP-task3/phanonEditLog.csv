"e","# Phil Fernberg
# CS 1400 - L01
# Assignment ??","","0","1612852658164","task1.py",""
"e","
","","47","1612852658794","task1.py",""
"e","# Phil Fernberg
# CS 1400 - L01
# Assignment ??","","0","1612852669220","task2.py",""
"e","
","","47","1612852669300","task2.py",""
"e","# Phil Fernberg
# CS 1400 - L01
# Assignment ??","","0","1612852683499","task3.py",""
"e","
","","47","1612852683576","task3.py",""
"e","# Phil Fernberg
# CS 1400 - L01
# Assignment ??","","0","1612852704269","task4.py",""
"e","
","","47","1612852704352","task4.py",""
"a","Paste","","","1612852733587","task1.py",""
"p","# Phil Fernberg
# CS 1400 - L01
# Assignment 3 - Task 1

import random

# Generate random number (1-10)
num = random.randint(1, 10)

# Welcome message""
print(""Welcome to the Guessing Game. \nThe Computer has picked a number from 1 - 10. Try to match it."")

# Get user input
guess = eval(input(""What number do you choose (1-10): ""))

# compare input to actual answer and generate response
msg = ""\nYou picked "" + str(guess) + "", and the actual number was "" + str(num) + "". \n""
if guess == num:
    msg += ""Honored to play with you, Master.""
elif guess == (num - 1) or guess == (num + 1):
    msg += ""You are a worthy opponent, Knight.""
elif guess == (num - 2) or guess == (num + 2):
    msg += ""You have much to learn, Padawan.""
elif guess == (num - 3) or guess == (num + 3):
    msg += ""Youngling, your time will come.""
elif guess < (num - 3) or guess > (num + 3):
    msg += ""Keep working hard in the Service Corps. Youngling, your time will come""

# Print result
print(msg)","","0","1612852733632","task1.py",""
"e","","??","45","1612852733681","task1.py",""
"e","3 - Task 1

import random

# Generate random number (1-10)
num = random.randint(1, 10)

# Welcome message""
print(""Welcome to the Guessing Game. \nThe Computer has picked a number from 1 - 10. Try to match it."")

# Get user input
guess = eval(input(""What number do you choose (1-10): ""))

# compare input to actual answer and generate response
msg = ""\nYou picked "" + str(guess) + "", and the actual number was "" + str(num) + "". \n""
if guess == num:
    msg += ""Honored to play with you, Master.""
elif guess == (num - 1) or guess == (num + 1):
    msg += ""You are a worthy opponent, Knight.""
elif guess == (num - 2) or guess == (num + 2):
    msg += ""You have much to learn, Padawan.""
elif guess == (num - 3) or guess == (num + 3):
    msg += ""Youngling, your time will come.""
elif guess < (num - 3) or guess > (num + 3):
    msg += ""Keep working hard in the Service Corps. Youngling, your time will come""

# Print result
print(msg)","","45","1612852733682","task1.py",""
"a","Close Active Editor","","","1612852736997","task1.py",""
"a","Paste","","","1612852760930","task2.py",""
"p","# Phil Fernberg
# CS 1400 - L01
# Assignment 3 - Task 2


# Welcome message
print(""Welcome to the Social Situation Analyzer System"")

# Get user 1 inputs (name, pos, rad)
print(""Person One"")
name1 = str(input(""Enter your name: ""))
xpos1 = eval(input(""Enter your x position: ""))
ypos1 = eval(input(""Enter your y position: ""))
rad1 = eval(input(""Enter your personal space radius: ""))

# Get user 2 inputs (name, pos, rad)
print(""Person Two"")
name2 = str(input(""Enter your name: ""))
xpos2 = eval(input(""Enter your x position: ""))
ypos2 = eval(input(""Enter your y position: ""))
rad2 = eval(input(""Enter your personal space radius: ""))

dist = ((xpos1 - xpos2)**2 + (ypos1 - ypos2)**2)**0.5 

# Analyze person test
if dist < rad1 and dist < rad2:
    personTest = name1 + "" and "" + name2 + "" are in each other's personal space""
elif dist < rad1:
    personTest = name2 + "" is in "" + name1 + ""'s personal space""
elif dist < rad2:
    personTest = name1 + "" is in "" + name2 + ""'s personal space""
else:
    personTest = name1 + "" and "" + name2 + ""are not in each other's personal space""   

# Analyze space test
if (rad1 + rad2) < dist:
    spaceTest = name1 + "" and "" + name2 + ""'s personal spaces do not overlap""
elif rad1 > (rad2 + dist):
    spaceTest = name2 + ""'s personal space is inside of "" + name1 + ""'s personal space""
elif rad2 > (rad1 + dist):
    spaceTest = name1 + ""'s personal space is inside of "" + name2 + ""'s personal space""
else:
    spaceTest = name1 + ""and"" + name2 + ""'s personal spaces overlap""

# Print results
msg = ""Person Test: "" + personTest + ""\nSpace Test: "" + spaceTest
print(msg)","","0","1612852760932","task2.py",""
"e","","??","45","1612852760972","task2.py",""
"e","3 - Task 2


# Welcome message
print(""Welcome to the Social Situation Analyzer System"")

# Get user 1 inputs (name, pos, rad)
print(""Person One"")
name1 = str(input(""Enter your name: ""))
xpos1 = eval(input(""Enter your x position: ""))
ypos1 = eval(input(""Enter your y position: ""))
rad1 = eval(input(""Enter your personal space radius: ""))

# Get user 2 inputs (name, pos, rad)
print(""Person Two"")
name2 = str(input(""Enter your name: ""))
xpos2 = eval(input(""Enter your x position: ""))
ypos2 = eval(input(""Enter your y position: ""))
rad2 = eval(input(""Enter your personal space radius: ""))

dist = ((xpos1 - xpos2)**2 + (ypos1 - ypos2)**2)**0.5 

# Analyze person test
if dist < rad1 and dist < rad2:
    personTest = name1 + "" and "" + name2 + "" are in each other's personal space""
elif dist < rad1:
    personTest = name2 + "" is in "" + name1 + ""'s personal space""
elif dist < rad2:
    personTest = name1 + "" is in "" + name2 + ""'s personal space""
else:
    personTest = name1 + "" and "" + name2 + ""are not in each other's personal space""   

# Analyze space test
if (rad1 + rad2) < dist:
    spaceTest = name1 + "" and "" + name2 + ""'s personal spaces do not overlap""
elif rad1 > (rad2 + dist):
    spaceTest = name2 + ""'s personal space is inside of "" + name1 + ""'s personal space""
elif rad2 > (rad1 + dist):
    spaceTest = name1 + ""'s personal space is inside of "" + name2 + ""'s personal space""
else:
    spaceTest = name1 + ""and"" + name2 + ""'s personal spaces overlap""

# Print results
msg = ""Person Test: "" + personTest + ""\nSpace Test: "" + spaceTest
print(msg)","","45","1612852760973","task2.py",""
"a","Close Active Editor","","","1612852773585","task2.py",""
"a","EditorChange","","","1612852793278","task2.py",""
"a","Paste","","","1612852805841","task3.py",""
"p","# Phil Fernberg
# CS 1400 - L01
# Assignment 3 - Task 3 Fluky Numbers

# Import modules
from time import time
from random import randint, seed

# set variables
iterator = 0
startTime = time()
flukyCount = 0

# Begin for loop
for num in range(1, 10000):
    total = 0
    for i in range(1, num):
        iterator += 1
        if num % i == 0:
            seed(i)
            total += randint(1, num)
        if total > num:
            break
    if total == num:
        flukyCount += 1
        print(num)
    if flukyCount == 7:
        break

# Print results 
print(f""Total Time: {time()-startTime} seconds"")
print(f""Total Loops: {iterator}"")

","","0","1612852805842","task3.py",""
"e","","??","45","1612852805867","task3.py",""
"e","3 - Task 3 Fluky Numbers

# Import modules
from time import time
from random import randint, seed

# set variables
iterator = 0
startTime = time()
flukyCount = 0

# Begin for loop
for num in range(1, 10000):
    total = 0
    for i in range(1, num):
        iterator += 1
        if num % i == 0:
            seed(i)
            total += randint(1, num)
        if total > num:
            break
    if total == num:
        flukyCount += 1
        print(num)
    if flukyCount == 7:
        break

# Print results 
print(f""Total Time: {time()-startTime} seconds"")
print(f""Total Loops: {iterator}"")

","","45","1612852805868","task3.py",""
"a","Backspace","","","1612852822817","task3.py",""
"e","","""","568","1612852822862","task3.py",""
"e","o","","568","1612852823236","task3.py",""
"k","o","","569","1612852823241","task3.py",""
"e","r","","569","1612852823353","task3.py",""
"k","r","","570","1612852823354","task3.py",""
"e","m","","570","1612852823527","task3.py",""
"k","m","","571","1612852823530","task3.py",""
"e","a","","571","1612852823654","task3.py",""
"k","a","","572","1612852823655","task3.py",""
"e","t","","572","1612852823724","task3.py",""
"k","t","","573","1612852823725","task3.py",""
"e","(","","573","1612852824683","task3.py",""
"k","(","","574","1612852824684","task3.py",""
"e",")","","614","1612852828223","task3.py",""
"k",")","","615","1612852828224","task3.py",""
"e","""","","574","1612852833937","task3.py",""
"k","""","","575","1612852833938","task3.py",""
"a","Undo Typing","","","1612852839479","task3.py",""
"e","","""","574","1612852839504","task3.py",""
"a","Undo Typing","","","1612852839756","task3.py",""
"a","Undo Typing","","","1612852840046","task3.py",""
"e","",")","614","1612852840058","task3.py",""
"a","Undo Typing","","","1612852841705","task3.py",""
"a","Undo Typing","","","1612852842574","task3.py",""
"e","","(","573","1612852842586","task3.py",""
"e","","t","572","1612852842594","task3.py",""
"e","","a","571","1612852842602","task3.py",""
"e","","m","570","1612852842609","task3.py",""
"e","","r","569","1612852842615","task3.py",""
"e","","o","568","1612852842623","task3.py",""
"a","Undo Backspace","","","1612852843745","task3.py",""
"e","""","","568","1612852843758","task3.py",""
"a","Close Active Editor","","","1612852856051","task3.py",""
"a","EditorChange","","","1612852860292","task3.py",""
"a","Paste","","","1612852870454","task4.py",""
"p","# Phil Fernberg
# CS 1400 - L01
# Assignment 3 - Task 4 The Zookeeper Statistician

# Import modules
from random import randint
import sys

# Variables
el1 = randint(1, 6)
el2 = randint(1, 6)
spotOne = 0
spotBoth = 0
spotNone = 0

# Test incidences of spotting elephants
for i in range(1, 100001):
    print(i)
    zookeep = randint(1, 6)
    if zookeep == el1 == el2: #There must be something wrong here because I keep getting zero for results
        spotBoth += 1
    elif (zookeep == el1 and not zookeep == el2) or (zookeep == el2 and not zookeep == el1):
        spotOne += 1
    else:
        spotNone += 1
    print(spotOne, spotBoth, spotNone)

spotOnePct = spotOne/100000
spotBothPct = spotBoth/spotOne
spotNonePct = spotNone/100000

print(""The zookeeper spotted at least one elephant "" + str(round(spotOnePct * 100, 2)) + ""% of the time"")
print(""Each time he saw an elephant, he saw the other in the same pen "" + str(round(spotBothPct * 100, 2)) + ""% of the time"")

# if eval(input(""Do you want to run the simulation again (yes or no): "")) == yes: 
# #couldn't find where to do this in modules or documentation
    
","","0","1612852870455","task4.py",""
"e","","??","45","1612852870508","task4.py",""
"e","3 - Task 4 The Zookeeper Statistician

# Import modules
from random import randint
import sys

# Variables
el1 = randint(1, 6)
el2 = randint(1, 6)
spotOne = 0
spotBoth = 0
spotNone = 0

# Test incidences of spotting elephants
for i in range(1, 100001):
    print(i)
    zookeep = randint(1, 6)
    if zookeep == el1 == el2: #There must be something wrong here because I keep getting zero for results
        spotBoth += 1
    elif (zookeep == el1 and not zookeep == el2) or (zookeep == el2 and not zookeep == el1):
        spotOne += 1
    else:
        spotNone += 1
    print(spotOne, spotBoth, spotNone)

spotOnePct = spotOne/100000
spotBothPct = spotBoth/spotOne
spotNonePct = spotNone/100000

print(""The zookeeper spotted at least one elephant "" + str(round(spotOnePct * 100, 2)) + ""% of the time"")
print(""Each time he saw an elephant, he saw the other in the same pen "" + str(round(spotBothPct * 100, 2)) + ""% of the time"")

# if eval(input(""Do you want to run the simulation again (yes or no): "")) == yes: 
# #couldn't find where to do this in modules or documentation

","","45","1612852870509","task4.py",""
"e"," ","","370","1612852870561","task4.py",""
"e"," ","","368","1612852870594","task4.py",""
"e"," ","","675","1612852870608","task4.py",""
"e"," ","","677","1612852870620","task4.py",""
"e"," ","","707","1612852870633","task4.py",""
"e"," ","","709","1612852870646","task4.py",""
"e"," ","","740","1612852870658","task4.py",""
"e"," ","","742","1612852870670","task4.py",""
"e","
    ","","935","1612852870687","task4.py",""
"a","Close Active Editor","","","1612852877215","task4.py",""
"e","#","","619","1612852928752","task4.py",""
"k","#","","620","1612852928753","task4.py",""
"e"," ","","620","1612852929876","task4.py",""
"k"," ","","621","1612852929878","task4.py",""
"a","Backspace","","","1612852948042","task4.py",""
"e","","print(i)","302","1612852948063","task4.py",""
"a","Backspace","","","1612852948419","task4.py",""
"e",""," ","301","1612852948439","task4.py",""
"e","","   ","298","1612852948450","task4.py",""
"a","Backspace","","","1612852948601","task4.py",""
"e","","
","298","1612852948622","task4.py",""
"a","Close Active Editor","","","1612852963282","task4.py",""
"e","""","","500","1612853056055","task3.py",""
"k","""","","501","1612853056056","task3.py",""
"e","F","","501","1612853056603","task3.py",""
"k","F","","502","1612853056603","task3.py",""
"e","l","","502","1612853056777","task3.py",""
"k","l","","503","1612853056777","task3.py",""
"e","u","","503","1612853057000","task3.py",""
"k","u","","504","1612853057001","task3.py",""
"e","k","","504","1612853057148","task3.py",""
"k","k","","505","1612853057148","task3.py",""
"e","y","","505","1612853057292","task3.py",""
"k","y","","506","1612853057293","task3.py",""
"e"," ","","506","1612853057398","task3.py",""
"k"," ","","507","1612853057400","task3.py",""
"e","n","","507","1612853058863","task3.py",""
"k","n","","508","1612853058863","task3.py",""
"e","u","","508","1612853059068","task3.py",""
"k","u","","509","1612853059069","task3.py",""
"e","m","","509","1612853059251","task3.py",""
"k","m","","510","1612853059251","task3.py",""
"e","b","","510","1612853059457","task3.py",""
"k","b","","511","1612853059457","task3.py",""
"e","e","","511","1612853059529","task3.py",""
"k","e","","512","1612853059530","task3.py",""
"e","r","","512","1612853059598","task3.py",""
"k","r","","513","1612853059599","task3.py",""
"e",":","","513","1612853060648","task3.py",""
"k",":","","514","1612853060649","task3.py",""
"e"," ","","514","1612853060783","task3.py",""
"k"," ","","515","1612853060783","task3.py",""
"a","Backspace","","","1612853061770","task3.py",""
"e",""," ","514","1612853061783","task3.py",""
"e"," ","","514","1612853062685","task3.py",""
"k"," ","","515","1612853062686","task3.py",""
"e","""","","515","1612853062851","task3.py",""
"k","""","","516","1612853062851","task3.py",""
"e"," ","","516","1612853063080","task3.py",""
"k"," ","","517","1612853063080","task3.py",""
"e","+","","517","1612853064006","task3.py",""
"k","+","","518","1612853064006","task3.py",""
"e"," ","","518","1612853064231","task3.py",""
"k"," ","","519","1612853064232","task3.py",""
"e","s","","519","1612853083666","task3.py",""
"k","s","","520","1612853083667","task3.py",""
"e","t","","520","1612853083797","task3.py",""
"k","t","","521","1612853083810","task3.py",""
"e","r","","521","1612853083899","task3.py",""
"k","r","","522","1612853083920","task3.py",""
"e","(","","522","1612853084894","task3.py",""
"k","(","","523","1612853084895","task3.py",""
"a","Right","","","1612853086133","task3.py",""
"a","Right","","","1612853086305","task3.py",""
"a","Right","","","1612853086461","task3.py",""
"a","Right","","","1612853086655","task3.py",""
"e",")","","527","1612853087478","task3.py",""
"k",")","","528","1612853087479","task3.py",""
"a","Close Active Editor","","","1612853102591","task3.py",""
"a","Close Active Editor","","","1612853159664","task3.py",""
"a","Close Active Editor","","","1612853182181","task3.py",""
"a","Creating file C:\Users\Phil\USU\Phil Fernberg PhD - General\USU Coursework\CS1400\Assignments\Fernberg-Phil-Assn3\plan1.txt","","","1612853223780","task3.py",""
"a","Creating file C:\Users\Phil\USU\Phil Fernberg PhD - General\USU Coursework\CS1400\Assignments\Fernberg-Phil-Assn3\plan2.txt","","","1612853236087","task3.py",""
"a","Creating file C:\Users\Phil\USU\Phil Fernberg PhD - General\USU Coursework\CS1400\Assignments\Fernberg-Phil-Assn3\plan3.txt","","","1612853248055","task3.py",""
"a","Creating file C:\Users\Phil\USU\Phil Fernberg PhD - General\USU Coursework\CS1400\Assignments\Fernberg-Phil-Assn3\plan4.txt","","","1612853268765","task3.py",""
"a","EditorChange","","","1612853302302","task3.py",""
"a","Paste","","","1612853303600","plan1.txt",""
"p","# Phil Fernberg
# CS 1400 - L01
# Assignment 3 - Task 1

Task 1 Development Plan

Requirement Specs
    User guesses a number between 1-10, sees whether they guessed right, and what their guessing skills says about their Jedi powers.

System Analysis
    Generate random number using module
    Compare with user input to see if it is =, <, or >, and by how much

System Design
    Generate Welcome Message
    Generate Random Integer between 1-10
    Ask for user guess (num 1-10)
    Compare input with generated number
    Assemble results according to guess proximity
    Print result message

Implementation
    import random
    <var1> = random.randint(1, 10)

    print(""Welcome...""
    <var2> = eval(input(""What is your guess: ""))

    msg = ""\nYou picked "" + str(guess) + "", and the actual number was "" + str(num) + "". \n""
    if guess == num:
        msg += ""Honored to play with you, Master.""
    elif guess == (num - 1) or guess == (num + 1):
        msg += ""You are a worthy opponent, Knight.""
    elif guess == (num - 2) or guess == (num + 2):
        msg += ""You have much to learn, Padawan.""
    elif guess == (num - 3) or guess == (num + 3):
        msg += ""Youngling, your time will come.""
    elif guess < (num - 3) or guess > (num + 3):
        msg += ""Keep working hard in the Service Corps. Youngling, your time will come""

    print(msg)","","0","1612853303634","plan1.txt",""
"e","# Phil Fernberg
# CS 1400 - L01
# Assignment 3 - Task 1

Task 1 Development Plan

Requirement Specs
    User guesses a number between 1-10, sees whether they guessed right, and what their guessing skills says about their Jedi powers.

System Analysis
    Generate random number using module
    Compare with user input to see if it is =, <, or >, and by how much

System Design
    Generate Welcome Message
    Generate Random Integer between 1-10
    Ask for user guess (num 1-10)
    Compare input with generated number
    Assemble results according to guess proximity
    Print result message

Implementation
    import random
    <var1> = random.randint(1, 10)

    print(""Welcome...""
    <var2> = eval(input(""What is your guess: ""))

    msg = ""\nYou picked "" + str(guess) + "", and the actual number was "" + str(num) + "". \n""
    if guess == num:
        msg += ""Honored to play with you, Master.""
    elif guess == (num - 1) or guess == (num + 1):
        msg += ""You are a worthy opponent, Knight.""
    elif guess == (num - 2) or guess == (num + 2):
        msg += ""You have much to learn, Padawan.""
    elif guess == (num - 3) or guess == (num + 3):
        msg += ""Youngling, your time will come.""
    elif guess < (num - 3) or guess > (num + 3):
        msg += ""Keep working hard in the Service Corps. Youngling, your time will come""

    print(msg)","","0","1612853303643","plan1.txt",""
"a","Close Active Editor","","","1612853307141","plan1.txt",""
"a","Paste","","","1612853318657","plan2.txt",""
"p","# Phil Fernberg
# CS 1400 - L01
# Assignment 3 - Task 2 Social Situation Analysis

Task 2 Software Development Plan

Req Specs
    One user inputs name, location, and radius of their personal space. Second user does the same. Then the users see if they have someone in their personal space and what the relationships are between their personal spaces.

System Analysis
   pythagorean theorem to find distance between
   calculate if dist > or < rad of other
   calculate if sum of rads < dist
   if sum of dist and rad < other rad

System Design
    Welcome message
    Get user 1 inputs (name, pos, rad)
    Get user 2 inputs (name, pos, rad)
    Analyze person test
    Analyze space test
    print results

Implementation
    print(""Welcome to the Social Situation Analyzer System""

    name1 = eval(input(""Enter your name: ""))
    pos1 = eval(input(""Enter your position (x, y): ""))
    rad1 = eval(input(""Enter your personal space radius: ""))

    msg = ""Person Test: ""
    if pos1 in rad2:
       add to message
       etc

    msg += ""\n Space Test: ""
    if rad1 is in rad2:
        add to message
        etc

    print result


","","0","1612853318661","plan2.txt",""
"e","# Phil Fernberg
# CS 1400 - L01
# Assignment 3 - Task 2 Social Situation Analysis

Task 2 Software Development Plan

Req Specs
    One user inputs name, location, and radius of their personal space. Second user does the same. Then the users see if they have someone in their personal space and what the relationships are between their personal spaces.

System Analysis
   pythagorean theorem to find distance between
   calculate if dist > or < rad of other
   calculate if sum of rads < dist
   if sum of dist and rad < other rad

System Design
    Welcome message
    Get user 1 inputs (name, pos, rad)
    Get user 2 inputs (name, pos, rad)
    Analyze person test
    Analyze space test
    print results

Implementation
    print(""Welcome to the Social Situation Analyzer System""

    name1 = eval(input(""Enter your name: ""))
    pos1 = eval(input(""Enter your position (x, y): ""))
    rad1 = eval(input(""Enter your personal space radius: ""))

    msg = ""Person Test: ""
    if pos1 in rad2:
       add to message
       etc

    msg += ""\n Space Test: ""
    if rad1 is in rad2:
        add to message
        etc

    print result


","","0","1612853318672","plan2.txt",""
"a","Close Active Editor","","","1612853322006","plan2.txt",""
"a","Paste","","","1612853333289","plan3.txt",""
"p","# Phil Fernberg
# CS 1400 - L01
# Assignment 3 - Task 3 Fluky Numbers

Task 3 Software Development Plan

Requirement Specifications
    None, user watches while program works

System Analysis
    Find all Fluky numbers from 1 to 10000
    find if num is equal to a random set of numbers in the range of 1 to the number
    rand nums come from setting specific seed values with the factors of the number, not including itself

System Design
    import appropriate modules
    begin for loop in range(1, 10000)
        find factors for each number
        see if random numbers run from factors as seed values add up to humber itself
        if they do add to total number, if not go on
        break if total > num
    up Fluky count if total == num
    break when count == 7
    print total run time
    print number of loops

","","0","1612853333292","plan3.txt",""
"e","# Phil Fernberg
# CS 1400 - L01
# Assignment 3 - Task 3 Fluky Numbers

Task 3 Software Development Plan

Requirement Specifications
    None, user watches while program works

System Analysis
    Find all Fluky numbers from 1 to 10000
    find if num is equal to a random set of numbers in the range of 1 to the number
    rand nums come from setting specific seed values with the factors of the number, not including itself

System Design
    import appropriate modules
    begin for loop in range(1, 10000)
        find factors for each number
        see if random numbers run from factors as seed values add up to humber itself
        if they do add to total number, if not go on
        break if total > num
    up Fluky count if total == num
    break when count == 7
    print total run time
    print number of loops

","","0","1612853333307","plan3.txt",""
"a","Close Active Editor","","","1612853338916","plan3.txt",""
"a","Paste","","","1612853355448","plan4.txt",""
"p","# Phil Fernberg
# CS 1400 - L01
# Assignment 3 - Task 4 The Zookeeper Statistician

Task 4 Software Development Plan

Req Specs
    user chooses to run the simulation again or not

System Analysis
    calculate percentage of times out of 100,000 at least one elephant is in pen
    calc percentage of time both are in pen
    calc margin of error

System Design
    Import modules
    set variables for elephants to generate random number 1 - 6
    set variables for sighting counts
    for loop i in range 1, 100001
        set zookeep var also to randint 1-6
        if zookeeper saw both, up both count
        if he saw one, up one count
        if he saw none, up none count
    assign pct variables to each total
    print results
    prompt user to choose to run again
    if yes, run again
    if no, end


","","0","1612853355453","plan4.txt",""
"e","# Phil Fernberg
# CS 1400 - L01
# Assignment 3 - Task 4 The Zookeeper Statistician

Task 4 Software Development Plan

Req Specs
    user chooses to run the simulation again or not

System Analysis
    calculate percentage of times out of 100,000 at least one elephant is in pen
    calc percentage of time both are in pen
    calc margin of error

System Design
    Import modules
    set variables for elephants to generate random number 1 - 6
    set variables for sighting counts
    for loop i in range 1, 100001
        set zookeep var also to randint 1-6
        if zookeeper saw both, up both count
        if he saw one, up one count
        if he saw none, up none count
    assign pct variables to each total
    print results
    prompt user to choose to run again
    if yes, run again
    if no, end


","","0","1612853355470","plan4.txt",""
"a","Close Active Editor","","","1612853359231","plan4.txt",""
